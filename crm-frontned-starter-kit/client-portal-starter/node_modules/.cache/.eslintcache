[{"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/index.js":"1","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/App.js":"2","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/i18n.js":"3","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/NotificationPopup.js":"4","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/index.js":"5","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/serviceWorkerRegistration.js":"6","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/NonAuthLayout.js":"7","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/AppLoader.js":"8","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/middleware/Authmiddleware.js":"9","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/cryptoRoutes.js":"10","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/forexRoutes.js":"11","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/index.js":"12","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/context/index.js":"13","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/config.js":"14","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/reducers.js":"15","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/sagas.js":"16","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/actions.js":"17","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/constants.js":"18","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/formatReceivedNotification.js":"19","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/nonAuthRoutes.js":"20","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Header.js":"21","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar.js":"22","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/ForexFooter.js":"23","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/CryptoFooter.js":"24","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/index.js":"25","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/index.js":"26","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/context/context.js":"27","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/reducers.js":"28","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sagas.js":"29","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/sagas.js":"30","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/reducers.js":"31","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/sagas.js":"32","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/saga.js":"33","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/reducer.js":"34","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/reducers.js":"35","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/actions.js":"36","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/actions.js":"37","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/actions.js":"38","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/actions.js":"39","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/index.js":"40","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/QuickBuy/index.js":"41","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Wallet/index.js":"42","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Referral/index.js":"43","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/index.js":"44","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/test/index.js":"45","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/2FA/index.js":"46","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/index.js":"47","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Login.js":"48","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/actionTypes.js":"49","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/BankAccounts/BankAccounts.js":"50","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/index.js":"51","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/TradingAccount/index.js":"52","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/BankAccounts/BankAccounts.js":"53","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/hooks/useWindowDimensions.js":"54","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/ForexSiderbarContent.js":"55","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Crypto.js":"56","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Withdrawals/WithdrawModals.js":"57","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Wallets/Wallet.js":"58","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/JourneyModals.js":"59","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Forex/Forex.js":"60","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Deposits/DepositModals.js":"61","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/socket/index.js":"62","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/Withdrawals.js":"63","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/Deposits.js":"64","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Wallet/index.js":"65","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Activities/index.js":"66","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/index.js":"67","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Notifications/index.js":"68","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/index.js":"69","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/InternalTransfer/index.js":"70","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Withdraw/index.js":"71","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Reports/index.js":"72","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/index.js":"73","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Platforms/index.js":"74","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/index.js":"75","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Activites/index.js":"76","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Statement/index.js":"77","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebTrader/index.js":"78","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebFeed/index.js":"79","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebCalender/index.js":"80","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/TradingOppurtunities/index.js":"81","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/InternalTransfer/index.js":"82","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/index.js":"83","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Referrals/index.js":"84","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/RequestPartnership/index.js":"85","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/index.js":"86","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/ChangePassword/index.js":"87","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/actionTypes.js":"88","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/content.js":"89","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/actions.js":"90","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/actions.js":"91","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/actions.js":"92","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/ChartContainer.js":"93","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/assetImgSrc.js":"94","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/TradeHistory.js":"95","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/OrderHistory.js":"96","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/NewOrder.js":"97","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CardWrapper.js":"98","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/OrderBooks.js":"99","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/Fiat/FiatWithdraw.js":"100","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/index.jsx":"101","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/Crypto/CryptoWithdraw.js":"102","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Convert/Convert.js":"103","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Withdrawals/SelectWithdrawalMethodModal.js":"104","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Deposits/SelectDepositMethodModal.js":"105","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Wallets/Transfer.js":"106","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BankAccounts/AddBankAccountModal.js":"107","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomTable.js":"108","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Crypto/CryptoDeposit.js":"109","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/actions.js":"110","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/actions.js":"111","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/OneAccountView.js":"112","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/TradingAccounts.js":"113","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/TradingActivity.js":"114","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/Clients.js":"115","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Referrals/RecursiveTableRows.js":"116","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/AgreementDetails.js":"117","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/DedicatedLinks.js":"118","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/bankAccounts.js":"119","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js":"120","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/actionTypes.js":"121","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/actionTypes.js":"122","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/actions.js":"123","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/actions.js":"124","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/actionTypes.js":"125","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/Chart.js":"126","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/calculateFee.js":"127","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/actions.js":"128","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/ib.js":"129","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/Details.js":"130","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/index.js":"131","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/MT5/withdrawalConfig.js":"132","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomModal.js":"133","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/calculateTranFee.js":"134","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/withdraw.js":"135","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/StartTrading.js":"136","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/KYCProgress.js":"137","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/IbQuestionaire.js":"138","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/LeverageModal.js":"139","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/UploadKycModal.js":"140","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Deposit.js":"141","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/tradingviewChart.jsx":"142","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/MT5/Mt5.js":"143","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Deposit/SelectDepositMethod.js":"144","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Accounts/SelectAccType.js":"145","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Accounts/CreateAccModal.js":"146","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/TwoFactorAuth/index.js":"147","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/IbNotApproved.js":"148","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomSelect.js":"149","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/captalize.js":"150","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/Loader.js":"151","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/actions.js":"152","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/TableLoader.js":"153","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/PageHeader.js":"154","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/pageHeader2.js":"155","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/actionTypes.js":"156","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/actionTypes.js":"157","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/Accounts.js":"158","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Referrals/AllAccountsModal.js":"159","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/links.js":"160","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/AvFieldSelect.js":"161","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/actionTypes.js":"162","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/languages.js":"163","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/actionTypes.js":"164","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/klines.js":"165","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/uploadPdf.js":"166","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/validations/file.js":"167","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/api_helper.js":"168","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/actionTypes.js":"169","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/SellTab.js":"170","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/BuyTab.js":"171","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/index.js":"172","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/AssetsListSelect.js":"173","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/NetworksListSelect.js":"174","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/datafeed.js":"175","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/actions.js":"176","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/actions.js":"177","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/WalletsListSelect.js":"178","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Deposit/DepositTabs.js":"179","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/StageTwo.js":"180","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/Crypto.js":"181","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/EpaymeForm.js":"182","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/PerfectMoney.js":"183","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/OlxForex.js":"184","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/A3tmad.js":"185","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/handlers.js":"186","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/Others.js":"187","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Applications/PdfOfVisa.js":"188","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/Details/index.js":"189","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/actionTypes.js":"190","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomPagination.js":"191","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/actions.js":"192","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/url_helper.js":"193","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/countries.js":"194","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/IndvidualProfile.js":"195","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/data/jourenykeys.js":"196","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/priceData.js":"197","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/actionTypes.js":"198","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/actionTypes.js":"199","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/MT5/Mt5Details.js":"200","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Fiat/FiatFormDetails.js":"201","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/actionTypes.js":"202","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/index.js":"203","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/deposit.js":"204","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/Declerations.js":"205","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/AuthorizedPerson.js":"206","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/Personnels.js":"207","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/GeneralInfo.js":"208","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/declarations.js":"209","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/actions.js":"210","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/data/dropdowns.js":"211","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/actionTypes.js":"212","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/VisaMaster/CheckKYC.js":"213","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/VisaMaster/SelfieCamera/SelfieCamera.js":"214","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/WireTransfer.js":"215","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/allowedMethods.js":"216","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/VisaMaster/Signature/Signature.js":"217","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/actions.js":"218","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebTrader/WebTrader.js":"219","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebTrader/Disclamer.js":"220","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Statement/ListDeals.js":"221","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Statement/Filteration.js":"222","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/PreviewPDF.js":"223","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/generatePDF.js":"224","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Platforms/Platform.js":"225","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/actions.js":"226","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/CryptoForm.js":"227","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/WireTransferForm.js":"228","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/WireTransfer.js":"229","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Reports/FxReport.js":"230","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Reports/WalletReport.js":"231","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/Transfers.js":"232","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/OpenPosition.js":"233","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/ClosedPositions.js":"234","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Notifications/NotificationSettings.js":"235","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Notifications/NotificationList.js":"236","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/ProfileDetails.js":"237","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/getLogMessages.js":"238","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/journey.js":"239","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/actionTypes.js":"240","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/socket/events.js":"241","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Journey.js":"242","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/CardHeader.js":"243","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/forexSidebar.js":"244","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/Pdf.js":"245","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/actionTypes.js":"246","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/Widgets.js":"247","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/ProfileAvatar.js":"248","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/clientPortal/ClientPortalDashboard.js":"249","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomInput.js":"250","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/nationalitites.js":"251","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/ChangePassword.js":"252","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BalanceView/BalanceView.js":"253","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/OrderFilter.js":"254","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/DepositFilters.js":"255","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/ConvertFilters.js":"256","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/WithdrawalFilters.js":"257","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/AllFilters.js":"258","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Orders.js":"259","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Convert.js":"260","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Deposits.js":"261","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Withdrawals.js":"262","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CryptoCard.js":"263","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Transactions.js":"264","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/DocumentsCorpUpload.js":"265","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/DocumentsUpload.js":"266","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/DocumnetsList.js":"267","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/DeleteModal.js":"268","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/hooks/useModal.js":"269","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/actions.js":"270","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/actions.js":"271","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/actions.js":"272","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/actions.js":"273","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/actions.js":"274","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/Badge.js":"275","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/actions.js":"276","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/actions.js":"277","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/actions.js":"278","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/actions.js":"279","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/actions.js":"280","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/tradingSvg.js":"281","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/feedSvg.js":"282","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/calenderSvg.js":"283","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/investorSvg.js":"284","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomDropDown.js":"285","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BankAccounts/ShowDetails.js":"286","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BankAccounts/EditBankAccountModal.js":"287","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/masterSvg.js":"288","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/historySvg.js":"289","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/documentSvg.js":"290","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/inventorySvg.js":"291","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/ibTransferSvg.js":"292","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/profileSvg.js":"293","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/affiliateSvg.js":"294","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/IbPortal/index.js":"295","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/reportSvg.js":"296","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/Silder.js":"297","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/partnershipSvg.js":"298","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/webTraderSvg.js":"299","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/platformSvg.js":"300","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/transferSvg.js":"301","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/helpers.js":"302","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/Sumsub/index.js":"303","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/depositSvg.js":"304","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/moneyBagSvg.js":"305","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/withdrawSvg.js":"306","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/walletSvg.js":"307","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/accountSvg.js":"308","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/dotSvg.js":"309","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/actions.js":"310","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/dashboardSvg.js":"311","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/actions.js":"312","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/reducers.js":"313","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/actions.js":"314","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/reducer.js":"315","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sockets/actions.js":"316","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/actions.js":"317","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/actions.js":"318","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/actions.js":"319","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/actions.js":"320","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/actions.js":"321","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/reducer.js":"322","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ForexLayout/reducer.js":"323","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ForexLayout/actions.js":"324","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/SplineArea.js":"325","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/wallets.js":"326","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/sagas.js":"327","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/saga.js":"328","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/saga.js":"329","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/actionTypes.js":"330","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/actionTypes.js":"331","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/actionTypes.js":"332","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/actionTypes.js":"333","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/actionTypes.js":"334","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/actionTypes.js":"335","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/actionTypes.js":"336","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/actionTypes.js":"337","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/actionTypes.js":"338","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/actionTypes.js":"339","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/saga.js":"340","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/reducer.js":"341","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/reducer.js":"342","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/reducer.js":"343","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/reducer.js":"344","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/reducer.js":"345","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/reducer.js":"346","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/saga.js":"347","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/reducer.js":"348","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/reducer.js":"349","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/reducer.js":"350","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/reducer.js":"351","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/reducer.js":"352","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/reducer.js":"353","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/reducer.js":"354","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/reducer.js":"355","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Slider/DefaultSlider.js":"356","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/actions.js":"357","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/IbPortal/LiveAndDemoClients.js":"358","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/IbPortal/Summary.js":"359","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/reducer.js":"360","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/saga.js":"361","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/saga.js":"362","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/actions.js":"363","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/saga.js":"364","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/actionTypes.js":"365","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/reducer.js":"366","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sockets/actionTypes.js":"367","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/actionTypes.js":"368","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/actionTypes.js":"369","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/actionTypes.js":"370","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ForexLayout/actionTypes.js":"371","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/actionTypes.js":"372","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/actionTypes.js":"373","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/reducer.js":"374","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/reducer.js":"375","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/saga.js":"376","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/actionTypes.js":"377","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/actions.js":"378","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/saga.js":"379","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/saga.js":"380","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/saga.js":"381","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/saga.js":"382","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/saga.js":"383","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/saga.js":"384","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/saga.js":"385","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/saga.js":"386","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/saga.js":"387","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/saga.js":"388","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/saga.js":"389","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/saga.js":"390","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/saga.js":"391","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/saga.js":"392","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/saga.js":"393","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/saga.js":"394","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Widget/index.js":"395","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/IBJourney.js":"396","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/saga.js":"397","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/saga.js":"398","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/saga.js":"399","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sockets/saga.js":"400","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/saga.js":"401","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/saga.js":"402","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/accounts.js":"403","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/saga.js":"404","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/saga.js":"405","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/saga.js":"406","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/saga.js":"407","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/saga.js":"408","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/saga.js":"409","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/reducer.js":"410","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/reducer.js":"411","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/reducer.js":"412","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/reducer.js":"413","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/actionsType.js":"414","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/reducer.js":"415","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/reducer.js":"416","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/reducer.js":"417","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/reducer.js":"418","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/reducer.js":"419","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/reducer.js":"420","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/sumsub.js":"421","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/reducer.js":"422","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/reducer.js":"423","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/reducer.js":"424","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/reducer.js":"425","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/requests.js":"426","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/actionTypes.js":"427","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/transactions.js":"428","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/fakebackend_helper.js":"429","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/markets.js":"430","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/orders.js":"431","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/orderBooks.js":"432","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/notifications.js":"433","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/conversionRate.js":"434","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/subscriptions.js":"435","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/dictionary.js":"436","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/reducer.js":"437","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/constants/layout.js":"438","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/assets.js":"439","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/register.js":"440","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/profile.js":"441","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/auth.js":"442","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/documents.js":"443","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/logs.js":"444","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/convert.js":"445","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/transactions.js":"446","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/url_helper.js":"447","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/api_helper.js":"448","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/resetPassword.js":"449","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/jwt-token-access/accessToken.js":"450","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/Slider.js":"451","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/RightContent/index.js":"452","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/CryptoData.js":"453","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/PortalEntryPoint.js":"454","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/CryptoSidebarContent.js":"455","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/index.js":"456","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js":"457","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/RightSidebar.js":"458","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/Menus/LightDark.js":"459","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js":"460","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Page404.js":"461","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/ForgetPassword.js":"462","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Logout.js":"463","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Crypto/CryptoDemoRegister.js":"464","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/RightContent/WalletCard.js":"465","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/RightContent/LatestActivities.js":"466","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/NotificationDropdownItem.js":"467","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/ResetPassword.js":"468","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Crypto/CryptoLiveRegister.js":"469","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/CorpRegisterIB.js":"470","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/CorpRegister.js":"471","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/ForexDemoRegister.js":"472","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/ForexIbRegister.js":"473","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/ForexLiveRegister.js":"474","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/CarouselPage.js":"475","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/campaignUnsubscribe/index.js":"476","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/ApexCharts/RadialChart.js":"477","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/validateEmail.js":"478","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/EmailPinField.js":"479","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/campaign.js":"480"},{"size":757,"mtime":1758638278461,"results":"481","hashOfConfig":"482"},{"size":2992,"mtime":1758638278460,"results":"483","hashOfConfig":"482"},{"size":1769,"mtime":1758638278461,"results":"484","hashOfConfig":"482"},{"size":7708,"mtime":1758638278773,"results":"485","hashOfConfig":"482"},{"size":860,"mtime":1758638278933,"results":"486","hashOfConfig":"482"},{"size":9004,"mtime":1758638278462,"results":"487","hashOfConfig":"482"},{"size":350,"mtime":1758638278813,"results":"488","hashOfConfig":"482"},{"size":1174,"mtime":1758638278812,"results":"489","hashOfConfig":"482"},{"size":864,"mtime":1758638278895,"results":"490","hashOfConfig":"482"},{"size":1977,"mtime":1758638278895,"results":"491","hashOfConfig":"482"},{"size":4333,"mtime":1758638278895,"results":"492","hashOfConfig":"482"},{"size":5496,"mtime":1758638278804,"results":"493","hashOfConfig":"482"},{"size":611,"mtime":1758638278816,"results":"494","hashOfConfig":"482"},{"size":3150,"mtime":1758638278460,"results":"495","hashOfConfig":"482"},{"size":725,"mtime":1758638278934,"results":"496","hashOfConfig":"482"},{"size":362,"mtime":1758638278934,"results":"497","hashOfConfig":"482"},{"size":136,"mtime":1758638278933,"results":"498","hashOfConfig":"482"},{"size":2197,"mtime":1758638278766,"results":"499","hashOfConfig":"482"},{"size":342,"mtime":1758638278825,"results":"500","hashOfConfig":"482"},{"size":2199,"mtime":1758638278895,"results":"501","hashOfConfig":"482"},{"size":6085,"mtime":1758638278803,"results":"502","hashOfConfig":"482"},{"size":1289,"mtime":1758638278803,"results":"503","hashOfConfig":"482"},{"size":1365,"mtime":1758638278803,"results":"504","hashOfConfig":"482"},{"size":1132,"mtime":1758638278802,"results":"505","hashOfConfig":"482"},{"size":3662,"mtime":1758638278864,"results":"506","hashOfConfig":"482"},{"size":503,"mtime":1758638278795,"results":"507","hashOfConfig":"482"},{"size":209,"mtime":1758638278815,"results":"508","hashOfConfig":"482"},{"size":1079,"mtime":1758638278911,"results":"509","hashOfConfig":"482"},{"size":1270,"mtime":1758638278932,"results":"510","hashOfConfig":"482"},{"size":1129,"mtime":1758638278911,"results":"511","hashOfConfig":"482"},{"size":1373,"mtime":1758638278932,"results":"512","hashOfConfig":"482"},{"size":432,"mtime":1758638278917,"results":"513","hashOfConfig":"482"},{"size":2254,"mtime":1758638278933,"results":"514","hashOfConfig":"482"},{"size":2401,"mtime":1758638278933,"results":"515","hashOfConfig":"482"},{"size":345,"mtime":1758638278917,"results":"516","hashOfConfig":"482"},{"size":140,"mtime":1758638278917,"results":"517","hashOfConfig":"482"},{"size":501,"mtime":1758638278932,"results":"518","hashOfConfig":"482"},{"size":391,"mtime":1758638278911,"results":"519","hashOfConfig":"482"},{"size":1905,"mtime":1758638278933,"results":"520","hashOfConfig":"482"},{"size":3143,"mtime":1758638278872,"results":"521","hashOfConfig":"482"},{"size":4235,"mtime":1758638278869,"results":"522","hashOfConfig":"482"},{"size":14460,"mtime":1758638278870,"results":"523","hashOfConfig":"482"},{"size":2967,"mtime":1758638278869,"results":"524","hashOfConfig":"482"},{"size":4466,"mtime":1758638278869,"results":"525","hashOfConfig":"482"},{"size":2404,"mtime":1758638278870,"results":"526","hashOfConfig":"482"},{"size":6520,"mtime":1758638278842,"results":"527","hashOfConfig":"482"},{"size":5255,"mtime":1758638278866,"results":"528","hashOfConfig":"482"},{"size":7582,"mtime":1758638278854,"results":"529","hashOfConfig":"482"},{"size":276,"mtime":1758638278921,"results":"530","hashOfConfig":"482"},{"size":5022,"mtime":1758638278860,"results":"531","hashOfConfig":"482"},{"size":1487,"mtime":1758638278879,"results":"532","hashOfConfig":"482"},{"size":7254,"mtime":1758638278887,"results":"533","hashOfConfig":"482"},{"size":5246,"mtime":1758638278876,"results":"534","hashOfConfig":"482"},{"size":584,"mtime":1758638278833,"results":"535","hashOfConfig":"482"},{"size":7189,"mtime":1758638278802,"results":"536","hashOfConfig":"482"},{"size":2602,"mtime":1758638278795,"results":"537","hashOfConfig":"482"},{"size":1309,"mtime":1758638278794,"results":"538","hashOfConfig":"482"},{"size":615,"mtime":1758638278794,"results":"539","hashOfConfig":"482"},{"size":2697,"mtime":1758638278795,"results":"540","hashOfConfig":"482"},{"size":1465,"mtime":1758638278793,"results":"541","hashOfConfig":"482"},{"size":1093,"mtime":1758638278792,"results":"542","hashOfConfig":"482"},{"size":371,"mtime":1758638278896,"results":"543","hashOfConfig":"482"},{"size":1891,"mtime":1758638278864,"results":"544","hashOfConfig":"482"},{"size":1838,"mtime":1758638278863,"results":"545","hashOfConfig":"482"},{"size":7363,"mtime":1758638278894,"results":"546","hashOfConfig":"482"},{"size":2530,"mtime":1758638278859,"results":"547","hashOfConfig":"482"},{"size":1396,"mtime":1758638278850,"results":"548","hashOfConfig":"482"},{"size":3647,"mtime":1758638278846,"results":"549","hashOfConfig":"482"},{"size":1980,"mtime":1758638278874,"results":"550","hashOfConfig":"482"},{"size":3758,"mtime":1758638278880,"results":"551","hashOfConfig":"482"},{"size":11298,"mtime":1758638278893,"results":"552","hashOfConfig":"482"},{"size":657,"mtime":1758638278886,"results":"553","hashOfConfig":"482"},{"size":2331,"mtime":1758638278880,"results":"554","hashOfConfig":"482"},{"size":3188,"mtime":1758638278885,"results":"555","hashOfConfig":"482"},{"size":2132,"mtime":1758638278875,"results":"556","hashOfConfig":"482"},{"size":3529,"mtime":1758638278874,"results":"557","hashOfConfig":"482"},{"size":1140,"mtime":1758638278887,"results":"558","hashOfConfig":"482"},{"size":977,"mtime":1758638278892,"results":"559","hashOfConfig":"482"},{"size":802,"mtime":1758638278890,"results":"560","hashOfConfig":"482"},{"size":1219,"mtime":1758638278890,"results":"561","hashOfConfig":"482"},{"size":731,"mtime":1758638278887,"results":"562","hashOfConfig":"482"},{"size":10914,"mtime":1758638278883,"results":"563","hashOfConfig":"482"},{"size":2397,"mtime":1758638278883,"results":"564","hashOfConfig":"482"},{"size":3425,"mtime":1758638278884,"results":"565","hashOfConfig":"482"},{"size":2088,"mtime":1758638278884,"results":"566","hashOfConfig":"482"},{"size":2448,"mtime":1758638278882,"results":"567","hashOfConfig":"482"},{"size":5318,"mtime":1758638278877,"results":"568","hashOfConfig":"482"},{"size":864,"mtime":1758638278933,"results":"569","hashOfConfig":"482"},{"size":805,"mtime":1758638278461,"results":"570","hashOfConfig":"482"},{"size":3967,"mtime":1758638278912,"results":"571","hashOfConfig":"482"},{"size":1940,"mtime":1758638278928,"results":"572","hashOfConfig":"482"},{"size":1741,"mtime":1758638278898,"results":"573","hashOfConfig":"482"},{"size":3543,"mtime":1758638278865,"results":"574","hashOfConfig":"482"},{"size":411,"mtime":1758638278822,"results":"575","hashOfConfig":"482"},{"size":2039,"mtime":1758638278866,"results":"576","hashOfConfig":"482"},{"size":3276,"mtime":1758638278866,"results":"577","hashOfConfig":"482"},{"size":10306,"mtime":1758638278865,"results":"578","hashOfConfig":"482"},{"size":239,"mtime":1758638278770,"results":"579","hashOfConfig":"482"},{"size":2105,"mtime":1758638278866,"results":"580","hashOfConfig":"482"},{"size":34420,"mtime":1758638278805,"results":"581","hashOfConfig":"482"},{"size":455,"mtime":1758638278888,"results":"582","hashOfConfig":"482"},{"size":11974,"mtime":1758638278804,"results":"583","hashOfConfig":"482"},{"size":13735,"mtime":1758638278777,"results":"584","hashOfConfig":"482"},{"size":4821,"mtime":1758638278794,"results":"585","hashOfConfig":"482"},{"size":4811,"mtime":1758638278793,"results":"586","hashOfConfig":"482"},{"size":9309,"mtime":1758638278794,"results":"587","hashOfConfig":"482"},{"size":11012,"mtime":1758638278768,"results":"588","hashOfConfig":"482"},{"size":1942,"mtime":1758638278771,"results":"589","hashOfConfig":"482"},{"size":4766,"mtime":1758638278777,"results":"590","hashOfConfig":"482"},{"size":589,"mtime":1758638278909,"results":"591","hashOfConfig":"482"},{"size":558,"mtime":1758638278908,"results":"592","hashOfConfig":"482"},{"size":2078,"mtime":1758638278873,"results":"593","hashOfConfig":"482"},{"size":3461,"mtime":1758638278882,"results":"594","hashOfConfig":"482"},{"size":5787,"mtime":1758638278882,"results":"595","hashOfConfig":"482"},{"size":6201,"mtime":1758638278881,"results":"596","hashOfConfig":"482"},{"size":2510,"mtime":1758638278884,"results":"597","hashOfConfig":"482"},{"size":3519,"mtime":1758638278883,"results":"598","hashOfConfig":"482"},{"size":2148,"mtime":1758638278883,"results":"599","hashOfConfig":"482"},{"size":1142,"mtime":1758638278464,"results":"600","hashOfConfig":"482"},{"size":2148,"mtime":1758638278775,"results":"601","hashOfConfig":"482"},{"size":1756,"mtime":1758638278912,"results":"602","hashOfConfig":"482"},{"size":934,"mtime":1758638278928,"results":"603","hashOfConfig":"482"},{"size":918,"mtime":1758638278925,"results":"604","hashOfConfig":"482"},{"size":2062,"mtime":1758638278930,"results":"605","hashOfConfig":"482"},{"size":912,"mtime":1758638278898,"results":"606","hashOfConfig":"482"},{"size":5074,"mtime":1758638278865,"results":"607","hashOfConfig":"482"},{"size":747,"mtime":1758638278822,"results":"608","hashOfConfig":"482"},{"size":687,"mtime":1758638278907,"results":"609","hashOfConfig":"482"},{"size":3313,"mtime":1758638278463,"results":"610","hashOfConfig":"482"},{"size":2631,"mtime":1758638278796,"results":"611","hashOfConfig":"482"},{"size":3856,"mtime":1758638278796,"results":"612","hashOfConfig":"482"},{"size":1199,"mtime":1758638278807,"results":"613","hashOfConfig":"482"},{"size":1474,"mtime":1758638278771,"results":"614","hashOfConfig":"482"},{"size":736,"mtime":1758638278823,"results":"615","hashOfConfig":"482"},{"size":1159,"mtime":1758638278468,"results":"616","hashOfConfig":"482"},{"size":2071,"mtime":1758638278791,"results":"617","hashOfConfig":"482"},{"size":1738,"mtime":1758638278791,"results":"618","hashOfConfig":"482"},{"size":6036,"mtime":1758638278790,"results":"619","hashOfConfig":"482"},{"size":3852,"mtime":1758638278873,"results":"620","hashOfConfig":"482"},{"size":2033,"mtime":1758638278791,"results":"621","hashOfConfig":"482"},{"size":18552,"mtime":1758638278783,"results":"622","hashOfConfig":"482"},{"size":1988,"mtime":1758638278889,"results":"623","hashOfConfig":"482"},{"size":40934,"mtime":1758638278806,"results":"624","hashOfConfig":"482"},{"size":863,"mtime":1758638278786,"results":"625","hashOfConfig":"482"},{"size":2625,"mtime":1758638278784,"results":"626","hashOfConfig":"482"},{"size":9267,"mtime":1758638278784,"results":"627","hashOfConfig":"482"},{"size":2879,"mtime":1758638278797,"results":"628","hashOfConfig":"482"},{"size":1128,"mtime":1758638278772,"results":"629","hashOfConfig":"482"},{"size":2384,"mtime":1758638278771,"results":"630","hashOfConfig":"482"},{"size":109,"mtime":1758638278823,"results":"631","hashOfConfig":"482"},{"size":747,"mtime":1758638278772,"results":"632","hashOfConfig":"482"},{"size":1001,"mtime":1758638278932,"results":"633","hashOfConfig":"482"},{"size":348,"mtime":1758638278773,"results":"634","hashOfConfig":"482"},{"size":4576,"mtime":1758638278785,"results":"635","hashOfConfig":"482"},{"size":908,"mtime":1758638278785,"results":"636","hashOfConfig":"482"},{"size":277,"mtime":1758638278909,"results":"637","hashOfConfig":"482"},{"size":256,"mtime":1758638278908,"results":"638","hashOfConfig":"482"},{"size":17664,"mtime":1758638278878,"results":"639","hashOfConfig":"482"},{"size":796,"mtime":1758638278884,"results":"640","hashOfConfig":"482"},{"size":285,"mtime":1758638278883,"results":"641","hashOfConfig":"482"},{"size":1394,"mtime":1758638278769,"results":"642","hashOfConfig":"482"},{"size":427,"mtime":1758638278925,"results":"643","hashOfConfig":"482"},{"size":735,"mtime":1758638278766,"results":"644","hashOfConfig":"482"},{"size":492,"mtime":1758638278930,"results":"645","hashOfConfig":"482"},{"size":564,"mtime":1758638278465,"results":"646","hashOfConfig":"482"},{"size":2385,"mtime":1758638278830,"results":"647","hashOfConfig":"482"},{"size":521,"mtime":1758638278821,"results":"648","hashOfConfig":"482"},{"size":3130,"mtime":1758638278463,"results":"649","hashOfConfig":"482"},{"size":265,"mtime":1758638278907,"results":"650","hashOfConfig":"482"},{"size":12003,"mtime":1758638278796,"results":"651","hashOfConfig":"482"},{"size":11708,"mtime":1758638278795,"results":"652","hashOfConfig":"482"},{"size":375,"mtime":1758638278789,"results":"653","hashOfConfig":"482"},{"size":937,"mtime":1758638278769,"results":"654","hashOfConfig":"482"},{"size":586,"mtime":1758638278772,"results":"655","hashOfConfig":"482"},{"size":4318,"mtime":1758638278888,"results":"656","hashOfConfig":"482"},{"size":954,"mtime":1758638278901,"results":"657","hashOfConfig":"482"},{"size":420,"mtime":1758638278926,"results":"658","hashOfConfig":"482"},{"size":915,"mtime":1758638278774,"results":"659","hashOfConfig":"482"},{"size":1245,"mtime":1758638278786,"results":"660","hashOfConfig":"482"},{"size":9893,"mtime":1758638278783,"results":"661","hashOfConfig":"482"},{"size":4883,"mtime":1758638278780,"results":"662","hashOfConfig":"482"},{"size":713,"mtime":1758638278780,"results":"663","hashOfConfig":"482"},{"size":4977,"mtime":1758638278781,"results":"664","hashOfConfig":"482"},{"size":117,"mtime":1758638278780,"results":"665","hashOfConfig":"482"},{"size":1917,"mtime":1758638278780,"results":"666","hashOfConfig":"482"},{"size":2022,"mtime":1758638278791,"results":"667","hashOfConfig":"482"},{"size":5376,"mtime":1758638278780,"results":"668","hashOfConfig":"482"},{"size":7654,"mtime":1758638278790,"results":"669","hashOfConfig":"482"},{"size":1383,"mtime":1758638278881,"results":"670","hashOfConfig":"482"},{"size":513,"mtime":1758638278931,"results":"671","hashOfConfig":"482"},{"size":2825,"mtime":1758638278771,"results":"672","hashOfConfig":"482"},{"size":1739,"mtime":1758638278914,"results":"673","hashOfConfig":"482"},{"size":178,"mtime":1758638278468,"results":"674","hashOfConfig":"482"},{"size":24342,"mtime":1758638278824,"results":"675","hashOfConfig":"482"},{"size":18095,"mtime":1758638278789,"results":"676","hashOfConfig":"482"},{"size":380,"mtime":1758638278765,"results":"677","hashOfConfig":"482"},{"size":112285,"mtime":1758638278889,"results":"678","hashOfConfig":"482"},{"size":403,"mtime":1758638278900,"results":"679","hashOfConfig":"482"},{"size":155,"mtime":1758638278926,"results":"680","hashOfConfig":"482"},{"size":4734,"mtime":1758638278779,"results":"681","hashOfConfig":"482"},{"size":5541,"mtime":1758638278778,"results":"682","hashOfConfig":"482"},{"size":1118,"mtime":1758638278914,"results":"683","hashOfConfig":"482"},{"size":3116,"mtime":1758638278789,"results":"684","hashOfConfig":"482"},{"size":1475,"mtime":1758638278464,"results":"685","hashOfConfig":"482"},{"size":2283,"mtime":1758638278788,"results":"686","hashOfConfig":"482"},{"size":3073,"mtime":1758638278788,"results":"687","hashOfConfig":"482"},{"size":4909,"mtime":1758638278788,"results":"688","hashOfConfig":"482"},{"size":7338,"mtime":1758638278788,"results":"689","hashOfConfig":"482"},{"size":1348,"mtime":1758638278461,"results":"690","hashOfConfig":"482"},{"size":3012,"mtime":1758638278922,"results":"691","hashOfConfig":"482"},{"size":27418,"mtime":1758638278764,"results":"692","hashOfConfig":"482"},{"size":1305,"mtime":1758638278922,"results":"693","hashOfConfig":"482"},{"size":2195,"mtime":1758638278782,"results":"694","hashOfConfig":"482"},{"size":5576,"mtime":1758638278782,"results":"695","hashOfConfig":"482"},{"size":3519,"mtime":1758638278781,"results":"696","hashOfConfig":"482"},{"size":2267,"mtime":1758638278781,"results":"697","hashOfConfig":"482"},{"size":7767,"mtime":1758638278783,"results":"698","hashOfConfig":"482"},{"size":1883,"mtime":1758638278927,"results":"699","hashOfConfig":"482"},{"size":2095,"mtime":1758638278891,"results":"700","hashOfConfig":"482"},{"size":2022,"mtime":1758638278891,"results":"701","hashOfConfig":"482"},{"size":4469,"mtime":1758638278886,"results":"702","hashOfConfig":"482"},{"size":5177,"mtime":1758638278886,"results":"703","hashOfConfig":"482"},{"size":615,"mtime":1758638278875,"results":"704","hashOfConfig":"482"},{"size":1163,"mtime":1758638278875,"results":"705","hashOfConfig":"482"},{"size":1246,"mtime":1758638278885,"results":"706","hashOfConfig":"482"},{"size":419,"mtime":1758638278929,"results":"707","hashOfConfig":"482"},{"size":1806,"mtime":1758638278879,"results":"708","hashOfConfig":"482"},{"size":3101,"mtime":1758638278880,"results":"709","hashOfConfig":"482"},{"size":3299,"mtime":1758638278880,"results":"710","hashOfConfig":"482"},{"size":7084,"mtime":1758638278885,"results":"711","hashOfConfig":"482"},{"size":7027,"mtime":1758638278886,"results":"712","hashOfConfig":"482"},{"size":4043,"mtime":1758638278874,"results":"713","hashOfConfig":"482"},{"size":3838,"mtime":1758638278874,"results":"714","hashOfConfig":"482"},{"size":4436,"mtime":1758638278873,"results":"715","hashOfConfig":"482"},{"size":7933,"mtime":1758638278846,"results":"716","hashOfConfig":"482"},{"size":3171,"mtime":1758638278843,"results":"717","hashOfConfig":"482"},{"size":22086,"mtime":1758638278849,"results":"718","hashOfConfig":"482"},{"size":9121,"mtime":1758638278826,"results":"719","hashOfConfig":"482"},{"size":237,"mtime":1758638278465,"results":"720","hashOfConfig":"482"},{"size":628,"mtime":1758638278927,"results":"721","hashOfConfig":"482"},{"size":2136,"mtime":1758638278895,"results":"722","hashOfConfig":"482"},{"size":7896,"mtime":1758638278790,"results":"723","hashOfConfig":"482"},{"size":597,"mtime":1758638278785,"results":"724","hashOfConfig":"482"},{"size":20316,"mtime":1758638278802,"results":"725","hashOfConfig":"482"},{"size":13783,"mtime":1758638278875,"results":"726","hashOfConfig":"482"},{"size":146,"mtime":1758638278929,"results":"727","hashOfConfig":"482"},{"size":1026,"mtime":1758638278774,"results":"728","hashOfConfig":"482"},{"size":5293,"mtime":1758638278848,"results":"729","hashOfConfig":"482"},{"size":5855,"mtime":1758638278878,"results":"730","hashOfConfig":"482"},{"size":1243,"mtime":1758638278770,"results":"731","hashOfConfig":"482"},{"size":11968,"mtime":1758638278828,"results":"732","hashOfConfig":"482"},{"size":5118,"mtime":1758638278847,"results":"733","hashOfConfig":"482"},{"size":2552,"mtime":1758638278768,"results":"734","hashOfConfig":"482"},{"size":5414,"mtime":1758638278867,"results":"735","hashOfConfig":"482"},{"size":4527,"mtime":1758638278867,"results":"736","hashOfConfig":"482"},{"size":4161,"mtime":1758638278867,"results":"737","hashOfConfig":"482"},{"size":4558,"mtime":1758638278868,"results":"738","hashOfConfig":"482"},{"size":4558,"mtime":1758638278867,"results":"739","hashOfConfig":"482"},{"size":3703,"mtime":1758638278868,"results":"740","hashOfConfig":"482"},{"size":3483,"mtime":1758638278868,"results":"741","hashOfConfig":"482"},{"size":3786,"mtime":1758638278868,"results":"742","hashOfConfig":"482"},{"size":3809,"mtime":1758638278868,"results":"743","hashOfConfig":"482"},{"size":6484,"mtime":1758638278770,"results":"744","hashOfConfig":"482"},{"size":5197,"mtime":1758638278868,"results":"745","hashOfConfig":"482"},{"size":46335,"mtime":1758638278871,"results":"746","hashOfConfig":"482"},{"size":31659,"mtime":1758638278872,"results":"747","hashOfConfig":"482"},{"size":3590,"mtime":1758638278872,"results":"748","hashOfConfig":"482"},{"size":1670,"mtime":1758638278772,"results":"749","hashOfConfig":"482"},{"size":204,"mtime":1758638278832,"results":"750","hashOfConfig":"482"},{"size":844,"mtime":1758638278897,"results":"751","hashOfConfig":"482"},{"size":743,"mtime":1758638278910,"results":"752","hashOfConfig":"482"},{"size":728,"mtime":1758638278901,"results":"753","hashOfConfig":"482"},{"size":509,"mtime":1758638278906,"results":"754","hashOfConfig":"482"},{"size":464,"mtime":1758638278905,"results":"755","hashOfConfig":"482"},{"size":729,"mtime":1758638278785,"results":"756","hashOfConfig":"482"},{"size":1092,"mtime":1758638278904,"results":"757","hashOfConfig":"482"},{"size":1639,"mtime":1758638278900,"results":"758","hashOfConfig":"482"},{"size":1637,"mtime":1758638278899,"results":"759","hashOfConfig":"482"},{"size":279,"mtime":1758638278927,"results":"760","hashOfConfig":"482"},{"size":748,"mtime":1758638278903,"results":"761","hashOfConfig":"482"},{"size":761,"mtime":1758638278801,"results":"762","hashOfConfig":"482"},{"size":843,"mtime":1758638278799,"results":"763","hashOfConfig":"482"},{"size":2970,"mtime":1758638278798,"results":"764","hashOfConfig":"482"},{"size":2188,"mtime":1758638278800,"results":"765","hashOfConfig":"482"},{"size":1672,"mtime":1758638278770,"results":"766","hashOfConfig":"482"},{"size":2816,"mtime":1758638278769,"results":"767","hashOfConfig":"482"},{"size":11818,"mtime":1758638278768,"results":"768","hashOfConfig":"482"},{"size":3889,"mtime":1758638278800,"results":"769","hashOfConfig":"482"},{"size":2528,"mtime":1758638278799,"results":"770","hashOfConfig":"482"},{"size":1784,"mtime":1758638278799,"results":"771","hashOfConfig":"482"},{"size":1493,"mtime":1758638278800,"results":"772","hashOfConfig":"482"},{"size":850,"mtime":1758638278799,"results":"773","hashOfConfig":"482"},{"size":1338,"mtime":1758638278800,"results":"774","hashOfConfig":"482"},{"size":3908,"mtime":1758638278798,"results":"775","hashOfConfig":"482"},{"size":940,"mtime":1758638278878,"results":"776","hashOfConfig":"482"},{"size":946,"mtime":1758638278801,"results":"777","hashOfConfig":"482"},{"size":1540,"mtime":1758638278879,"results":"778","hashOfConfig":"482"},{"size":2001,"mtime":1758638278800,"results":"779","hashOfConfig":"482"},{"size":980,"mtime":1758638278802,"results":"780","hashOfConfig":"482"},{"size":1527,"mtime":1758638278800,"results":"781","hashOfConfig":"482"},{"size":2022,"mtime":1758638278801,"results":"782","hashOfConfig":"482"},{"size":1398,"mtime":1758638278766,"results":"783","hashOfConfig":"482"},{"size":2073,"mtime":1758638278871,"results":"784","hashOfConfig":"482"},{"size":1425,"mtime":1758638278798,"results":"785","hashOfConfig":"482"},{"size":1878,"mtime":1758638278800,"results":"786","hashOfConfig":"482"},{"size":1865,"mtime":1758638278802,"results":"787","hashOfConfig":"482"},{"size":896,"mtime":1758638278801,"results":"788","hashOfConfig":"482"},{"size":668,"mtime":1758638278798,"results":"789","hashOfConfig":"482"},{"size":268,"mtime":1758638278799,"results":"790","hashOfConfig":"482"},{"size":842,"mtime":1758638278921,"results":"791","hashOfConfig":"482"},{"size":1660,"mtime":1758638278798,"results":"792","hashOfConfig":"482"},{"size":112,"mtime":1758638278916,"results":"793","hashOfConfig":"482"},{"size":322,"mtime":1758638278916,"results":"794","hashOfConfig":"482"},{"size":2023,"mtime":1758638278903,"results":"795","hashOfConfig":"482"},{"size":4786,"mtime":1758638278913,"results":"796","hashOfConfig":"482"},{"size":469,"mtime":1758638278931,"results":"797","hashOfConfig":"482"},{"size":450,"mtime":1758638278919,"results":"798","hashOfConfig":"482"},{"size":287,"mtime":1758638278918,"results":"799","hashOfConfig":"482"},{"size":490,"mtime":1758638278920,"results":"800","hashOfConfig":"482"},{"size":2527,"mtime":1758638278923,"results":"801","hashOfConfig":"482"},{"size":860,"mtime":1758638278916,"results":"802","hashOfConfig":"482"},{"size":2007,"mtime":1758638278917,"results":"803","hashOfConfig":"482"},{"size":445,"mtime":1758638278912,"results":"804","hashOfConfig":"482"},{"size":169,"mtime":1758638278912,"results":"805","hashOfConfig":"482"},{"size":2060,"mtime":1758638278773,"results":"806","hashOfConfig":"482"},{"size":968,"mtime":1758638278468,"results":"807","hashOfConfig":"482"},{"size":327,"mtime":1758638278916,"results":"808","hashOfConfig":"482"},{"size":2045,"mtime":1758638278917,"results":"809","hashOfConfig":"482"},{"size":1761,"mtime":1758638278914,"results":"810","hashOfConfig":"482"},{"size":296,"mtime":1758638278910,"results":"811","hashOfConfig":"482"},{"size":664,"mtime":1758638278897,"results":"812","hashOfConfig":"482"},{"size":285,"mtime":1758638278901,"results":"813","hashOfConfig":"482"},{"size":198,"mtime":1758638278906,"results":"814","hashOfConfig":"482"},{"size":175,"mtime":1758638278905,"results":"815","hashOfConfig":"482"},{"size":355,"mtime":1758638278904,"results":"816","hashOfConfig":"482"},{"size":868,"mtime":1758638278900,"results":"817","hashOfConfig":"482"},{"size":843,"mtime":1758638278899,"results":"818","hashOfConfig":"482"},{"size":124,"mtime":1758638278927,"results":"819","hashOfConfig":"482"},{"size":368,"mtime":1758638278903,"results":"820","hashOfConfig":"482"},{"size":2381,"mtime":1758638278914,"results":"821","hashOfConfig":"482"},{"size":5032,"mtime":1758638278930,"results":"822","hashOfConfig":"482"},{"size":1403,"mtime":1758638278932,"results":"823","hashOfConfig":"482"},{"size":762,"mtime":1758638278926,"results":"824","hashOfConfig":"482"},{"size":833,"mtime":1758638278919,"results":"825","hashOfConfig":"482"},{"size":566,"mtime":1758638278927,"results":"826","hashOfConfig":"482"},{"size":1835,"mtime":1758638278925,"results":"827","hashOfConfig":"482"},{"size":6043,"mtime":1758638278913,"results":"828","hashOfConfig":"482"},{"size":706,"mtime":1758638278929,"results":"829","hashOfConfig":"482"},{"size":1241,"mtime":1758638278928,"results":"830","hashOfConfig":"482"},{"size":532,"mtime":1758638278918,"results":"831","hashOfConfig":"482"},{"size":5503,"mtime":1758638278922,"results":"832","hashOfConfig":"482"},{"size":859,"mtime":1758638278920,"results":"833","hashOfConfig":"482"},{"size":1241,"mtime":1758638278924,"results":"834","hashOfConfig":"482"},{"size":3430,"mtime":1758638278923,"results":"835","hashOfConfig":"482"},{"size":854,"mtime":1758638278921,"results":"836","hashOfConfig":"482"},{"size":880,"mtime":1758638278796,"results":"837","hashOfConfig":"482"},{"size":828,"mtime":1758638278924,"results":"838","hashOfConfig":"482"},{"size":3623,"mtime":1758638278877,"results":"839","hashOfConfig":"482"},{"size":10030,"mtime":1758638278878,"results":"840","hashOfConfig":"482"},{"size":2867,"mtime":1758638278928,"results":"841","hashOfConfig":"482"},{"size":680,"mtime":1758638278909,"results":"842","hashOfConfig":"482"},{"size":1398,"mtime":1758638278901,"results":"843","hashOfConfig":"482"},{"size":1246,"mtime":1758638278913,"results":"844","hashOfConfig":"482"},{"size":643,"mtime":1758638278909,"results":"845","hashOfConfig":"482"},{"size":919,"mtime":1758638278902,"results":"846","hashOfConfig":"482"},{"size":1669,"mtime":1758638278914,"results":"847","hashOfConfig":"482"},{"size":174,"mtime":1758638278931,"results":"848","hashOfConfig":"482"},{"size":157,"mtime":1758638278919,"results":"849","hashOfConfig":"482"},{"size":115,"mtime":1758638278918,"results":"850","hashOfConfig":"482"},{"size":178,"mtime":1758638278920,"results":"851","hashOfConfig":"482"},{"size":57,"mtime":1758638278911,"results":"852","hashOfConfig":"482"},{"size":1201,"mtime":1758638278923,"results":"853","hashOfConfig":"482"},{"size":635,"mtime":1758638278916,"results":"854","hashOfConfig":"482"},{"size":2633,"mtime":1758638278914,"results":"855","hashOfConfig":"482"},{"size":2990,"mtime":1758638278915,"results":"856","hashOfConfig":"482"},{"size":2465,"mtime":1758638278915,"results":"857","hashOfConfig":"482"},{"size":554,"mtime":1758638278913,"results":"858","hashOfConfig":"482"},{"size":1425,"mtime":1758638278915,"results":"859","hashOfConfig":"482"},{"size":1133,"mtime":1758638278897,"results":"860","hashOfConfig":"482"},{"size":949,"mtime":1758638278910,"results":"861","hashOfConfig":"482"},{"size":1296,"mtime":1758638278907,"results":"862","hashOfConfig":"482"},{"size":680,"mtime":1758638278906,"results":"863","hashOfConfig":"482"},{"size":970,"mtime":1758638278905,"results":"864","hashOfConfig":"482"},{"size":931,"mtime":1758638278902,"results":"865","hashOfConfig":"482"},{"size":2237,"mtime":1758638278903,"results":"866","hashOfConfig":"482"},{"size":637,"mtime":1758638278906,"results":"867","hashOfConfig":"482"},{"size":1895,"mtime":1758638278900,"results":"868","hashOfConfig":"482"},{"size":1001,"mtime":1758638278904,"results":"869","hashOfConfig":"482"},{"size":1854,"mtime":1758638278899,"results":"870","hashOfConfig":"482"},{"size":2355,"mtime":1758638278898,"results":"871","hashOfConfig":"482"},{"size":1759,"mtime":1758638278930,"results":"872","hashOfConfig":"482"},{"size":1906,"mtime":1758638278932,"results":"873","hashOfConfig":"482"},{"size":795,"mtime":1758638278926,"results":"874","hashOfConfig":"482"},{"size":556,"mtime":1758638278927,"results":"875","hashOfConfig":"482"},{"size":1343,"mtime":1758638278893,"results":"876","hashOfConfig":"482"},{"size":4630,"mtime":1758638278790,"results":"877","hashOfConfig":"482"},{"size":699,"mtime":1758638278930,"results":"878","hashOfConfig":"482"},{"size":1258,"mtime":1758638278928,"results":"879","hashOfConfig":"482"},{"size":535,"mtime":1758638278918,"results":"880","hashOfConfig":"482"},{"size":1768,"mtime":1758638278931,"results":"881","hashOfConfig":"482"},{"size":1850,"mtime":1758638278925,"results":"882","hashOfConfig":"482"},{"size":857,"mtime":1758638278919,"results":"883","hashOfConfig":"482"},{"size":2147,"mtime":1758638278462,"results":"884","hashOfConfig":"482"},{"size":1714,"mtime":1758638278924,"results":"885","hashOfConfig":"482"},{"size":943,"mtime":1758638278920,"results":"886","hashOfConfig":"482"},{"size":4367,"mtime":1758638278923,"results":"887","hashOfConfig":"482"},{"size":1865,"mtime":1758638278921,"results":"888","hashOfConfig":"482"},{"size":4193,"mtime":1758638278923,"results":"889","hashOfConfig":"482"},{"size":5656,"mtime":1758638278929,"results":"890","hashOfConfig":"482"},{"size":1785,"mtime":1758638278901,"results":"891","hashOfConfig":"482"},{"size":1107,"mtime":1758638278909,"results":"892","hashOfConfig":"482"},{"size":1033,"mtime":1758638278908,"results":"893","hashOfConfig":"482"},{"size":820,"mtime":1758638278897,"results":"894","hashOfConfig":"482"},{"size":374,"mtime":1758638278924,"results":"895","hashOfConfig":"482"},{"size":915,"mtime":1758638278910,"results":"896","hashOfConfig":"482"},{"size":1131,"mtime":1758638278904,"results":"897","hashOfConfig":"482"},{"size":902,"mtime":1758638278902,"results":"898","hashOfConfig":"482"},{"size":1034,"mtime":1758638278907,"results":"899","hashOfConfig":"482"},{"size":1475,"mtime":1758638278906,"results":"900","hashOfConfig":"482"},{"size":3310,"mtime":1758638278903,"results":"901","hashOfConfig":"482"},{"size":261,"mtime":1758638278467,"results":"902","hashOfConfig":"482"},{"size":1650,"mtime":1758638278905,"results":"903","hashOfConfig":"482"},{"size":1779,"mtime":1758638278900,"results":"904","hashOfConfig":"482"},{"size":790,"mtime":1758638278903,"results":"905","hashOfConfig":"482"},{"size":1560,"mtime":1758638278899,"results":"906","hashOfConfig":"482"},{"size":895,"mtime":1758638278463,"results":"907","hashOfConfig":"482"},{"size":850,"mtime":1758638278915,"results":"908","hashOfConfig":"482"},{"size":1271,"mtime":1758638278467,"results":"909","hashOfConfig":"482"},{"size":8130,"mtime":1758638278825,"results":"910","hashOfConfig":"482"},{"size":275,"mtime":1758638278466,"results":"911","hashOfConfig":"482"},{"size":1628,"mtime":1758638278466,"results":"912","hashOfConfig":"482"},{"size":273,"mtime":1758638278466,"results":"913","hashOfConfig":"482"},{"size":515,"mtime":1758638278466,"results":"914","hashOfConfig":"482"},{"size":310,"mtime":1758638278464,"results":"915","hashOfConfig":"482"},{"size":530,"mtime":1758638278467,"results":"916","hashOfConfig":"482"},{"size":298,"mtime":1758638278465,"results":"917","hashOfConfig":"482"},{"size":2146,"mtime":1758638278898,"results":"918","hashOfConfig":"482"},{"size":676,"mtime":1758638278814,"results":"919","hashOfConfig":"482"},{"size":229,"mtime":1758638278463,"results":"920","hashOfConfig":"482"},{"size":2943,"mtime":1758638278467,"results":"921","hashOfConfig":"482"},{"size":1333,"mtime":1758638278466,"results":"922","hashOfConfig":"482"},{"size":1509,"mtime":1758638278463,"results":"923","hashOfConfig":"482"},{"size":358,"mtime":1758638278465,"results":"924","hashOfConfig":"482"},{"size":265,"mtime":1758638278466,"results":"925","hashOfConfig":"482"},{"size":542,"mtime":1758638278464,"results":"926","hashOfConfig":"482"},{"size":769,"mtime":1758638278463,"results":"927","hashOfConfig":"482"},{"size":3191,"mtime":1758638278829,"results":"928","hashOfConfig":"482"},{"size":995,"mtime":1758638278821,"results":"929","hashOfConfig":"482"},{"size":310,"mtime":1758638278467,"results":"930","hashOfConfig":"482"},{"size":312,"mtime":1758638278819,"results":"931","hashOfConfig":"482"},{"size":2634,"mtime":1758638278864,"results":"932","hashOfConfig":"482"},{"size":666,"mtime":1758638278863,"results":"933","hashOfConfig":"482"},{"size":2544,"mtime":1758638278863,"results":"934","hashOfConfig":"482"},{"size":1280,"mtime":1758638278803,"results":"935","hashOfConfig":"482"},{"size":5735,"mtime":1758638278803,"results":"936","hashOfConfig":"482"},{"size":148,"mtime":1758638278792,"results":"937","hashOfConfig":"482"},{"size":3754,"mtime":1758638278776,"results":"938","hashOfConfig":"482"},{"size":15386,"mtime":1758638278776,"results":"939","hashOfConfig":"482"},{"size":908,"mtime":1758638278775,"results":"940","hashOfConfig":"482"},{"size":4004,"mtime":1758638278775,"results":"941","hashOfConfig":"482"},{"size":4654,"mtime":1758638278855,"results":"942","hashOfConfig":"482"},{"size":7807,"mtime":1758638278854,"results":"943","hashOfConfig":"482"},{"size":494,"mtime":1758638278854,"results":"944","hashOfConfig":"482"},{"size":13101,"mtime":1758638278851,"results":"945","hashOfConfig":"482"},{"size":2049,"mtime":1758638278863,"results":"946","hashOfConfig":"482"},{"size":3204,"mtime":1758638278862,"results":"947","hashOfConfig":"482"},{"size":1514,"mtime":1758638278776,"results":"948","hashOfConfig":"482"},{"size":5873,"mtime":1758638278856,"results":"949","hashOfConfig":"482"},{"size":13233,"mtime":1758638278851,"results":"950","hashOfConfig":"482"},{"size":15007,"mtime":1758638278852,"results":"951","hashOfConfig":"482"},{"size":14874,"mtime":1758638278851,"results":"952","hashOfConfig":"482"},{"size":19174,"mtime":1758638278852,"results":"953","hashOfConfig":"482"},{"size":19750,"mtime":1758638278853,"results":"954","hashOfConfig":"482"},{"size":18944,"mtime":1758638278853,"results":"955","hashOfConfig":"482"},{"size":4505,"mtime":1758638278853,"results":"956","hashOfConfig":"482"},{"size":1599,"mtime":1758638278894,"results":"957","hashOfConfig":"482"},{"size":2158,"mtime":1758638278767,"results":"958","hashOfConfig":"482"},{"size":350,"mtime":1758638278830,"results":"959","hashOfConfig":"482"},{"size":4039,"mtime":1758638278772,"results":"960","hashOfConfig":"482"},{"size":163,"mtime":1758638278464,"results":"961","hashOfConfig":"482"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mkv1e5",{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966"},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"969","messages":"970","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"971","messages":"972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"975","messages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"981","messages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"983","messages":"984","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987"},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004"},{"filePath":"1005","messages":"1006","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1007"},{"filePath":"1008","messages":"1009","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1010"},{"filePath":"1011","messages":"1012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1023","messages":"1024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1025","messages":"1026","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1039","messages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1043","messages":"1044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1045","messages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1070","messages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1076","messages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1078"},{"filePath":"1079","messages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1087","messages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089"},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1098","messages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1100"},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113"},{"filePath":"1114","messages":"1115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1116","messages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1120","messages":"1121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1122","messages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1124"},{"filePath":"1125","messages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1131"},{"filePath":"1132","messages":"1133","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1134"},{"filePath":"1135","messages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137"},{"filePath":"1138","messages":"1139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1140"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145"},{"filePath":"1146","messages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1148","messages":"1149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1154","messages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1156","messages":"1157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1162","messages":"1163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1168","messages":"1169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1178"},{"filePath":"1179","messages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1186","messages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1192","messages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1194","messages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1196","messages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1198","messages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1202","messages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1204"},{"filePath":"1205","messages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1207","messages":"1208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1209","messages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1211","messages":"1212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1213","messages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1217","messages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1219","messages":"1220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1221","messages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1223","messages":"1224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1225","messages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1227","messages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1229","messages":"1230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1231","messages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1235","messages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1241","messages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1245"},{"filePath":"1246","messages":"1247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1248","messages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1250","messages":"1251","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1257","messages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1259","messages":"1260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1261"},{"filePath":"1262","messages":"1263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1264","messages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266"},{"filePath":"1267","messages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269"},{"filePath":"1270","messages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272"},{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1279"},{"filePath":"1280","messages":"1281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1282","messages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1284","messages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1288","messages":"1289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1290","messages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1292","messages":"1293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1296","messages":"1297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1298","messages":"1299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1300","messages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1302","messages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1304","messages":"1305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1306","messages":"1307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1308","messages":"1309","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310"},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1315"},{"filePath":"1316","messages":"1317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1318","messages":"1319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1320","messages":"1321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327"},{"filePath":"1328","messages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1330","messages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1332","messages":"1333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1334","messages":"1335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1336","messages":"1337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1338","messages":"1339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1345","messages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1347","messages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1349","messages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1351","messages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1353"},{"filePath":"1354","messages":"1355","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1356"},{"filePath":"1357","messages":"1358","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1359"},{"filePath":"1360","messages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1362"},{"filePath":"1363","messages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1365","messages":"1366","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1367"},{"filePath":"1368","messages":"1369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1372","messages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1374","messages":"1375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1376","messages":"1377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1382","messages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1384","messages":"1385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1394","messages":"1395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1396","messages":"1397","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1398"},{"filePath":"1399","messages":"1400","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1401"},{"filePath":"1402","messages":"1403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1406","messages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1408"},{"filePath":"1409","messages":"1410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1411","messages":"1412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1415","messages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1417","messages":"1418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1419"},{"filePath":"1420","messages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1426","messages":"1427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1428","messages":"1429","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1430"},{"filePath":"1431","messages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1433","messages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1435","messages":"1436","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1437"},{"filePath":"1438","messages":"1439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1444","messages":"1445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1446","messages":"1447","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448"},{"filePath":"1449","messages":"1450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1451","messages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1453","messages":"1454","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1455"},{"filePath":"1456","messages":"1457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1460","messages":"1461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1462","messages":"1463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1464","messages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1468","messages":"1469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1470","messages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1474","messages":"1475","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1476"},{"filePath":"1477","messages":"1478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1479","messages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1481","messages":"1482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1485","messages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1487","messages":"1488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1489","messages":"1490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1491","messages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1493","messages":"1494","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1495"},{"filePath":"1496","messages":"1497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1498","messages":"1499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1500","messages":"1501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1502","messages":"1503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1504","messages":"1505","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506"},{"filePath":"1507","messages":"1508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1509","messages":"1510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1513","messages":"1514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1515","messages":"1516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1517","messages":"1518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1519","messages":"1520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1521","messages":"1522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1523","messages":"1524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1525","messages":"1526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1527","messages":"1528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1529","messages":"1530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1531","messages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1533","messages":"1534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1535","messages":"1536","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1537"},{"filePath":"1538","messages":"1539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1540"},{"filePath":"1541","messages":"1542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1543","messages":"1544","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1545"},{"filePath":"1546","messages":"1547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1548","messages":"1549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1550","messages":"1551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1552","messages":"1553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1554","messages":"1555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1556","messages":"1557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1558","messages":"1559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1560","messages":"1561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1562","messages":"1563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1564","messages":"1565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1566","messages":"1567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1568","messages":"1569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1570","messages":"1571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1572","messages":"1573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1574","messages":"1575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1576","messages":"1577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1578","messages":"1579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1580","messages":"1581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1582","messages":"1583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1584","messages":"1585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1586","messages":"1587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1588","messages":"1589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1590","messages":"1591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1592","messages":"1593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1594","messages":"1595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1596","messages":"1597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1598","messages":"1599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1600","messages":"1601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1602","messages":"1603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1604","messages":"1605","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1606"},{"filePath":"1607","messages":"1608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1609","messages":"1610","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1611","messages":"1612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1613","messages":"1614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1615","messages":"1616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1617","messages":"1618","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1619"},{"filePath":"1620","messages":"1621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1622","messages":"1623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1624","messages":"1625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1626","messages":"1627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1628","messages":"1629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1630","messages":"1631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1634","messages":"1635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1636","messages":"1637","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1638","messages":"1639","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1640","messages":"1641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1642","messages":"1643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1644","messages":"1645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1646","messages":"1647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1648","messages":"1649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1650","messages":"1651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1652","messages":"1653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1654","messages":"1655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1656","messages":"1657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1658","messages":"1659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1660","messages":"1661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1662","messages":"1663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1664","messages":"1665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1666","messages":"1667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1668","messages":"1669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1670","messages":"1671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1672","messages":"1673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1674","messages":"1675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1676","messages":"1677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1678","messages":"1679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1680","messages":"1681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1682","messages":"1683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1684","messages":"1685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1686","messages":"1687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1688","messages":"1689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1690","messages":"1691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1692","messages":"1693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1694","messages":"1695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1696","messages":"1697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1698","messages":"1699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1700","messages":"1701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1702","messages":"1703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1704","messages":"1705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1706","messages":"1707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1708","messages":"1709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1710","messages":"1711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1712","messages":"1713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1714","messages":"1715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1716","messages":"1717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1718","messages":"1719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1720","messages":"1721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1722","messages":"1723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1724","messages":"1725","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1726"},{"filePath":"1727","messages":"1728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1729","messages":"1730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1731","messages":"1732","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1733"},{"filePath":"1734","messages":"1735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1736","messages":"1737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1738","messages":"1739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1740","messages":"1741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1742","messages":"1743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1744","messages":"1745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1746","messages":"1747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1748","messages":"1749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1750","messages":"1751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1752","messages":"1753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1754","messages":"1755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1756","messages":"1757","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1758","messages":"1759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1760","messages":"1761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1762","messages":"1763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1764","messages":"1765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1766","messages":"1767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1768","messages":"1769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1770","messages":"1771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1772","messages":"1773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1774","messages":"1775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1776","messages":"1777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1778","messages":"1779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1780","messages":"1781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1782","messages":"1783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1784","messages":"1785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1786","messages":"1787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1788","messages":"1789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1790","messages":"1791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1792","messages":"1793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1794","messages":"1795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1796","messages":"1797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1798","messages":"1799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1800","messages":"1801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1802","messages":"1803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1804","messages":"1805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1806","messages":"1807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1808","messages":"1809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1810","messages":"1811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1812","messages":"1813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1814","messages":"1815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1816","messages":"1817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1818","messages":"1819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1820","messages":"1821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1822","messages":"1823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1824","messages":"1825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1826","messages":"1827","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1828"},{"filePath":"1829","messages":"1830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1831","messages":"1832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1833","messages":"1834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1835","messages":"1836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1837","messages":"1838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1839","messages":"1840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1841","messages":"1842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1843","messages":"1844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1845","messages":"1846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1847","messages":"1848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1849","messages":"1850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1851","messages":"1852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1853","messages":"1854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1855","messages":"1856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1857","messages":"1858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1859","messages":"1860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1861","messages":"1862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1863","messages":"1864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1865","messages":"1866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1867","messages":"1868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1869","messages":"1870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1871","messages":"1872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1873","messages":"1874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1875","messages":"1876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1877","messages":"1878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1879","messages":"1880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1881","messages":"1882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1883","messages":"1884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1885","messages":"1886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1887","messages":"1888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1889","messages":"1890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1891","messages":"1892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1893","messages":"1894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1895","messages":"1896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1897","messages":"1898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1899","messages":"1900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1901","messages":"1902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1903","messages":"1904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1905","messages":"1906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1907","messages":"1908","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1909","messages":"1910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1911","messages":"1912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1913","messages":"1914","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1915","messages":"1916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1917","messages":"1918","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1919","messages":"1920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1921","messages":"1922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1923","messages":"1924","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1925","messages":"1926","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1927","messages":"1928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1929","messages":"1930","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1931","messages":"1932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1933","messages":"1934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1935","messages":"1936","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1937"},{"filePath":"1938","messages":"1939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1940","messages":"1941","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1942"},{"filePath":"1943","messages":"1944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1945","messages":"1946","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1947","messages":"1948","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1949","messages":"1950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1951","messages":"1952","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1953","messages":"1954","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1955"},{"filePath":"1956","messages":"1957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1958","messages":"1959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1960","messages":"1961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1962","messages":"1963","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1964"},{"filePath":"1965","messages":"1966","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1967"},{"filePath":"1968","messages":"1969","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1970"},{"filePath":"1971","messages":"1972","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1973","messages":"1974","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1975","messages":"1976","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1977","messages":"1978","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1979","messages":"1980","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1981","messages":"1982","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/App.js",["1983","1984"],"import {\n  Suspense,\n  useEffect,\n} from \"react\";\nimport {\n  useSelector,\n  useDispatch,\n} from \"react-redux\";\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport SocketProvider from \"./context\";\n\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\";\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\";\nimport AppLoader from \"./components/AppLoader\";\n\nimport forexRoutes from \"./routes/forexRoutes\";\nimport cryptoRoutes from \"./routes/cryptoRoutes\"; \nimport { IS_IOS, PORTALS } from \"common/constants\";\n\nimport \"./assets/scss/preloader.scss\";\nimport \"./assets/scss/theme.scss\";\nimport {\n  defaultPortal,\n  enableCrypto,\n  enableFX,\n} from \"config\";\nimport { receivedNotification, updatePushNotificationOption } from \"store/actions\";\nimport { checkPushNotificationSubscription } from \"serviceWorkerRegistration\";\nimport formatReceivedNotification from \"helpers/formatReceivedNotification\";\n\n\nconst lang = localStorage.getItem(\"I18N_LANGUAGE\");\nif (lang === \"ar\") {\n  import(\"./assets/scss/theme-rtl.scss\");\n}\n\nconst routeSelector = (portal) => {\n  let defaultRoutes;\n  switch (defaultPortal) {\n    // case PORTALS.CRYPTO:\n    //   defaultRoutes = cryptoRoutes;\n    //   break;\n    case PORTALS.FOREX:\n      defaultRoutes = forexRoutes;\n      break;\n      default: defaultRoutes = forexRoutes;\n      break;  \n  }\n  switch (portal) {\n    // case PORTALS.CRYPTO:\n    //   if (enableCrypto)\n    //     return cryptoRoutes;\n    //   else\n    //     return defaultRoutes;\n    case PORTALS.FOREX:\n      if (enableFX)\n        return forexRoutes;\n      else\n        return defaultRoutes;\n    default: return defaultRoutes;\n  }\n};\n\nconst channel = new BroadcastChannel(\"notification--exinitic--messages\");\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const notification = (!IS_IOS && Notification?.permission) || null;\n\n  const { portal } = useSelector((state) => state.Layout);\n  let routes = routeSelector(portal);\n\n  channel.onmessage = (event) => {\n    const formattedData = formatReceivedNotification(event.data);\n    if (formattedData._id) {\n      dispatch(receivedNotification(formattedData));\n    }\n  };\n\n  useEffect(async () => {\n    const checkCurrentNotification = await checkPushNotificationSubscription();\n    dispatch(updatePushNotificationOption(checkCurrentNotification));\n  }, [notification]);\n\n\n  return (\n    <SocketProvider>\n      <Suspense fallback={<AppLoader />}>\n        <Router>\n          <Switch>\n            {routes.map((route, idx) => (\n              <Authmiddleware\n                path={route.path}\n                layout={route.isAuth ? VerticalLayout : NonAuthLayout}\n                component={route.component}\n                key={idx}\n                isAuthProtected={route.isAuth ? true : false}\n                exact\n              />\n            ))}\n          </Switch>\n        </Router>\n      </Suspense>\n    </SocketProvider>\n  );\n};\nexport default App;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/i18n.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/NotificationPopup.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/serviceWorkerRegistration.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/NonAuthLayout.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/AppLoader.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/middleware/Authmiddleware.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/cryptoRoutes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/forexRoutes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/index.js",["1985","1986","1987","1988"],"import PropTypes from \"prop-types\";\nimport React, { useEffect } from \"react\";\nimport {\n  changeLayout,\n  changeSidebarTheme,\n  changeSidebarType,\n  changeTopbarTheme,\n  changeLayoutWidth,\n  changelayoutMode,\n  changePortal,\n} from \"../../store/actions\";\nimport bgImg2 from \"../../assets/images/bg/2.png\";\nimport bgImg3 from \"../../assets/images/bg/3.png\";\nimport { PORTALS } from \"common/constants\";\n// Layout Related Components\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\n\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Modals from \"../Modals/\";\nimport ForexFooter from \"./ForexFooter\";\nimport CryptoFooter from \"./CryptoFooter\";\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\nconst Layout = props => {\n  const dispatch = useDispatch();\n  const {\n    width \n  } = useWindowDimensions();\n  const {\n    isPreloader,\n    layoutWidth,\n    leftSideBarType,\n    topbarTheme,\n    leftSideBarTheme,\n    layoutMode,\n    layoutType,\n    leftSidebarTypes,\n    portal,\n    subPortal\n  } = useSelector(state => ({\n    isPreloader: state.Layout.isPreloader,\n    leftSideBarType: state.Layout.leftSideBarType,\n    layoutWidth: state.Layout.layoutWidth,\n    topbarTheme: state.Layout.topbarTheme,\n    leftSideBarTheme: state.Layout.leftSideBarTheme,\n    layoutMode: state.Layout.layoutMode,\n    layoutType: state.Layout.layoutType,\n    leftSidebarTypes: state.Layout.leftSidebarTypes,\n    portal: state.Layout.portal,\n    subPortal: state.Layout.subPortal\n  }));\n\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n  const toggleMenuCallback = () => {\n    if (leftSideBarType === \"default\") {\n      dispatch(changeSidebarType(\"condensed\", isMobile));\n    } else if (leftSideBarType === \"condensed\") {\n      dispatch(changeSidebarType(\"default\", isMobile));\n    }\n  };\n\n  /*\n  layout  settings\n  */\n\n  useEffect(() => {\n    if (isPreloader === true && document.getElementById(\"preloader\")) {\n      document.getElementById(\"preloader\").style.display = \"block\";\n      document.getElementById(\"status\").style.display = \"block\";\n\n      setTimeout(function () {\n        if (document.getElementById(\"preloader\")) {\n          document.getElementById(\"preloader\").style.display = \"none\";\n          document.getElementById(\"status\").style.display = \"none\";\n        }\n      }, 2500);\n    } else {\n      if (document.getElementById(\"preloader\")) {\n        document.getElementById(\"preloader\").style.display = \"none\";\n        document.getElementById(\"status\").style.display = \"none\";\n      }\n    }\n  }, [isPreloader]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  useEffect(() => {\n    dispatch(changeLayout(\"vertical\"));\n  }, []);\n\n  useEffect(() => {\n    if (leftSideBarTheme) {\n      dispatch(changeSidebarTheme(leftSideBarTheme));\n    }\n  }, [leftSideBarTheme, dispatch]);\n\n  useEffect(() => {\n    if (layoutMode) {\n      dispatch(changelayoutMode(layoutMode));\n    }\n  }, [layoutMode, dispatch]);\n\n\n  useEffect(() => {\n    if (layoutWidth) {\n      dispatch(changeLayoutWidth(layoutWidth));\n    }\n  }, [layoutWidth, dispatch]);\n\n  useEffect(() => {\n    if (width < 425){\n      dispatch(changeSidebarType(\"sm\", isMobile));\n    } else if (width < 992){\n      dispatch(changeSidebarType(\"md\", isMobile));\n    } else {\n      dispatch(changeSidebarType(\"lg\", isMobile));\n    }\n  }, [width]);\n\n  useEffect(() => {\n    if (topbarTheme) {\n      dispatch(changeTopbarTheme(topbarTheme));\n    }\n  }, [topbarTheme, dispatch]);\n\n  /*\n  call dark/light mode\n  */\n  const onChangeLayoutMode = (value) => {\n    if (changelayoutMode) {\n      dispatch(changelayoutMode(value, layoutType));\n    }\n  };\n\n  const backgroundImage = layoutMode === \"dark\" ? `url(${bgImg2}), url(${bgImg3})` : undefined;\n\n  const onChangePortal = (value) => {\n    localStorage.setItem(\"PORTAL\", PORTALS.FOREX);\n    dispatch(changePortal(PORTALS.FOREX));\n    // if (value) {\n    //   localStorage.setItem(\"PORTAL\", PORTALS.CRYPTO);\n    //   dispatch(changePortal(PORTALS.CRYPTO));\n    // } else {\n    //   localStorage.setItem(\"PORTAL\", PORTALS.FOREX);\n    //   dispatch(changePortal(PORTALS.FOREX));\n    // }\n  };\n\n  return (\n    <React.Fragment>\n      <div id=\"\" className={/*portal === PORTALS.CRYPTO ? \"page\" :*/ \"forex page\"}>\n        <Header\n          toggleMenuCallback={toggleMenuCallback}\n          onChangeLayoutMode={onChangeLayoutMode}\n          onChangePortal={onChangePortal}\n          subPortal={subPortal}\n        />\n        <Sidebar\n          theme={leftSideBarTheme}\n          type={leftSideBarType}\n          isMobile={isMobile}\n          portal={portal}\n          subPortal={subPortal}\n        />\n        <div className=\"main-content\" style={{\n          // backgroundImage: backgroundImage,\n          minHeight: \"100vh\"\n        }}>\n          <Modals></Modals>\n          {props.children}\n          {/* {portal === PORTALS.FOREX ? <ForexFooter /> : <CryptoFooter />} */}\n          <ForexFooter /> \n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nLayout.propTypes = {\n  changeLayoutWidth: PropTypes.func,\n  changeSidebarTheme: PropTypes.func,\n  changeSidebarType: PropTypes.func,\n  changeTopbarTheme: PropTypes.func,\n  children: PropTypes.object,\n  isPreloader: PropTypes.any,\n  layoutWidth: PropTypes.any,\n  leftSideBarTheme: PropTypes.any,\n  leftSideBarType: PropTypes.any,\n  location: PropTypes.object,\n  showRightSidebar: PropTypes.any,\n  topbarTheme: PropTypes.any,\n  changelayoutMode: PropTypes.func,\n};\n\n\nexport default Layout;\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/context/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/config.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/reducers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/sagas.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/constants.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/formatReceivedNotification.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/routes/nonAuthRoutes.js",["1989","1990"],"// Authentication related pages\nimport Login from \"../pages/Authentication/Login\";\nimport Logout from \"../pages/Authentication/Logout\";\nimport ForgetPwd from \"../pages/Authentication/ForgetPassword\";\nimport ResetPassword from \"pages/Authentication/ResetPassword\";\nimport CryptoDemoRegister from \"../pages/Authentication/Register/Crypto/CryptoDemoRegister\";\nimport CryptoLiveRegister from \"pages/Authentication/Register/Crypto/CryptoLiveRegister\";\nimport ForexDemoRegister from \"pages/Authentication/Register/Forex/ForexDemoRegister\";\nimport ForexLiveRegister from \"pages/Authentication/Register/Forex/ForexLiveRegister\";\nimport ForexIbRegister from \"pages/Authentication/Register/Forex/ForexIbRegister\";\nimport CorpRegister from \"pages/Authentication/Register/Forex/CorpRegister\";\nimport CorpRegisterIB from \"pages/Authentication/Register/Forex/CorpRegisterIB\";\nimport Page404 from \"../pages/Authentication/Page404\";\nimport CampaignUnsubscribe from \"pages/campaignUnsubscribe\";\n\nexport default [\n  //non Auth routes\n  {\n    path: \"/logout\",\n    component: Logout,\n    isAuth: false\n  },\n  {\n    path: \"/login\",\n    component: Login,\n    isAuth: false\n  },\n  {\n    path: \"/forgot-password\",\n    component: ForgetPwd,\n    isAuth: false\n  },\n  // {\n  //   path: \"/register/crypto/live\",\n  //   component: CryptoLiveRegister,\n  //   isAuth: false\n  // },\n  // {\n  //   path: \"/register/crypto/demo\",\n  //   component: CryptoDemoRegister,\n  //   isAuth: false\n  // },\n  {\n    path: \"/register/forex/live\",\n    component: ForexLiveRegister,\n    isAuth: false\n  },\n  {\n    path: \"/register/forex/demo\",\n    component: ForexDemoRegister,\n    isAuth: false\n  },\n  {\n    path: \"/register/forex/ib\",\n    component: ForexIbRegister,\n    isAuth: false\n  },\n  {\n    path: \"/register/forex/corporate\",\n    component: CorpRegister,\n    isAuth: false\n  },\n  {\n    path: \"/register/forex/corporate/ib\",\n    component: CorpRegisterIB,\n    isAuth: false\n  },\n  {\n    path: \"/reset-password\",\n    component: ResetPassword,\n    isAuth: false\n  },\n  {\n    path: \"/unsubscribe\",\n    component: CampaignUnsubscribe,\n    isAuth: false\n  },\n  {\n    path: \"*\",\n    exact: true,\n    component: Page404,\n    isAuth: false\n  },\n];","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Header.js",["1991","1992","1993"],"import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\n//import drawer\nimport ReactDrawer from \"react-drawer\";\nimport \"react-drawer/lib/react-drawer.css\";\n\n// Import menuDropdown\nimport LanguageDropdown from \"../CommonForBoth/TopbarDropdown/LanguageDropdown\";\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\";\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\nimport RightSidebar from \"../CommonForBoth/RightSidebar\";\nimport LightDark from \"../CommonForBoth/Menus/LightDark\";\n\n// import images\n\n//i18n\nimport { withTranslation } from \"react-i18next\";\n\n// Redux Store\nimport {\n  showRightSidebarAction,\n  toggleLeftmenu,\n  changeSidebarType,\n  changelayoutMode\n} from \"../../store/actions\";\nimport PortalEntryPoint from \"./PortalEntryPoint\";\nimport { PORTALS } from \"common/constants\";\nimport {\n  enableFX,\n  enableCrypto,\n  ENABLE_DARK_MODE,\n  ENABLE_GLOBAL_SEARCH\n} from \"config\";\nimport useWindowDimensions from \"hooks/useWindowDimensions\";\n\nconst Header = props => {\n  const { onChangeLayoutMode, onChangePortal } = props;\n  const [isClick, setClick] = useState(true);\n  const [position] = useState();\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n  const onDrawerClose = () => {\n    setOpen(false);\n  };\n  const {\n    width\n  } = useWindowDimensions();\n\n  useEffect(() => {\n    if (width < 993) {\n      dispatch(changeSidebarType(\"sm\", isMobile));\n    } else {\n      dispatch(changeSidebarType(\"lg\", isMobile));\n    }\n  }, [width]);\n\n  /*** Sidebar menu icon and default menu set */\n  function tToggle() {\n    let body = document.body;\n    body.classList.toggle(\"sidebar-enable\");\n    body.classList.toggle(\"sidebar-hidden\");\n    setClick(!isClick);\n  }\n\n  return (\n    <React.Fragment>\n      <PortalEntryPoint />\n      <header id=\"page-topbar\">\n        <div className=\"navbar-header shadow-sm\"\n          style={{\n            padding: \"0\",\n          }}\n        >\n          <div className=\"d-flex justify-content-between\">\n            <button\n              onClick={() => {\n                tToggle();\n              }}\n              type=\"button\" className=\"btn btn-sm px-3 font-size-16 header-item\" id=\"vertical-menu-btn\">\n              {props.layoutMode === \"dark\" ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" viewBox=\"0 0 24 24\">\n                <path d=\"M22 12H3\" stroke=\"#ffffff\"></path>\n                <g stroke=\"#ffffff\">\n                  <path d=\"M22 4H13\"></path>\n                  <path opacity=\".301\" d=\"M22 20H13\"></path>\n                </g>\n                <path d=\"M7 7l-5 5 5 5\" stroke=\"#ffffff\"></path>\n              </svg> : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" viewBox=\"0 0 24 24\">\n                <path d=\"M22 12H3\" stroke=\"#11142d\"></path>\n                <g stroke=\"#808191\">\n                  <path d=\"M22 4H13\"></path>\n                  <path opacity=\".301\" d=\"M22 20H13\"></path>\n                </g>\n                <path d=\"M7 7l-5 5 5 5\" stroke=\"#11142d\"></path>\n              </svg>}\n            </button>\n            {\n              ENABLE_GLOBAL_SEARCH &&\n              (\n                <form className=\"app-search d-none d-lg-block\">\n                  <div className=\"position-relative\">\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search...\" />\n                    <button className=\"btn fs-4 d-flex align-items-center\" type=\"button\">\n                      <i className=\"bx bx-search-alt-2 align-middle\" />\n                    </button>\n                  </div>\n                </form>\n              )\n            }\n          </div>\n          <div className=\"d-flex\">\n            {\n              enableFX && enableCrypto && (\n                <>\n                  <div className=\"my-auto me-2\">\n                    {props.t(\"Forex\")}\n                  </div>\n                  <div className=\"form-check form-switch form-switch-md my-auto\">\n                    <input type=\"checkbox\" className=\"form-check-input\" id=\"customSwitchsizemd\" checked={/*props.portal === PORTALS.CRYPTO ? true :*/ false} onChange={(e) => {\n                      history.replace(\"/dashboard\");\n                      onChangePortal(e.target.checked);\n                    }} />\n                  </div>\n                  <div className=\"my-auto\">\n                    {props.t(\"Crypto\")}\n                  </div>\n                </>\n              )\n            }\n\n            <LanguageDropdown />\n\n            {/* light / dark mode */}\n            {/* {ENABLE_DARK_MODE ? <LightDark layoutMode={props[\"layoutMode\"]} onChangeLayoutMode={onChangeLayoutMode} /> : null} */}\n\n            <NotificationDropdown />\n            <ProfileMenu />\n\n          </div>\n        </div>\n      </header>\n      <ReactDrawer\n        open={open}\n        position={position}\n        onClose={onDrawerClose}\n      >\n        <RightSidebar onClose={onDrawerClose} onChangeLayoutMode={onChangeLayoutMode} />\n      </ReactDrawer>\n    </React.Fragment>\n  );\n};\n\nHeader.propTypes = {\n  changeSidebarType: PropTypes.func,\n  leftMenu: PropTypes.any,\n  showRightSidebar: PropTypes.any,\n  showRightSidebarAction: PropTypes.func,\n  t: PropTypes.any,\n  toggleLeftmenu: PropTypes.func,\n  changelayoutMode: PropTypes.func,\n  layoutMode: PropTypes.any,\n};\n\nconst mapStatetoProps = state => {\n  const {\n    layoutType,\n    showRightSidebar,\n    leftMenu,\n    layoutMode,\n    portal\n  } = state.Layout;\n  return {\n    layoutType,\n    showRightSidebar,\n    leftMenu,\n    layoutMode,\n    portal\n  };\n};\n\nexport default connect(mapStatetoProps, {\n  showRightSidebarAction,\n  changelayoutMode,\n  toggleLeftmenu,\n  changeSidebarType,\n})(withTranslation()(Header));\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar.js",["1994","1995","1996"],"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport bgImg from \"../../assets/images/bg/1.png\";\n\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport { PORTALS } from \"common/constants\";\nimport CryptoSidebarContent from \"./CryptoSidebarContent\";\nimport ForexSideBarContent from \"./Sidebar/ForexSiderbarContent\";\n\nconst Sidebar = props => {\n  const { layoutMode } = useSelector(state => state.Layout);\n  const backgroundImage = layoutMode === \"dark\" ? bgImg : undefined;\n  return (\n    <React.Fragment>\n      <div className=\"vertical-menu shadow-sm\" style={\n        {\n          zIndex: 99,\n          ...(backgroundImage ? { backgroundImage: `url(${backgroundImage})` } : {}),\n        }\n      } >\n        <div data-simplebar className=\"h-100\">\n          <ForexSideBarContent />\n          {/* {props.portal === PORTALS.CRYPTO ? <CryptoSidebarContent /> : <ForexSideBarContent />} */}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nSidebar.propTypes = {\n  type: PropTypes.string,\n};\n\nconst mapStatetoProps = state => {\n  return {\n    layout: state.Layout,\n  };\n};\nexport default connect(\n  mapStatetoProps,\n  {}\n)(withRouter(withTranslation()(Sidebar)));\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/ForexFooter.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/CryptoFooter.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/context/context.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/reducers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sagas.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/sagas.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/reducers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/sagas.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/reducers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/QuickBuy/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Wallet/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Referral/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/index.js",["1997","1998","1999","2000"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container } from \"reactstrap\";\nimport MetaTags from \"react-meta-tags\";\n\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport Widgets from \"components/Common/Widgets\";\nimport Transactions from \"./Transactions\";\nimport Deposits from \"./Deposits\";\nimport Withdrawals from \"./Withdrawals\";\nimport Orders from \"./Orders\";\nimport Convert from \"./Convert\";\nimport AllFilters from \"./filters/AllFilters\";\nimport { withTranslation } from \"react-i18next\";\nimport WithdrawalFilters from \"./filters/WithdrawalFilters\";\nimport DepositFilters from \"./filters/DepositFilters\";\nimport OrderFilter from \"./filters/OrderFilter\";\nimport ConvertFilters from \"./filters/ConvertFilters\";\nimport { fetchWallets } from \"store/actions\";\n\nfunction History(props) {\n  const dispatch = useDispatch();\n  const [activeTab, setTab] = useState(0);\n  const [transactionsFilterObj, setTransactionsFilterObj] = useState({});\n  const [depositsFilterObj, setDepositsFilterObj] = useState({});\n  const [withdrawalsFilterObj, setWithdrawalsFilterObj] = useState({});\n  const [ordersFilterObj, setOrdersFilterObj] = useState({});\n  const [convertsFilterObj, setConvertsFilterObj] = useState({});\n  const { assets } = useSelector(state=>state.assets);\n  \n  const { wallets } = useSelector(state=>state.crypto.wallets);\n  useEffect(() => {\n    if (!wallets || wallets.length === 0)\n      dispatch(fetchWallets());\n  }, []);  \n  const transactionsFilterHandler = (filter) => {\n    filter.fromDate === \"\" && delete filter.fromDate;\n    filter.toDate === \"\" && delete filter.toDate;\n    setTransactionsFilterObj(filter);\n  };\n\n  const depositsFilterHandler = (filter) => {\n    filter.fromDate === \"\" && delete filter.fromDate;\n    filter.toDate === \"\" && delete filter.toDate;\n    setDepositsFilterObj(filter);\n  };\n\n  const withdrawalsFilterHandler = (filter) => {\n    filter.fromDate === \"\" && delete filter.fromDate;\n    filter.toDate === \"\" && delete filter.toDate;\n    setWithdrawalsFilterObj(filter);\n  };\n\n  const ordersFilterHandler = (filter) => {\n    filter.fromDate === \"\" && delete filter.fromDate;\n    filter.toDate === \"\" && delete filter.toDate;\n    setOrdersFilterObj(filter);\n  };\n\n  const convertsFilterHandler = (filter) => {\n    filter.fromDate === \"\" && delete filter.fromDate;\n    filter.toDate === \"\" && delete filter.toDate;\n    setConvertsFilterObj(filter);\n  };\n\n  // const widgets = [\"All\", \"Withdrawls\", \"Deposit\", \"Orders\", \"Convert\"];\n  const widgets = [\"All\", \"Withdrawls\", \"Deposit\"];\n\n  return (\n    <>\n      <div className=\"page-content\">\n        <MetaTags>\n          <title>{props.t(\"History\")}</title>\n        </MetaTags>\n        <Container className=\"mb-5 mt-5\">\n          <div className=\"d-flex flex-row\">\n            <h1 className=\"mb-4\">\n              {props.t(\"Wallet History\")}\n            </h1>\n          </div>\n          <Widgets\n            setTab={setTab}\n            tabs={widgets}\n          >\n            {/* filter tabs */}\n            {\n              activeTab === 0 && <AllFilters filterHandler={transactionsFilterHandler} wallets={wallets} />\n            }\n            {\n              activeTab === 2 && <DepositFilters filterHandler={depositsFilterHandler} wallets={wallets} />\n            }\n            {\n              activeTab === 1 && <WithdrawalFilters filterHandler={withdrawalsFilterHandler} wallets={wallets} />\n            }\n            {/* {\n              activeTab === 3 && <OrderFilter filterHandler={ordersFilterHandler} />\n            }\n            {\n              activeTab === 4 && <ConvertFilters filterHandler={convertsFilterHandler} wallets={wallets} />\n            } */}\n            <CardWrapper className=\"glass-card shadow\">\n              <Container>\n                {activeTab === 0 && <Transactions assets={assets} filterObj={transactionsFilterObj} />}\n                {activeTab === 2 && <Deposits assets={assets} filterObj={depositsFilterObj} />}\n                {activeTab === 1 && <Withdrawals assets={assets} filterObj={withdrawalsFilterObj} />}\n                {activeTab === 3 && <Orders assets={assets} filterObj={ordersFilterObj} />}\n                {activeTab === 4 && <Convert assets={assets} filterObj={convertsFilterObj} />}\n              </Container>\n            </CardWrapper>\n          </Widgets>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default withTranslation()(History); ","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/test/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/2FA/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Login.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/BankAccounts/BankAccounts.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/TradingAccount/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/BankAccounts/BankAccounts.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/hooks/useWindowDimensions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/ForexSiderbarContent.js",["2001","2002","2003"],"import PropTypes from \"prop-types\";\n// eslint-disable-next-line object-curly-newline\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { getIbRequestStatus, toggleCurrentModal } from \"store/actions\";\n// //Import Scrollbar\nimport SimpleBar from \"simplebar-react\";\n\n// MetisMenu\nimport { withRouter, Link } from \"react-router-dom\";\n\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { JClickHandler } from \"components/Journey/handlers\";\nimport * as content from \"content\";\nimport menuList from \"./forexSidebar\";\nimport classNames from \"classnames\";\nimport { getIbDashboardSummary } from \"apis/forex/ib\";\nimport { CUSTOMER_SUB_PORTALS } from \"common/constants\";\n\nconst MenuItem = ({ key, item, t }) => {\n  return (\n    <React.Fragment key={\"_menu_\" + key}>\n      <li\n        className={classNames(\"mx-auto\", {\n          \"mm-active\": item?.link === window.location.pathname,\n        })}\n      >\n        <Link to={item?.link}>\n          <i >{item.icon}</i>\n          <span>{t(item.title)}</span>\n        </Link>\n      </li>\n    </React.Fragment>\n  );\n};\n\nconst SubMenuItem = ({ key, item, t }) => {\n  const [subMenuActive, setSubMenuActive] = useState(false);\n  const [onHover, setOnHover] = useState(false);\n  const toggle = () => setSubMenuActive(!subMenuActive);\n  const isDropdownActive =\n    item?.subMenu?.findIndex((subItem) => {\n      return subItem?.link === window.location.pathname;\n    }) > -1;\n  return (\n    <React.Fragment key={\"_submenu_\" + key}>\n      <li\n        className={classNames({\n          \"mm-active\": subMenuActive || isDropdownActive,\n        })}\n        style={onHover ? { position: \"static\" } : { position: \"relative\" }}\n        onMouseEnter={() => setOnHover(true)}\n        onClick={toggle}\n      >\n        <Link\n          to=\"#\"\n          className={classNames(\"has-arrow\", {\n            \"mm-collapse\": !(subMenuActive || isDropdownActive),\n          })}\n          aria-expanded={false}\n        >\n          <i >{item.icon}</i>\n          <span>{t(item?.title)}</span>\n        </Link>\n        <ul\n          className={classNames(\n            \"sub-menu\",\n            { \"mm-collapse\": !(subMenuActive || isDropdownActive) },\n            { \"mm-show\": subMenuActive || isDropdownActive }\n          )}\n        >\n          {item?.subMenu?.map((subItem, index) => {\n            return (\n              <li\n                key={\"_subitem_\" + index}\n                className={classNames({\n                  \"mm-active\": subItem?.link === window.location.pathname,\n                })}\n              >\n                <Link\n                  to={subItem?.link}\n                  className={classNames({\n                    active: subItem?.link === window.location.pathname,\n                  })}\n                >\n                  <i >{subItem?.icon}</i>\n                  <span>{t(subItem?.title)}</span>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </li>\n    </React.Fragment>\n  );\n};\n\nconst ForexSidebarContent = (props) => {\n  const dispatch = useDispatch();\n\n  const ref = useRef();\n  const { clientData } = useSelector((state) => state.Profile);\n  const { partnershipStatus } = useSelector((state) => ({\n    partnershipStatus: state.forex.requests.partnership.status,\n  }));\n  const { subPortal, layoutMode, portal } = useSelector((state) => ({\n    subPortal: state.Layout.subPortal,\n    portal: state.Layout.portal,\n    layoutMode: state.Layout.layoutMode,\n  }));\n  const { stages } = clientData;\n  const { ibMT5Acc } = useSelector((state) => state.Profile.clientData.fx);\n  const [ibAllowTranscation, setIbAllowTransaction] = useState(false);\n  const [selectedPlatform, setSelectedPlatform] = useState({\n    label: `MT5${ibMT5Acc?.length > 0 ? ` (${ibMT5Acc[0]})` : \"\"}`,\n    value: \"MT5\",\n  });\n  const [state, setState] = useState({\n    loading: false,\n  });\n\n  useEffect(()=>{\n    setIbAllowTransaction((state?.live >= 5));\n  }, [state]);\n  \n  useEffect(() => {\n    dispatch(getIbRequestStatus());\n  }, []);\n  //Get IB Live Accounts\n  \n  useEffect(() => {\n    if (subPortal === CUSTOMER_SUB_PORTALS.IB ){\n      const getSummary = async () => {\n        setState({\n          ...state,\n          loading: true,\n        });\n        const result = await getIbDashboardSummary({\n          platform: selectedPlatform.value,\n        });\n        if (result.status)\n          setState({\n            ...state,\n            loading: false,\n            ...result.result,\n          });\n        else\n          setState({\n            ...state,\n            loading: false,\n          });\n        };\n      getSummary();\n    }\n  }, [selectedPlatform]);\n\n\n  return (\n    <React.Fragment>\n      <SimpleBar style={{ maxHeight: \"100%\" }} ref={ref}>\n        <div\n          id=\"sidebar-menu\"\n          style={{\n            overflow: \"hidden\",\n          }}\n        >\n          <div className=\"navbar-brand-box\">\n            <Link to=\"/dashboard\" className=\"logo-container\">\n              <span className=\"logo-big\">\n                <img src={\n                  layoutMode === \"light\" ? content.mainLogo : content.darkLogo\n                } alt=\"\" style={{width: \"75px\"}} />\n              </span>\n              <span className=\"logo-sm\">\n                <img src={\n                  layoutMode === \"dark\" ? content.mainLogo : content.mainLogo\n                } alt=\"\" />\n              </span>\n            </Link>\n          </div>\n          <ul className=\"metismenu list-unstyled\" id=\"side-menu\">\n            {menuList(portal, subPortal, clientData, ibAllowTranscation, {\n              partnershipStatus,\n            }, layoutMode)\n              .filter((item) => item)\n              .map((item, key) => {\n                if (item?.onClick) {\n                  return (\n                    <li key={key} className=\"mx-auto\">\n                      <Link\n                        href=\"#\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          JClickHandler(\n                            item.onClick,\n                            stages,\n                            dispatch,\n                            toggleCurrentModal,\n                            subPortal,\n                            portal,\n                          )();\n                        }}\n                      >\n                        {item?.icon && (\n                          <i>\n                            {item.icon}\n                          </i>\n                        )}\n                        <span>{props.t(item?.title)}</span>\n                      </Link>\n                    </li>\n                  );\n                }\n                if ((item?.link && item?.link !== \"#\") || !item?.hasSubMenu) {\n                  return <MenuItem key={key} item={item} t={props.t} />;\n                }\n                return <SubMenuItem key={key} item={item} t={props.t} />;\n              })}\n          </ul>\n        </div>\n      </SimpleBar>\n    </React.Fragment>\n  );\n};\n\nForexSidebarContent.propTypes = {\n  location: PropTypes.object,\n  t: PropTypes.any,\n};\n\nexport default withRouter(withTranslation()(ForexSidebarContent));\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Crypto.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Withdrawals/WithdrawModals.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Wallets/Wallet.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/JourneyModals.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Forex/Forex.js",["2004","2005"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProfile, toggleCurrentModal } from \"../../../store/actions\";\nimport CreateAccModal from \"components/Forex/Accounts/CreateAccModal\";\nimport LeverageModal from \"pages/Forex/Accounts/LeverageModal\";\nimport SelectDepositMethod from \"components/Forex/Deposit/SelectDepositMethod\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nfunction ForexModals() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { currentModal, modalData } = useSelector((state) => ({\n    currentModal: state.Layout.currentModal,\n    modalData: state.Layout.modalData,\n  }));\n  return (\n    <>\n      {currentModal === \"CreateAccModal\" && <CreateAccModal\n        type={modalData}\n        isOpen={currentModal === \"CreateAccModal\"}\n        toggle={() => {\n          dispatch(toggleCurrentModal(\"\"));\n        }}\n      ></CreateAccModal>}\n\n      {currentModal === \"LeverageModal\" && <LeverageModal\n        accounts={modalData}\n        isOpen={currentModal === \"LeverageModal\"}\n        toggle={() => {\n          dispatch(toggleCurrentModal(\"\"));\n        }}\n      ></LeverageModal>}\n\n      {currentModal === \"ForexDeposit\" && <SelectDepositMethod\n        isOpen={currentModal === \"ForexDeposit\"}\n        toggle={()=>{\n          dispatch(toggleCurrentModal(\"\"));\n        }}\n      >\n      </SelectDepositMethod>}\n    </>\n  );\n}\n\nexport default ForexModals;\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Deposits/DepositModals.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/socket/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/Withdrawals.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/Deposits.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Wallet/index.js",["2006","2007"],"import React, { useEffect, useState } from \"react\";\n// eslint-disable-next-line object-curly-newline\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MetaTags from \"react-meta-tags\";\n\n// import { fetchWallets, toggleCurrentModal } from \"src/store/actions\";\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport CustomTable from \"components/Common/CustomTable\";\nimport { getAssetImgSrc } from \"helpers/assetImgSrc\";\nimport { fetchWallets, toggleCurrentModal } from \"store/actions\";\nimport Loader from \"components/Common/Loader\";\nimport { JClickHandler } from \"components/Journey/handlers\";\nimport { CUSTOMER_SUB_PORTALS } from \"common/constants\";\nimport { getIbDashboardSummary } from \"apis/forex/ib\";\nfunction Wallet(props) {\n  const dispatch = useDispatch();\n  const { wallets, loading } = useSelector((state) => state?.walletReducer);\n  const { clientData } = useSelector((state) => state?.Profile);\n  const { subPortal, portal } = useSelector((state) => ({\n    subPortal: state.Layout.subPortal,\n    portal: state.Layout.portal,\n  }));\n  const { ibMT5Acc } = useSelector((state) => state.Profile.clientData.fx);\n  const [selectedPlatform, setSelectedPlatform] = useState({\n    label: `MT5${ibMT5Acc?.length > 0 ? ` (${ibMT5Acc[0]})` : \"\"}`,\n    value: \"MT5\",\n  });\n  const [state, setState] = useState({\n    loading: false,\n  });\n\n  const loadWallets = () => {\n    dispatch(fetchWallets());\n  };\n  useEffect(() => {\n    loadWallets({\n      isCrypto: false,\n      isInventory: false,\n    });\n  }, []);\n\n  if (subPortal === CUSTOMER_SUB_PORTALS.IB ){\n    const getSummary = async () => {\n      setState({\n        ...state,\n        loading: true,\n      });\n      const result = await getIbDashboardSummary({\n        platform: selectedPlatform.value,\n      });\n      if (result.status)\n        setState({\n          ...state,\n          loading: false,\n          ...result.result,\n        });\n      else\n        setState({\n          ...state,\n          loading: false,\n        });\n      };\n        useEffect(() => {\n          getSummary();\n        }, [selectedPlatform]);\n        \n  }\n  const filteredWallets = (subPortal != CUSTOMER_SUB_PORTALS.IB) \n      ? wallets?.filter((wallet) => !wallet?.isCrypto && !wallet?.isInventory && !wallet?.isIb)\n      : wallets?.filter((wallet) => !wallet?.isCrypto && !wallet?.isInventory && wallet?.isIb); \n      \n  const walletWithBalance = () => {\n    const wallet = filteredWallets?.find((wallet) => {wallet?.amount > 0});\n    if (!wallet && filteredWallets?.length) {\n      return filteredWallets[0];\n    }\n    return wallet;\n  };\n\n  const columns = [\n    {\n      text: props.t(\"Asset\"),\n      formatter: (val) => {\n        return (\n          <div className=\"balances__company\">\n            <div className=\"balances__logo\">\n              <img src={getAssetImgSrc(val.assetId)} alt=\"\" />\n            </div>\n            <div className=\"balances__text\">{val.asset}</div>\n          </div>\n        );\n      },\n    },\n    {\n      text: props.t(\"Available Balance\"),\n      formatter: (val) => (\n        <>\n          <div className=\"balances__number\">{val.amount?.toFixed(2)}</div>\n        </>\n      ),\n    },\n    {\n      text: props.t(\"Total Balance\"),\n      formatter: (val) => (\n        <>\n          <div className=\"balances__number\">{`${(\n            parseFloat(val.freezeAmount) + parseFloat(val.amount)\n          )?.toFixed(2)}`}</div>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"page-content\">\n      <MetaTags>\n        <title>{props.t(\"Wallets\")}</title>\n      </MetaTags>\n      <Container>\n        <div className=\"mt-5\">\n          <div className=\"wallet-page\">\n            <h1 className=\"mb-3\">{props.t(\"Overview\")}</h1>\n            <CardWrapper className=\"mb-5 total-balance glass-card shadow\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <>\n                  {!filteredWallets?.length ? (\n                    <div className=\"text-center\">{props.t(\"No data\")}</div>\n                  ) : (\n                    <>\n                      <Row className=\"align-items-center justify-content-between\">\n                        <Col lg={4}>\n                          <div className=\"wallets__total\">\n                            <div className=\"wallets__title h6\">\n                              {props.t(\"Total Balance\")}\n                            </div>\n                            <div className=\"total-balance-container\">\n                              <div className=\"wallets__number h3\">\n                                {(\n                                  parseFloat(walletWithBalance().freezeAmount) +\n                                  parseFloat(walletWithBalance().amount)\n                                )?.toFixed(2)}\n                              </div>\n                              {/* <img src=\"img/logo/bitcoin.png\" alt=\"bitcoinlogo\"></img> */}\n                            </div>\n                            <div className=\"balance-price\">\n                              {walletWithBalance().amount?.toFixed(2)}{\" \"}\n                              {walletWithBalance()?.asset}\n                            </div>\n                          </div>\n                        </Col>\n                        <Col lg={7} className=\"wallet-btns\">\n                          <Button disabled={(subPortal === CUSTOMER_SUB_PORTALS.IB && state?.live <= 4)}  \n                            type=\"button\" \n                            className='btn-danger w-lg' \n                            onClick={() => { JClickHandler(\"fiatWithdraw\", clientData?.stages, dispatch, toggleCurrentModal, subPortal === CUSTOMER_SUB_PORTALS.IB /*portal,  true*/)() }}\n                            >\n                            {props.t(\"Withdraw\")}\n                          </Button>\n                          <Button type=\"button\" \n                            className='btn-success w-lg' \n                            onClick={() => { JClickHandler(\"fiatDeposit\", clientData?.stages, dispatch, toggleCurrentModal, subPortal === CUSTOMER_SUB_PORTALS.IB /* portal, portal*/)() }}\n                          >\n                            {props.t(\"Deposit\")}\n                          </Button>\n                          <Button type=\"button\" disabled={(subPortal === CUSTOMER_SUB_PORTALS.IB && state?.live <= 4)}\n                            className='color-bg-btn border-0 w-lg' \n                            onClick={() => { JClickHandler(\"Transfer\", clientData?.stages, dispatch, toggleCurrentModal, subPortal === CUSTOMER_SUB_PORTALS.IB /*portal, portal*/)() }}\n                          >\n                            {props.t(\"Internal Transfer\")}\n                          </Button>\n                        </Col>\n                      </Row>\n                    </>\n                  )}\n                </>\n              )}\n            </CardWrapper>\n            <h1 className=\"mb-3\">{props.t(\"Asset Balances\")}</h1>\n            <CardWrapper className=\"mb-5 glass-card shadow\">\n              <CustomTable\n                columns={columns}\n                rows={filteredWallets}\n              ></CustomTable>\n            </CardWrapper>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\nexport default withTranslation()(Wallet);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Activities/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Notifications/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/InternalTransfer/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Withdraw/index.js",["2008","2009","2010","2011"],"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container, Col, Row, Button, Spinner,\n} from \"reactstrap\";\nimport MetaTags from \"react-meta-tags\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport {\n  AvForm, AvField, AvCheckboxGroup, AvCheckbox\n} from \"availity-reactstrap-validation\";\n\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport PageHeader from \"components/Forex/Common/PageHeader\";\nimport AvFieldSelecvt from \"../../../components/Common/AvFieldSelect\";\nimport {\n  addWithdrawal, fetchWithdrawalsGatewaysStart, getAccountsStart, showErrorNotification, showSuccessNotification, toggleCurrentModal\n} from \"store/actions\";\nimport IbNotApproved from \"components/Common/IbNotApproved\";\nimport {\n  companyName,\n} from \"content\";\nimport { addWithdraw } from \"apis/withdraw\";\nimport { getIbWallet } from \"apis/forex/ib\";\n\nconst Withdraw = (props) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [walletLoading, setWalletLoading] = useState(false);\n  const [wallet, setWallet] = useState({\n    amount: 0,\n    frozenAmount: 0,\n  });\n  const { gateways } = useSelector((state) => state.forex.ib.transactions.withdraws);\n  const { accounts } = useSelector((state) => state.forex.accounts);\n  const bankAccounts = useSelector((state) => state.crypto?.bankAccounts?.bankAccounts?.docs);\n  const { subPortal } = useSelector((state) => (state.Layout));\n  const partnershipAgreement = useSelector((state) => (state.Profile.clientData.stages?.ib?.partnershipAgreement));\n\n  const isIbPortal = (subPortal === \"IB\");\n  const [fields, setFields] = useState({\n    amount: 0,\n    note: \"\",\n  });\n\n  useEffect(()=>{\n    setWalletLoading(true);\n    getIbWallet().then((res)=>{\n      if (res.isSuccess) {\n        setWallet({\n          ...res.result,\n        });\n      } else {\n        throw new Error(res.message);\n      }\n    }).catch((err)=>{\n      console.log(err);\n    }).finally(()=>{\n      setWalletLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(fetchWithdrawalsGatewaysStart());\n    dispatch(getAccountsStart({ type: \"IB\" }));\n  }, []);\n\n  const handleSubmit = (v) => {\n    setLoading(true);\n    addWithdraw({\n      gateway: v.gateway,\n      walletId: wallet._id,\n      amount: v.amount,\n      note: v.note,\n    }).then((res) => {\n      if (res.isSuccess) {\n        dispatch(showSuccessNotification(\"Withdrawal request has been submitted successfully\"));\n      } else {\n        throw new Error(res.message);\n      }\n    }).catch((err) => {\n      console.log(err);\n      dispatch(showErrorNotification(err.message));\n    }).finally(() => {\n      setLoading(false);\n      setFields({\n        amount: 0,\n        note: \"\",\n      });\n    });\n  };\n\n  return (\n    <>\n      <MetaTags>\n        <title>{props.t(\"Withdrawals\")}</title>\n      </MetaTags>\n      <Container>\n        {isIbPortal && !partnershipAgreement && <IbNotApproved />}\n        <div className=\"page-content mt-5\">\n          <PageHeader title=\"Withdrawals\"></PageHeader>\n          <Row className=\"mt-4\">\n            <Col md={6}>\n              <CardWrapper className=\"p-4 glass-card shadow\">\n                <div className=\"d-flex justify-content-between\">\n                  <h3 className=\"color-primary\">{props.t(\"IB Wallet Withdrawal\")}</h3>\n                  <i className=\"bx bx-dots-vertical-rounded fs-3 mt-1\"></i>\n                </div>\n                <AvForm className=\"mt-4\" onValidSubmit={(e, v) => handleSubmit(v)} >\n                  {\n                    (loading || walletLoading) ? <Spinner /> : \n                      <>\n                        <Row>\n                          <Col lg={6}>\n                            <div className=\"mb-3\">\n                              <h4>\n                                {t(\"Available Balance\")}\n                                :\n                                {\" \"}\n                                <span className=\"color-primary\">\n                                  {walletLoading ? \"Loading...\" : wallet.amount}\n                                </span>\n                              </h4>\n                            </div>\n                          </Col>\n                        </Row>\n                        <div className=\"mb-3\">\n                          <AvFieldSelecvt\n                            name=\"gateway\"\n                            label={t(\"Transaction Gateway\")}\n                            className=\"form-control\"\n                            placeholder={t(\"Select Transaction Gateway\")}\n                            type=\"select\"\n                            options={gateways && Object.keys(gateways).map((key) => ({\n                              label: key,\n                              value: key\n                            }\n                            ))}\n                            value={fields.gateway}\n                            onChange={(e) => {\n                              setFields({\n                                ...fields,\n                                gateway: e\n                              });\n                            }}\n                            required\n                          />\n                        </div>\n\n                        {/* <div className=\"mb-3\">\n                          <AvFieldSelecvt\n                            name=\"tradingAccountId\"\n                            label={t(\"From Account\")}\n                            className=\"form-control\"\n                            placeholder={t(\"Select From Account\")}\n                            type=\"select\"\n                            options={accounts?.map((account) => ({\n                              label: account.login,\n                              value: account._id\n                            }))}\n                            value={fields.tradingAccountId}\n                            onChange={(e) => {\n                              setFields({\n                                ...fields,\n                                tradingAccountId: e\n                              });\n                            }}\n                            required\n                          />\n                        </div> */}\n                        <Row className=\"mb-3\">\n                          <Col lg={bankAccounts?.length < 0 ? 9 : 12}>\n                            <AvFieldSelecvt\n                              name=\"bankAccount\"\n                              label={t(\"Bank Account\")}\n                              className=\"form-control\"\n                              placeholder={t(\"Select Bank Account\")}\n                              type=\"select\"\n                              options={bankAccounts?.map((bank) => ({\n                                label: bank.bankName,\n                                value: bank._id\n                              }))}\n                              value={fields.bankAccount}\n                              onChange={(e) => {\n                                setFields({\n                                  ...fields,\n                                  bankAccount: e\n                                });\n                              }}\n                              required\n                            />\n                          </Col>\n                          {bankAccounts?.length < 1 &&\n                          <Col lg={3} className=\"flex justify-content-center align-items-center\">\n                            <button type=\"button\" className=\"btn color-bg-btn color-white mt-4\" onClick={() => {\n                              dispatch(toggleCurrentModal(\"AddBankAccountModal\"));\n                            }\n                            }>{t(\"Add Bank\")}</button>\n                          </Col>\n                          }\n                        </Row>\n                        <div className=\"mb-3\">\n                          <AvField\n                            name=\"amount\"\n                            label={props.t(\"Amount (In currency of the selected account)\")}\n                            placeholder={props.t(\"Enter Amount\")}\n                            type=\"number\"\n                            min=\"0\"\n                            errorMessage={props.t(\"Enter Amount\")}\n                            value={fields.amount}\n                            onChange={(e) => {\n                              setFields({\n                                ...fields,\n                                amount: e.target.value\n                              });\n                            }}\n                            required\n                          />\n                        </div>\n\n                        <div className=\"mb-3\">\n                          <AvField\n                            name=\"note\"\n                            label={props.t(\"Note\")}\n                            placeholder={props.t(\"Enter Note\")}\n                            type=\"text\"\n                            errorMessage={props.t(\"Enter Note\")}\n                            value={fields.note}\n                            onChange={(e) => {\n                              setFields({\n                                ...fields,\n                                note: e.target.value\n                              });\n                            }}\n                          />\n                        </div>\n                        <AvCheckboxGroup\n                          name=\"termsAndConditions\"\n                          required\n                          style={{ background: \"transparent\" }}\n                        >\n                          <AvCheckbox\n                            label={props.t(\"I confirm, the bank account I added is correct.\")}\n\n                          />\n                        </AvCheckboxGroup>\n                        <div className=\"text-center mt-4\">\n                          <Button type=\"submit\" className=\"color-bg-btn border-0 w-lg\">{props.t(\"Submit\")}</Button>\n                        </div>\n                      </>\n                  }\n                </AvForm>\n              </CardWrapper>\n            </Col>\n            <Col md={6} className=\"mt-4 mt-md-0\">\n              <CardWrapper className=\"h-100 p-4 shadow glass-card\">\n                <h3 className=\"text-danger\">{props.t(\"Important Notice\")}</h3>\n                <p className=\"mt-3\">\n                  {props.t(`${companyName}, in accordance with international laws on combating terrorist financing\n                and money laundering, does not accept payments from third parties &\n                payments to third parties are not carried out.`)}\n                </p>\n                <p className=\"mt-3\">\n                  {props.t(`${companyName} may require additional documentation /information from you to prove your\n                bank account held in your name as third party payments are not permitted.`)}\n                </p>\n                <p className=\"mt-3\">\n                  {props.t(`All withdrawals will be returned to the original source of funding. any profits on\n                your account must be retumed to you via bank transfer.`)}\n                </p>\n              </CardWrapper>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default withTranslation()(Withdraw);","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Reports/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Platforms/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Activites/index.js",["2012"],"import {\n  Container, Table,\n  Button\n} from \"reactstrap\";\nimport MetaTags from \"react-meta-tags\";\nimport { withTranslation } from \"react-i18next\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { fetchLogs } from \"../../../store/general/logs/actions\";\nimport { getLogMessage } from \"helpers/getLogMessages\";\nimport Loader from \"components/Common/Loader\";\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport PageHeader from \"components/Forex/Common/PageHeader\";\nimport {\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr\n} from \"react-super-responsive-table\";\n\nconst Activites = (props) => {\n  const dispatch = useDispatch();\n  const {\n    t,\n    logs,\n    loading,\n    totalDocs,\n  } = props;  const constLimit = 5;\n  const [limit, setLimit] = useState(constLimit);\n  useEffect(() => {\n    dispatch(fetchLogs({\n      page: 1,\n      limit,\n    }));\n  }, [limit]);\n\n  function dateFormatter(val)  {\n    let d = new Date(val.createdAt);\n    d = `${d.toLocaleDateString()}, ${d.toLocaleTimeString()}`;\n    return d;\n  }\n\n  function renderLoadBtn() {\n    return logs?.length > 0\n      && totalDocs > logs?.length && !loading &&\n      <Button\n        type=\"button\"\n        className=' w-100 mt-2 color-bg-btn border-0'\n        onClick={() => {\n          if (totalDocs > logs?.length) {\n            setLimit(preValue => preValue + constLimit);\n          }\n        }}\n      >\n        {t(\"Load More\")}\n      </Button>;\n  }\n\n  const columns = [\n    {\n      dataField: \"createdAt\",\n      text: t(\"Date and Time\"),\n      sort: true,\n      formatter: dateFormatter,\n    },\n    {\n      dataField: \"message\",\n      text: t(\"Message\"),\n      sort: true,\n      formatter: (val) => getLogMessage(val),\n    },\n  ];\n\n  return (\n    <>\n      <MetaTags>\n        <title>{t(\"Activities\")}</title>\n      </MetaTags>\n      <Container>\n        <div className=\"page-content mt-5\">\n          <PageHeader title=\"Activities\n          \"></PageHeader>\n          <div>\n            <CardWrapper className=\"mt-4 p-4 glass-card shadow\">\n              <div className=\"border rounded-3 mt-4\">\n                <Table borderless responsive className=\"text-center mb-0\" >\n                  <Thead className=\"text-center table-light\">\n                    <Tr>\n                      {columns.map((column, index) => (\n                        <Th data-priority={index} key={index} className=\"color-primary\"> \n                          {column.text}\n                        </Th>\n                      ))}\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {loading && <Loader />}\n                    {logs?.length > 0 && logs.map((log, index) => (\n                      <tr key={index} className=\"border-top\">\n                        <td className=\"font-weight-bold\">{dateFormatter(log)}</td>\n                        <td className=\"font-weight-bold\">{getLogMessage(log)}</td>\n                      </tr>\n                    ))}\n                  </Tbody>\n                </Table>\n              </div>\n              <div className=\"mt-4\">\n                {renderLoadBtn()}\n              </div>\n            </CardWrapper>\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  logs: (state.logs.logs && state.logs.logs.docs) || [],\n  totalDocs: state.logs.logs.totalDocs,\n  logsLoaded: state.logs.logsLoaded,\n  loading: state.logs.loading,\n});\n\nexport default connect(mapStateToProps, null)(withTranslation()(Activites));","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Statement/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebTrader/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebFeed/index.js",["2013","2014"],"\nimport React, { useEffect } from \"react\";\nimport \"./webtrader.scss\";\n\nconst WebFeed = (props) => {\n\n  return (\n    <>\n      <div className=\"container-iframe mt-5\">\n        <iframe className=\"responsive-iframe mt-5\" src=\"https://app.salesforceiq.com/r?target=66fe5c81e2ecdc687d01f95c&t=AFwhZf05Pvz-5Hjl94T4_MynTKTh_LweV8NmCn4VmpnGlANBQ0NDd-nw2MIhM3A1b3DF7NC0VP7f5-G59mtkg7fdCB_hbiLYNLBfzjj-wSQ9HsIzfz6ARoe7f1guOFmdeyzj8tc540ib&url=https%3A%2F%2Fcomponent.autochartist.com%2Fnews%2Fstock-news%3Fbroker_id%3D945%26account_type%3DLIVE%26user%3DGo-Wize%26expire%3D1777500000%26token%3D9b37d229cd8a37d91cb2b77d2a872f60%26locale%3Den%26css%3Dhttps%3A%252F%252Fbroker-resources.autochartist.com%252Fcss%252Fcomponents%252F945-news-feeds-app.css\"></iframe>\n      </div>\n    </>\n  );\n};\n\nexport default WebFeed;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebCalender/index.js",["2015","2016","2017","2018","2019","2020"],"\nimport React, { useEffect } from \"react\";\nimport \"./webtrader.scss\";\nconst WebCalendar = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    console.log(\"11111111111111\");\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n  const getWindowDimensions = () => {\n\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n      width,\n      height\n    };\n  };\n  const [height, setHeight] = React.useState(600);\n  useEffect(() => {\n    const { height } = getWindowDimensions();\n    setHeight(height - (height * 0.1));\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-iframe mt-4\">\n        <iframe className=\"responsive-iframe mt-5\" src=\"https://app.salesforceiq.com/r?target=66fe5c81e2ecdc687d01f95b&t=AFwhZf05Pvz-5Hjl94T4_MynTKTh_LweV8NmCn4VmpnGlANBQ0NDd-nw2MIhM3A1b3DF7NC0VP7f5-G59mtkg7fdCB_hbiLYNLBfzjj-wSQ9HsIzfz6ARoe7f1guOFmdeyzj8tc540ib&url=https%3A%2F%2Feia.autochartist.com%2Fcalendar%2F%3Fbroker_id%3D945%26showall%3Dtrue%26nextdays%3D3%26token%3D9b37d229cd8a37d91cb2b77d2a872f60%26expire%3D1777500000%26user%3DGo-Wize%26locale%3Den%23%2Fcalendar\"></iframe>\n      </div>\n\n    </>\n  );\n};\n\n\nexport default WebCalendar;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/TradingOppurtunities/index.js",["2021","2022"],"import React, { useEffect } from \"react\";\n\nimport \"./webtrader.scss\";\nexport const WebTradingOpportunities = (props) => {\n\n  return (\n    <>\n      <div className=\"container-iframe mt-5\">\n        <iframe className=\"responsive-iframe mt-5\" src=\"https://app.salesforceiq.com/r?target=66fe5c81e2ecdc687d01f95a&t=AFwhZf05Pvz-5Hjl94T4_MynTKTh_LweV8NmCn4VmpnGlANBQ0NDd-nw2MIhM3A1b3DF7NC0VP7f5-G59mtkg7fdCB_hbiLYNLBfzjj-wSQ9HsIzfz6ARoe7f1guOFmdeyzj8tc540ib&url=https%3A%2F%2Fcomponent.autochartist.com%2Fto%2F%3Fbroker_id%3D945%26token%3D9b37d229cd8a37d91cb2b77d2a872f60%26expire%3D1777500000%26user%3DGo-Wize%26locale%3Den_GB%26layout%3Dhorizontal%26account_type%3DLIVE%26trade_now%3Dy%23%2Fresults\"></iframe>\n      </div>\n    </>\n  );\n};","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/InternalTransfer/index.js",["2023","2024"],"import CardWrapper from \"components/Common/CardWrapper\";\nimport PageHeader from \"components/Forex/Common/PageHeader\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MetaTags } from \"react-meta-tags\";\nimport {\n  Button,\n  Col,\n  Container, FormGroup, Input, Label, Row, Spinner\n} from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport AvFieldSelecvt from \"../../../../components/Common/AvFieldSelect\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createIbWalletTransfer,\n  getAccountsStart,\n  getClientIbAccounts\n} from \"store/actions\";\nimport { getIbClients, getAllClientsIbAccounts } from \"store/forex/ib/clients/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport IbNotApproved from \"components/Common/IbNotApproved\";\nimport { CUSTOMER_SUB_PORTALS, PORTALS } from \"common/constants\";\nimport { getIbWallet } from \"apis/forex/ib\";\n\nfunction InternalTransfer() {\n  const { t } = useTranslation();\n  const [transferDestination, setTransferDestination] = useState(1);\n  const [ibAccounts, setIbAccounts] = useState([]); // client own accounts (from accounts) options\n  const [ownAccountsOptions, setOwnAccountsOptions] = useState([]);  // client accounts (to accounts owned by the client) options \n  const [ibClients, setIbClients] = useState([]);\n  const [toClientAccountOptions, setToClientAccountOptions] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [allClientsAccounts, setAllClientsAccounts] = useState([]);\n  const [fromAccountBalance, setFromAccountBalance] = useState();\n  const { clients } = useSelector(state => state.forex.ib.clients);\n  const { loading } = useSelector(state => state.forex.ib.transactions.ibInternalTransfer);\n  const { subPortal, portal } = useSelector(state => state.Layout);\n  const { accounts } = useSelector(state => state.forex.accounts);\n  const { clientAccounts } = useSelector(state => state.forex.ib.clients);\n  // ib accounts owned by the client (from account)\n  const { ibClientAccounts } = useSelector(state => state.forex.ib.clients);\n  // all accounts under the IB user\n  const { allIbClientsAccounts, allIbClientsLoading } = useSelector(state => state.forex.ib.clients);\n  const { transferLoading, clearingCounter } = useSelector(state => state.walletReducer);\n\n  const partnershipAgreement = useSelector((state) => (state.Profile.clientData.stages?.ib?.partnershipAgreement));\n  const [isIbPortal] = useState(subPortal === CUSTOMER_SUB_PORTALS.IB);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  if (subPortal !== CUSTOMER_SUB_PORTALS.IB || (portal && !portal.includes(PORTALS.FOREX)))\n    history.push(\"/\");\n\n  const handleSubmit = (e, v) => {\n    v.amount = parseInt(v.amount);\n    // const fromAccount = ibClientAccounts.filter((account) => {\n    //   return (\n    //     account.login == v.tradingAccountFrom\n    //   );\n    // });\n    // const fromAccountBalace = parseFloat(fromAccount[0]?.Equity);\n    // if (fromAccountBalace > v.amount) {\n    //   dispatch(ibInternalTransfer(v));\n    // }\n    dispatch(createIbWalletTransfer({\n      ...v,\n    }));\n  };\n\n  const fromAccountChangeHandler = (e) => {\n    const fromAccount = ibClientAccounts.filter((account) => {\n      return (\n        account.login == e\n      );\n    });\n    const result = parseFloat(fromAccount[0]?.Equity);\n    setFromAccountBalance(result);\n  };\n\n  const amountValidation = (value, ctx, input, cb) => {\n    if (parseFloat(value) > fromAccountBalance) cb(\"Not enought balance\");\n    else cb(true);\n  };\n\n  useEffect(() => {\n    if (ibClientAccounts?.length > 0) {\n      setIbAccounts(ibClientAccounts.map((account) => {\n        return (\n          {\n            label: account.login + \" - \" + account.Equity,\n            value: account.login\n          }\n        );\n      }));\n    }\n  }, [ibClientAccounts]);\n\n  useEffect(() => {\n    // ib accounts owned by the client (from account)\n    dispatch(getClientIbAccounts());\n\n    // ib accounts owned by the client (to account) \n    dispatch(getAccountsStart({\n      type: \"LIVE\"\n    }));\n    dispatch(getIbClients({\n      type: \"live\"\n    }));\n  }, [clearingCounter]);\n\n  useEffect(() => {\n    if (accounts?.length > 0) {\n      setOwnAccountsOptions(\n        accounts.map((account) => {\n          return (\n            {\n              label: account.login + \" - \" + account.Equity,\n              value: account._id,\n            }\n          );\n        })\n      );\n    }\n  }, [accounts]);\n\n  useEffect(() => {\n    if (clients?.length > 0) {\n      setIbClients(clients.map((client) => {\n        return (\n          client._id\n        );\n      }));\n    }\n  }, [clients]);\n\n  const getIbClientsFunction = () => {\n    if (ibClients?.length > 0) {\n      dispatch(getAllClientsIbAccounts({\n        type: \"LIVE\",\n        customersId: Object.values(ibClients)\n      }));\n    }\n    setAllClientsAccounts(clientAccounts);\n  };\n\n  useEffect(() => {\n    if (allIbClientsAccounts?.length > 0) {\n      let options = [];\n      allIbClientsAccounts.map((account) => {\n        account.docs.map((doc) => {\n          options.push({\n            label: doc.login + \" - \" + doc.Equity,\n            value: doc._id,\n          });\n        });\n      }\n      );\n      setToClientAccountOptions(options);\n    }\n  }, [allIbClientsAccounts]);\n\n  const [wallet, setWallet] = useState({\n    amount: 0,\n    frozenAmount: 0,\n  });\n  const [walletLoading, setWalletLoading] = useState(false);\n\n  useEffect(()=>{\n    setWalletLoading(true);\n    getIbWallet().then((res)=>{\n      if (res.isSuccess) {\n        setWallet({\n          ...res.result,\n        });\n      } else {\n        throw new Error(res.message);\n      }\n    }).catch((err)=>{\n      console.log(err);\n    }).finally(()=>{\n      setWalletLoading(false);\n    });\n  }, [clearingCounter]);\n\n  return (<>\n    <MetaTags>\n      <title>{t(\"Internal Transfer\")}</title>\n    </MetaTags>\n    <div className=\"page-content\">\n      <Container className=\"pt-5\">\n        {isIbPortal && !partnershipAgreement && <IbNotApproved />}\n        <PageHeader title=\"Internal Transfer\"></PageHeader>\n        <CardWrapper className=\"mt-4 shadow glass-card\">\n          <div className=\"d-flex justify-content-between heading pb-2\">\n            <h4 className=\"color-primary\">{t(\"Internal Transfer\")}</h4>\n            <div className=\"d-flex\">\n              <FormGroup\n                check\n                className=\"my-auto me-3\"\n              >\n                <Input\n                  name=\"toMyAccount\"\n                  id=\"toMyAccount\"\n                  type=\"radio\"\n                  checked={transferDestination === 1}\n                  onChange={() => { setTransferDestination(1) }}\n                />\n                <Label check for=\"toMyAccount\">\n                  {t(\"To My Account\")}\n                </Label>\n              </FormGroup>\n              <FormGroup check className=\"my-auto\">\n                <Input\n                  name=\"toClientAccount\"\n                  type=\"radio\"\n                  id=\"toClientAccount\"\n                  checked={transferDestination === 2}\n                  onChange={() => { setTransferDestination(2) }}\n                  onClick={() => { getIbClientsFunction() }}\n                />\n                <Label check for=\"toClientAccount\">\n                  {t(\"To Client Account\")}\n                </Label>\n              </FormGroup>\n            </div>\n          </div>\n          <AvForm\n            className=\"custom-form mt-4\"\n            onValidSubmit={handleSubmit}\n          >\n            <Row>\n              <Col xs={12} className=\"mb-3\">\n                {\n                  walletLoading ? <Spinner /> :\n                    <>\n                      <AvFieldSelecvt\n                        name=\"fromId\"\n                        label={t(\"From Account\")}\n                        className=\"form-control\"\n                        type=\"select\"\n                        required\n                        options={[\n                          {\n                            label: t(\"IB Wallet\") + \" - \" + wallet.amount,\n                            value: wallet?._id\n                          }\n                        ]}\n                        onChange={fromAccountChangeHandler}\n                        maxHeight={150}\n                      />\n                    </>\n                }\n              </Col>\n              {\n                transferLoading ? <Spinner /> :\n                  <>\n                    {transferDestination === 1 && <Col xs={6} className=\"mb-3\">\n                      <AvFieldSelecvt\n                        name=\"toId\"\n                        label={t(\"To Account\")}\n                        type=\"select\"\n                        errorMessage={t(\"Enter To Account\")}\n                        validate={{ required: { value: true } }}\n                        options={ownAccountsOptions}\n                        disabled={ownAccountsOptions?.length === 0}\n                        maxHeight={150}\n                      />\n                    </Col>}\n                    {transferDestination === 2 && <Col xs={6} className=\"mb-3\">\n                      <AvFieldSelecvt\n                        name=\"toId\"\n                        label={t(\"To Account\")}\n                        type=\"select\"\n                        errorMessage={t(\"Enter To Account\")}\n                        validate={{ required: { value: true } }}\n                        options={toClientAccountOptions}\n                        loading={allIbClientsLoading}\n                        maxHeight={150}\n                      />\n                    </Col>}\n                  </>\n              }\n              <Col xs={6} className=\"mb-3\">\n                <AvField\n                  name=\"amount\"\n                  label={t(\"Amount\")}\n                  placeholder={t(\"Enter Amount\")}\n                  type=\"number\"\n                  min=\"0\"\n                  errorMessage={t(\"Enter Amount\")}\n                  validate={\n                    {\n                      required: { value: true },\n                      custom: amountValidation\n                    }\n                  }\n                />\n              </Col>\n              <Col xs={12} className=\"mb-3\">\n                <AvField\n                  name=\"note\"\n                  label={t(\"Note\")}\n                  placeholder={t(\"Enter Note\")}\n                  type=\"text\"\n                  errorMessage={t(\"Enter Note\")}\n                />\n              </Col>\n            </Row>\n            <div className=\"text-center pt-3\">\n              <Button type=\"submit\" className=\"color-bg-btn border-0 w-lg\" disabled={loading || transferLoading}>\n                {(loading || transferLoading) ? <Spinner></Spinner> : t(\"Transfer\")}\n              </Button>\n            </div>\n          </AvForm>\n        </CardWrapper>\n      </Container>\n    </div>\n  </>);\n}\n\nexport default InternalTransfer;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Referrals/index.js",["2025"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { withTranslation } from \"react-i18next\";\nimport { Container } from \"react-bootstrap\";\nimport {\n  Table, Thead, Tbody, Tr, Th\n} from \"react-super-responsive-table\";\n\nimport { fetchAgreements, fetchReferrals } from \"store/actions\";\n\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport RecursiveTableRows from \"./RecursiveTableRows\";\nimport Select from \"react-select\";\nimport PageHeader2 from \"components/Forex/Common/pageHeader2\";\nimport IbNotApproved from \"components/Common/IbNotApproved\";\nimport Loader from \"components/Common/Loader\";\nimport { Button } from \"reactstrap\";\nimport CustomSelect from \"components/Common/CustomSelect\";\n\nconst Referral = ({ t }) => {\n  const dispatch = useDispatch();\n\n  const { agreements, loading } = useSelector((state) => state.forex.ib.agreements);\n  const referrals = useSelector((state) => state.forex.ib.agreements.referrals);\n  const { subPortal } = useSelector(state=>state.Layout);\n  const partnershipAgreement = useSelector((state) => (state.Profile.clientData.stages?.ib?.partnershipAgreement));\n  \n  const [isIbPortal, ] = useState(subPortal === \"IB\");\n  const [selectedAgreement, setSelectedAgreement] = useState(undefined);\n\n  useEffect(() => {\n    dispatch(fetchReferrals({\n      type: \"live\",\n    }));\n    dispatch(fetchAgreements());\n  }, []);\n\n  return (\n    <div className=\"page-content\">\n      <MetaTags>\n        <title>{t(\"Referrals\")}</title>\n      </MetaTags>\n      <Container className=\"mt-5\">\n        { isIbPortal && !partnershipAgreement && <IbNotApproved /> }\n        <PageHeader2 title=\"Referrals\" />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-4\">\n              <label>{t(\"Select Agreement\")}</label>\n              <CustomSelect\n                className=\"w-full\"\n                name=\"agreement\"\n                onChange={(e) => { setSelectedAgreement(e.value) }}\n                value={selectedAgreement ? selectedAgreement?.value : \"\"}\n                options={agreements?.map((agreement) => {\n                  return ({\n                    label: agreement.title,\n                    value: agreement._id,\n                  });\n                })}\n              />\n            </div>\n            <div className=\"row col-md-auto align-content-end\" >\n              <Button className=\"color-bg-btn border-0\" onClick={()=>{setSelectedAgreement(undefined)}}>\n                {t(\"Clear\")}\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <CardWrapper className=\"p-3 mt-4 glass-card shadow\">\n          {loading ? <Loader /> : referrals.length > 0 &&\n            <Table className=\"table table-hover text-center\">\n              <Thead>\n                <Tr >\n                  <Th className=\"py-2\">{t(\"Name\")}</Th>\n                  <Th className=\"py-2\">{t(\"Client Type\")}</Th>\n                  <Th className=\"py-2\">{t(\"Accounts\")}</Th>\n                  <Th className=\"py-2\">{t(\"Parent Name\")}</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                <RecursiveTableRows data={referrals[0]} filter={selectedAgreement} />\n              </Tbody>\n            </Table>}\n        </CardWrapper>\n      </Container >\n    </div>\n  );\n};\n\nexport default withTranslation()(Referral);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/RequestPartnership/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/ChangePassword/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/wallets/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/content.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/ChartContainer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/assetImgSrc.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/TradeHistory.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/OrderHistory.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/NewOrder.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CardWrapper.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/OrderBooks.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/Fiat/FiatWithdraw.js",["2026","2027","2028"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Label,\n  Row,\n} from \"reactstrap\";\nimport { withTranslation } from \"react-i18next\";\n\nimport {\n  fetchBankAccounts,\n  fetchWallets,\n  toggleCurrentModal,\n} from \"../../../store/actions\";\nimport { addWithdraw } from \"../../../apis/withdraw\";\nimport { getAssetImgSrc } from \"helpers/assetImgSrc\";\nimport calculateFee from \"../../../helpers/calculateTranFee\";\n\nimport CardWrapper from \"../../Common/CardWrapper\";\nimport CustomModal from \"../../Common/CustomModal\";\nimport AddBankAccountModal from \"../../BankAccounts/AddBankAccountModal\";\nimport CustomSelect from \"components/Common/CustomSelect\";\nimport Loader from \"components/Common/Loader\";\nimport { withdrawalConfig } from \"../MT5/withdrawalConfig\";\nimport AvFieldSelecvt from \"components/Common/AvFieldSelect\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport { validateFile } from \"helpers/validations/file\";\n\nfunction FiatWithdraw({ isOpen, toggleOpen, ...props }) {\n  const [activeStep, setActiveStep] = useState(0);\n  const [amountValidation, setAmountValidation] = useState(false);\n  const [perfectMoneyAccount, setPerfectMoneyAccount] = useState(\"\");\n  const wallets = useSelector((state) => state.crypto.wallets?.wallets);\n  const bankAccounts = useSelector(\n    (state) => state.crypto.bankAccounts?.bankAccounts?.docs\n  );\n  const tranFeeGroupDetails = useSelector((state) => state.Profile?.clientData?.transactionFeeId);\n  \n  const amountValidationHandler = (e) => {\n    e.target.value < 10 ? setAmountValidation(true) : setAmountValidation(false);\n  };\n\n  const fiatWallets = wallets.filter((wallet) => (\n    wallet.isCrypto === false\n  ))\n    .map((item) => (\n      {\n        label: item.asset,\n        value: item._id,\n        image: getAssetImgSrc(item.assetId)\n      }\n    ));\n  const [selectedWallet, setSelectedWallet] = useState(fiatWallets[0]);\n  const [bankAccountId, setBankAccounttId] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [gateway, setGateway] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [bankAccountDetile, setBankAccountDetile] = useState({});\n  // eslint-disable-next-line no-unused-vars\n  const [wireTransferFlag, setWireTransferFlag] = useState(false);\n  const [transactionFee, setTransactionFee] = useState(\"\");\n\n  const [addBankModal, setAddBankModal] = useState(false);\n  const [selectBankError, setSelectBankError] = useState(false);\n  const [selectGatwayError, setSelectGatwayError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState();\n  const [selectedWalletError, setSelectWalletError] = useState(false);\n  const [hoveredPaymentMethod, setHoveredPaymentMethod] = useState();\n  const [loading, setLoading] = useState(false);\n  const [methodConfig, setMethodConfig] = useState({});\n  const [isFirstStepValid, setIsFirstStepValid] = useState(false);\n  const [name, setName] = useState(false);\n  const [phone, setPhone] = useState(false);\n  const [address, setAddress] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveStep(0);\n      // setSelectedWallet(\"\");\n      setGateway(\"\");\n      setAmount(\"\");\n      setBankAccounttId(\"\");\n      setBankAccountDetile({});\n      setLoading(false);\n    }\n    dispatch(\n      fetchBankAccounts({\n        limit: 100,\n        page: 1,\n      })\n    );\n    return () => {\n      setSelectBankError(false);\n      setSelectGatwayError(false);\n      setAmountError(false);\n      setSelectWalletError(false);\n    };\n  }, [isOpen]);\n  useEffect(() => {\n    if (bankAccountId != \"\") {\n      const detile = bankAccounts.find(o => o._id === bankAccountId);\n      if (detile) {\n        setBankAccountDetile(detile);\n        \n      }\n    }\n  }, [bankAccountId]);\n\n  useEffect(() => {\n    if (gateway === \"WIRE_TRANSFER\" && bankAccountDetile) {\n      setMethodConfig({\n        ...methodConfig,\n        bankAccount: {\n          name: bankAccountDetile?.accountHolderName,\n          bankName: bankAccountDetile?.bankName,\n          accountNumber: bankAccountDetile?.accountNumber,\n          address: bankAccountDetile?.address,\n          swiftCode: bankAccountDetile?.swiftCode,\n          currency: bankAccountDetile?.currency,\n        },\n      });\n    }\n  }, [bankAccountDetile]);\n  const dispatch = useDispatch();\n  function toggleTab(tab) {\n    if (activeStep !== tab) {\n      setActiveStep(tab);\n    }\n  }\n  useEffect(() => {\n    setTransactionFee(tranFeeGroupDetails ? calculateFee(tranFeeGroupDetails, amount) : 0);\n  }, [tranFeeGroupDetails, amount]);\n  const handleSubmit = () => {\n    setLoading(true);\n    // const formData = new FormData();\n    // formData.append(\"gateway\", gateway);\n    // formData.append(\"amount\", amount);\n    // formData.append(\"walletId\", selectedWallet?.value);\n    // formData.append(\"note\", \"note\");\n    // formData.append(\"payload\", `${JSON.stringify(methodConfig)}`);\n    // if (methodConfig?.file){\n    //   formData.append(\"receipt\", methodConfig?.file);\n    // }\n    !selectedWalletError &&\n      addWithdraw({\n        gateway,\n        amount,\n        walletId: selectedWallet?.value,\n        note: \"NOTE\",\n        payload: `${JSON.stringify(methodConfig)}`,\n        name,\n        address,\n        phone\n      })\n        .then((e) => {\n          // console.log(e);\n          setLoading(false);\n          setResult(e);\n          toggleTab(2);\n        })\n        .catch((e) => {\n          // console.log(e);\n          setLoading(false);\n          setResult(e);\n          toggleTab(2);\n        });\n    // toggleOpen()\n  };\n  const validateStep1 = () => {\n    if (gateway == \"WIRE_TRANSFER\") {\n      if (bankAccountId == \"\") {\n        setSelectBankError(true);\n        setTimeout(() => {\n          setSelectBankError(false);\n        }, 2000);\n      }\n    }\n\n    if (selectedWallet === \"\") {\n      setSelectWalletError(true);\n      setTimeout(() => {\n        setSelectWalletError(false);\n      }, 2000);\n    }\n    if (gateway == \"\") {\n      setSelectGatwayError(true);\n      setTimeout(() => {\n        setSelectGatwayError(false);\n      }, 2000);\n    }\n    if (selectedWallet?.value != \"\" && gateway != \"\") {\n      if (gateway == \"WIRE_TRANSFER\") {\n        if (bankAccountId != \"\") {\n          toggleTab(1);\n        }\n      }\n      else {\n        toggleTab(1);\n      }\n    }\n\n  };\n  const validateStep2 = () => {\n    if (amount == \"\") {\n      setAmountError(true);\n      setTimeout(() => {\n        setAmountError(false);\n      }, 2000);\n    } else {\n      handleSubmit();\n    }\n  };\n  useEffect(() => {\n    dispatch(fetchWallets({\n      isCrypto: false,\n    }));\n  }, []);\n\n  const isFirstSubmitValid = () => {\n    if (gateway === \"\") {\n      return setIsFirstStepValid(false);\n    } else if (gateway === \"WIRE_TRANSFER\") {\n      if (bankAccountId === \"\") {\n        return setIsFirstStepValid(false);\n      } else {\n        return setIsFirstStepValid(true);\n      }\n    } else if (gateway === \"PERFECT_MONEY\") {\n      if (!perfectMoneyAccount) {\n        return setIsFirstStepValid(false);\n      } else {\n        return setIsFirstStepValid(true);\n      }\n    } \n    else if (gateway === \"CRYPTO\") {\n      if (methodConfig?.network && methodConfig?.coin && methodConfig?.address !== \"\") {\n        return setIsFirstStepValid(true);\n      } else {\n        return setIsFirstStepValid(false);\n      }\n    } else if (gateway === \"صناديق-الاعتماد\") {\n      if (methodConfig.type === \"حواله\") {\n        if (methodConfig.file && (methodConfig.locationOfHawala !== \"\" && methodConfig.locationOfHawala !== null && methodConfig.locationOfHawala !== undefined)) {\n          return setIsFirstStepValid(true);\n        } else {\n          return setIsFirstStepValid(false);\n        }\n      }\n      if (methodConfig.type === \"اعتماد\") {\n        if (methodConfig.nameOfBox !== \"\" && methodConfig.numberOfBox !== \"\" && methodConfig.nameOfBox !== undefined && methodConfig.numberOfBox !== undefined) {\n          return setIsFirstStepValid(true);\n        } else {\n          return setIsFirstStepValid(false);\n        }\n      }\n    } else if (gateway === \"حواله بنكيه\"){\n      return setIsFirstStepValid(true);\n    }\n    return setIsFirstStepValid(false);\n  };\n\n  useEffect(() => {\n    isFirstSubmitValid();\n  }, [gateway, bankAccountId, bankAccounts, methodConfig, perfectMoneyAccount]);\n\n  const steps = [\n    {\n      header: \"Select Method\",\n      content: (\n        <>\n          <AvForm>\n            <div className=\"mb-3\">\n              <h6 className=\"mb-3\">\n                {props.t(\"Select Payment Method\")}\n                {selectGatwayError && (\n                  <p className=\"small text-danger \">\n                    {props.t(\"Please Select Payment Method\")}\n                  </p>\n                )}\n              </h6>\n              <Row className=\"payment-methods justify-content-center\">\n                {\n                  withdrawalConfig.filter(\n                    method => method.allowed.mt5\n                  ).map((method, index) => (\n                    <Col xs={4} lg={2} className=\"my-2\" key={index}>\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          setGateway(method.gateway);\n                          setSelectedPaymentMethod(method.gateway);\n                          setMethodConfig(method);\n                        }}\n                        onMouseEnter={() => {setHoveredPaymentMethod(method.gateway)}}\n                        onMouseLeave={() => {setHoveredPaymentMethod()}}\n                        className={`btn btn-${selectedPaymentMethod === method.gateway ? \"success\" : hoveredPaymentMethod === method.gateway ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4 d-flex align-items-center justify-content-center`}\n                        style={{\n                          maxWidth: \"80px\",\n                          maxHeight: \"80px\",\n                        }}\n                      >\n                        <img\n                          src={method.image}\n                          // width=\"100%\"\n                          // height=\"100%\"\n                          alt=\"\"\n                        ></img>\n                      </button>\n                    </Col>\n                  ))\n                }\n                {/* <Col xs={4} lg={2} className=\"my-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setGateway(\"VISA\");\n                    setWireTransferFlag(false);\n                    setSelectedPaymentMethod(\"VISA\");\n                  }}\n                  onMouseEnter={() => { setHoveredPaymentMethod(\"VISA\") }}\n                  onMouseLeave={() => { setHoveredPaymentMethod() }}\n                  className={`btn btn-${selectedPaymentMethod === \"VISA\" ? \"success\" : hoveredPaymentMethod === \"VISA\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                >\n                  <img\n                    src=\"img/payment-method/visa.png\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    alt=\"\"\n                  ></img>\n                </button>\n              </Col>\n              <Col xs={4} lg={2} className=\"my-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setGateway(\"MASTERCARD\");\n                    setWireTransferFlag(false);\n                    setSelectedPaymentMethod(\"MASTERCARD\");\n                  }}\n                  onMouseEnter={() => { setHoveredPaymentMethod(\"MASTERCARD\") }}\n                  onMouseLeave={() => { setHoveredPaymentMethod() }}\n                  className={`btn btn-${selectedPaymentMethod === \"MASTERCARD\" ? \"success\" : hoveredPaymentMethod === \"MASTERCARD\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                >\n                  <img\n                    src=\"img/payment-method/mastercard-1.png\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    alt=\"\"\n                  ></img>\n                </button>\n              </Col>\n              <Col xs={4} lg={2} className=\"my-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setGateway(\"NETELLER\");\n                    setWireTransferFlag(false);\n                    setSelectedPaymentMethod(\"NETELLER\");\n                  }}\n                  onMouseEnter={() => { setHoveredPaymentMethod(\"NETELLER\") }}\n                  onMouseLeave={() => { setHoveredPaymentMethod() }}\n                  className={`btn btn-${selectedPaymentMethod === \"NETELLER\" ? \"success\" : hoveredPaymentMethod === \"NETELLER\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                >\n                  <img\n                    src=\"img/payment-method/neteller.png\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    alt=\"\"\n                  ></img>\n                </button>\n              </Col>\n              <Col xs={4} lg={2} className=\"my-2\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setGateway(\"SKRILL\");\n                    setWireTransferFlag(false);\n                    setSelectedPaymentMethod(\"SKRILL\");\n                  }}\n                  onMouseEnter={() => { setHoveredPaymentMethod(\"SKRILL\") }}\n                  onMouseLeave={() => { setHoveredPaymentMethod() }}\n                  className={`btn btn-${selectedPaymentMethod === \"SKRILL\" ? \"success\" : hoveredPaymentMethod === \"SKRILL\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                >\n                  <img\n                    src=\"img/payment-method/skrill.png\"\n                    width=\"100%\"\n                    height=\"100%\"\n                    alt=\"\"\n                  ></img>\n                </button>\n              </Col> */}\n              </Row>\n            </div>\n            {gateway == \"WIRE_TRANSFER\" && (\n              <div className=\"mb-3\">\n                <Label>{props.t(\"Select Bank Account\")}</Label>\n                <InputGroup>\n                  <select\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      setBankAccounttId(e.target.value);\n                    }}\n                  >\n                    <option value=\"\">select</option>\n                    {bankAccounts?.map((bankAccount) => {\n                      return (\n                        <option key={bankAccount._id} value={bankAccount._id}>\n                          {bankAccount.bankName}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  <InputGroupText className=\"custom-input-group-text\">\n                    <Link\n                      to=\"#\"\n                      onClick={() => {\n                        // console.log(\"Add New\");\n                        setAddBankModal(true);\n                      }}\n                    >\n                      {props.t(\"Add New\")}\n                    </Link>\n                  </InputGroupText>\n                </InputGroup>\n                {selectBankError && (\n                  <p className=\"small text-danger \">\n                    {props.t(\"Please Select Bank Account\")}\n                  </p>\n                )}\n              </div>\n            )}\n            {gateway == \"PERFECT_MONEY\" && (\n                <div className=\"mb-3\">\n                  <Label className=\"mb-3\">{props.t(\"Enter Your Perfect Money Account\")}</Label>\n                  <AvField\n                    name=\"perfectMoney\"\n                    className=\"form-control\"\n                    placeholder={`${props.t(\"Perfect Money Account\")}`}\n                    required\n                    validate={{\n                      maxLength:{value: 20}\n                    }}\n                    value={perfectMoneyAccount}\n                    onChange={(e) => setPerfectMoneyAccount(e.target.value)}\n                  />\n                  \n                </div>\n              )}\n            {\n              gateway === \"CRYPTO\" && (\n                <>\n                  <div className=\"mb-3\">\n                    <Label>{props.t(\"Select Network\")}</Label>\n                    <AvFieldSelecvt\n                      name=\"cryptoNetwork\"\n                      className=\"form-select\"\n                      onChange={(e) => {\n                        setMethodConfig({\n                          ...methodConfig,\n                          network: e,\n                        });\n                        // setCryptoCurrency(e);\n                      }}\n                      options={methodConfig?.config.methods.map((method) => {\n                        return {\n                          label: method.network,\n                          value: method,\n                        };\n                      })}\n                    />\n                  </div>\n                  {\n                    methodConfig?.network && (\n                      <>\n                        <div className=\"mb-3\">\n                          <Label>{props.t(\"Select Coin\")}</Label>\n                          <AvFieldSelecvt\n                            name=\"cryptoCoin\"\n                            className=\"form-select\"\n                            onChange={(e) => {\n                              setMethodConfig({\n                                ...methodConfig,\n                                coin: e,\n                                address: \"\",\n                              });\n                              // setCryptoCurrency(e);\n                            }}\n                            options={methodConfig?.network?.coins?.map((method) => {\n                              return {\n                                label: method,\n                                value: method,\n                              };\n                            })}\n                          />\n                        </div>\n                      </>\n                    )\n                  }\n                  {\n                    methodConfig?.coin && (\n                      <>\n                        <div className=\"mb-3\">\n                          <Label>{props.t(\"Select Address\")}</Label>\n                          <AvField\n                            name=\"cryptoAddress\"\n                            className=\"form-control\"\n                            placeholder=\"Enter Address\"\n                            value={methodConfig?.address}\n                            onChange={(e) => {\n                              setMethodConfig({\n                                ...methodConfig,\n                                address: e.target.value,\n                              });\n                            }}\n                          />\n                        </div>\n                      </>\n                    )\n                  }\n                </>\n              )\n            }\n            {\n              // gateway === \"صناديق-الاعتماد\" && (\n              //   <>\n              //     <div className=\"mb-3\">\n              //       <Label>{props.t(\"Type\")}</Label>\n              //       <AvFieldSelecvt\n              //         name=\"sandoqType\"\n              //         className=\"form-select\"\n              //         placeholder=\"Select Type\"\n              //         onChange={(e) => {\n              //           setMethodConfig({\n              //             ...methodConfig,\n              //             type: e,\n              //           });\n              //         }}\n              //         options={methodConfig?.config?.methods?.map((option) => {\n              //           return {\n              //             label: option?.title,\n              //             value: option?.title,\n              //           };\n              //         })}\n              //       />\n              //     </div>\n              //     {\n              //       methodConfig?.type && (\n              //         <>\n              //           {methodConfig.type === \"حواله\" && (\n              //             <>\n              //               <div className=\"mb-3\">\n              //                 <Label className=\"form-label\" htmlFor=\"receipt\">\n              //                   {props.t(\"Receipt\")}\n              //                 </Label>\n              //                 <AvField\n              //                   type=\"file\"\n              //                   name=\"receipt\"\n              //                   className=\"form-control form-control-md\"\n              //                   errorMessage={props.t(\"Receipt is required\")}\n              //                   onChange={(e) => {\n              //                     setMethodConfig({\n              //                       ...methodConfig,\n              //                       file: e.target.files[0],\n              //                     });\n              //                   }}\n              //                   validate={{\n              //                     required: { value: true },\n              //                     validate: validateFile([\"jpg\", \"jpeg\", \"png\"], 1000000, (methodConfig?.file || {}), {\n              //                       sizeValidationMessage: props.t(\"The file size is too large\"),\n              //                       extensionValidationMessage: props.t(\"The file extension is not allowed\"),\n              //                     })\n              //                   }}\n              //                 />\n              //               </div>\n              //               <div className=\"mb-3\">\n              //                 <Label>{props.t(\"وجه الحواله\")}</Label>\n              //                 <AvField\n              //                   name=\"locationOfHawala\"\n              //                   type=\"text\"\n              //                   placeholder=\"وجه الحواله\"\n              //                   onChange={(e) => {\n              //                     setMethodConfig({\n              //                       ...methodConfig,\n              //                       locationOfHawala: e.target.value,\n              //                     });\n              //                   }}\n              //                 />\n              //               </div>\n              //             </>\n              //           )} \n              //           {methodConfig.type === \"اعتماد\" && (\n              //             <>\n              //               <div className=\"mb-3\">\n              //                 <Label>{props.t(\"اسم الصندوق\")}</Label>\n              //                 <AvField\n              //                   name=\"nameOfBox\"\n              //                   type=\"text\"\n              //                   placeholder=\"اسم الصندوق\"\n              //                   onChange={(e) => {\n              //                     setMethodConfig({\n              //                       ...methodConfig,\n              //                       nameOfBox: e.target.value,\n              //                     });\n              //                   }}\n              //                 />\n              //               </div>\n              //               <div className=\"mb-3\">\n              //                 <Label>{props.t(\"رقم الصندوق\")}</Label>\n              //                 <AvField\n              //                   name=\"numberOfBox\"\n              //                   type=\"text\"\n              //                   placeholder=\"رقم الصندوق\"\n              //                   onChange={(e) => {\n              //                     setMethodConfig({\n              //                       ...methodConfig,\n              //                       numberOfBox: e.target.value,\n              //                     });\n              //                   }}\n              //                 />\n              //               </div>\n              //             </>\n              //           )} \n              //         </>\n              //       )\n              //     }\n              //   </>\n              // )\n            }\n            {(gateway === \"WIRE_TRANSFER\" && bankAccountDetile && Object.keys(bankAccountDetile).length  !== 0) && (\n              <>\n                <h5 className=\"mb-4\">{props.t(\"Payment details\")}</h5>\n                <Label className=\"mb-2\">{props.t(\"Bank Account\")}</Label>\n                <div className=\"mb-3\">\n                  <InputGroup>\n                    <InputGroupText className=\"w-100\">{bankAccountDetile?.accountHolderName}</InputGroupText>\n                  </InputGroup>\n                </div>\n                <div className=\"mb-3\">\n                  <InputGroup>\n                    <InputGroupText className=\"w-100\">{bankAccountDetile?.bankName}</InputGroupText>\n                  </InputGroup>\n                </div>\n                <div className=\"mb-3\">\n                  <InputGroup>\n                    <InputGroupText className=\"w-100\">\n                      {bankAccountDetile?.accountNumber}\n                    </InputGroupText>\n                  </InputGroup>\n                </div>\n                <div className=\"mb-3\">\n                  <InputGroup>\n                    <InputGroupText className=\"w-100\">\n                      {bankAccountDetile?.address}\n                    </InputGroupText>\n                  </InputGroup>\n                </div>\n                <div className=\"mb-3\">\n                  <InputGroup>\n                    <InputGroupText className=\"w-100\">{bankAccountDetile?.swiftCode}</InputGroupText>\n                  </InputGroup>\n                </div>\n                <div className=\"mb-3\">\n                  <InputGroup>\n                    <InputGroupText className=\"w-100\">\n                      {bankAccountDetile?.currency}\n                    </InputGroupText>\n                  </InputGroup>\n                </div>\n                <p className=\"mb-2\">{props.t(\"Bank Account\")}</p>\n                {/* <p className=\"text-muted\">\n                  {props.t(\"You MUST include the Reference Code in your deposit in order to credit your account!\")}\n                </p> */}\n              </>\n            )}\n            <div className=\"text-center mt-4\">\n              <Button\n                className=\"btn btn-primary m-2 btn-sm w-lg\"\n                onClick={() => { dispatch(toggleCurrentModal(\"selectWithdrawalMethodModal\")) }}\n              >\n                {props.t(\"Back\")}\n              </Button>\n              <Button\n                className=\"btn btn-danger waves-effect waves-light w-lg btn-sm\"\n                onClick={() => validateStep1()}\n                disabled={!isFirstStepValid}\n              >\n                {props.t(\"Continue\")}\n              </Button>\n            </div>\n          </AvForm>\n        </>\n      ),\n    },\n    {\n      header: \"Enter Amount\",\n      content: (\n        <>\n          {\n            fiatWallets\n              ?\n              <>\n              <AvForm\n                onValidSubmit={(e, v) => {\n                  validateStep2(e, v);\n                }}\n              >\n                <div className=\"mb-3\">\n                  <Label className=\"form-label mb-2\">{props.t(\"Transaction Fee\")}</Label>\n                  <InputGroup className=\"\">\n                    <InputGroupText className=\" w-100\">\n                      {transactionFee}{\"   \"}{selectedWallet?.label}\n                    </InputGroupText>\n                  </InputGroup>\n                </div>\n                <div className=\"mb-3\">\n                  <Label className=\"form-label mb-2\">{props.t(\"Total Amount\")}</Label>\n                  <InputGroup>\n                    <Input\n                      required\n                      onChange={(e) => {\n                        setAmount(e.target.value);\n                        amountValidationHandler(e);\n                      }}\n                      className=\"form-control\"\n                      type=\"number\"\n                      min=\"0\"\n                      value={amount}\n                      placeholder={props.t(\"Enter total amount\")}\n                    />\n                    <InputGroupText className=\"custom-input-group-text p-0 border-0\">\n                      <div style={{\n                        width: \"127px\",\n                        height: \"100%\"\n                      }}\n                      >\n                        <CustomSelect\n                          name=\"wallets\"\n                          options={fiatWallets}\n                          defaultValue={selectedWallet}\n                          onChange={(e) => {\n                            setSelectedWallet(e);\n                          }}\n                        >\n                        </CustomSelect>\n                      </div>\n                    </InputGroupText>\n                  </InputGroup>\n                  {amountError && (\n                    <p className=\"small text-danger \"> {props.t(\"Please Enter Amount\")}</p>\n                  )}\n                  {\n                    amountValidation &&\n                    <p className=\"small text-danger \"> {props.t(\"Minimum balance amount is\" + 10)}</p>\n                  }\n                   {gateway === \"حواله بنكيه\" && \n                    <>\n                      <div className=\"mt-2\">\n                      <Label>{props.t(\"Name\")}</Label>\n                      <AvField\n                        type=\"text\"\n                        name=\"name\"\n                        validate={{ required: true }}\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                      >\n                      </AvField>\n                      </div>\n                      <div className=\"mt-2\">\n                      <Label>{props.t(\"Phone\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"phone\"\n                          validate={{ required: true }}\n                          value={phone}\n                          onChange={(e) => setPhone(e.target.value)}\n                        >\n                        </AvField>\n                      </div>\n                      <div className=\"mt-2\">\n                      <Label>{props.t(\"Address to send the transfer to the customer\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"address\"\n                          validate={{ required: true }}\n                          value={address}\n                          onChange={(e) => setAddress(e.target.value)}\n                        >\n                        </AvField>\n                      </div>\n                    </>}\n                </div>\n                <div className=\"text-center\">\n                  <Button\n                    className=\"btn btn-primary m-2 btn-sm w-lg\"\n                    onClick={() => toggleTab(0)}\n                  >\n                    {props.t(\"Back\")}\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    className=\"btn btn-danger m-2 btn-sm w-lg\"\n                    disabled={loading || amountValidation}\n                  >\n                    {props.t(\"Continue\")}\n                  </Button>\n                </div>\n                </AvForm>\n              </>\n              :\n              <Loader />\n          }\n        </>\n      ),\n    },\n    {\n      header: \"Withdraw status\",\n      content: (\n        <>\n          <>\n            {result.status ? (\n              <>\n                <div className=\"text-center  mb-4\">\n                  <h1 className=\"fs-1 mb-5\">\n                    {props.t(\"Yay!\")} <i className=\"bx bx-wink-smile\"></i>\n                  </h1>\n                  <p>{props.t(\"Your successfully a withdrawal\")}</p>\n                  <p>\n                    <span className=\"positive\">{result?.result?.amount?.$numberDecimal} {result?.result?.currency}</span>\n                  </p>\n                </div>\n                <CardWrapper className=\"mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-between px-5\">\n                    <div>\n                      <div className=\"text-muted\">{props.t(\"Status\")}</div>\n                      <div className=\"positive\">{props.t(\"Completed\")}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-muted\">{props.t(\"Transaction ID\")}</div>\n                      <div>{result?.result?._id}</div>\n                    </div>\n                  </div>\n                </CardWrapper>\n              </>\n            ) : (\n              <>\n                <div className=\"text-center  mb-4\">\n                  <h1 className=\"fs-1 mb-5\">\n                    {props.t(\"Oops!\")} <i className=\"bx sad\"></i>\n                  </h1>\n                  <p>{props.t(\"Your Withdrawal Request Not Successfully Created\")}</p>\n                </div>\n                <CardWrapper className=\"mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-between px-5\">\n                    <div>\n                      <div className=\"positive\">{result.message}</div>\n                    </div>\n                  </div>\n                </CardWrapper>\n              </>\n            )}\n          </>\n          <div className=\"text-center\">\n            <Button\n              className=\"btn btn-danger m-2 btn-sm w-lg\"\n              onClick={toggleOpen}\n            >\n              {props.t(\"Continue\")}\n            </Button>\n          </div>\n          {/* <div className=\"text-center\">\n                <Button className=\"btn btn-danger m-2 btn-sm w-lg\" onClick={handleSubmit}>View Wallet</Button>\n            </div> */}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <CustomModal\n        steps={steps}\n        isOpen={isOpen}\n        toggleOpen={toggleOpen}\n        activeStep={activeStep}\n        toggleTab={toggleTab}\n      ></CustomModal>\n      <AddBankAccountModal\n        isOpen={addBankModal}\n        toggleOpen={() => {\n          setAddBankModal(false);\n        }}\n      ></AddBankAccountModal>\n    </>\n  );\n}\nexport default withTranslation()(FiatWithdraw); ","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/index.jsx",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/Crypto/CryptoWithdraw.js",["2029","2030"],"import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Label,\n  Row,\n} from \"reactstrap\";\n//i18n\nimport { withTranslation } from \"react-i18next\";\n\nimport { addWithdrawCrypto } from \"../../../apis/withdraw\";\nimport { toggleCurrentModal } from \"../../../store/actions\";\nimport calculateFee from \"../../../helpers/calculateTranFee\";\n\nimport CardWrapper from \"../../Common/CardWrapper\";\nimport CustomModal from \"../../Common/CustomModal\";\nimport WalletsListSelect from \"components/Common/WalletsListSelect\";\nimport NetworksListSelect from \"components/Common/NetworksListSelect\";\n\nfunction CryptoWithdraw({ isOpen, toggleOpen, ...props }) {\n  const dispatch = useDispatch();\n  const [activeStep, setActiveStep] = useState(0);\n  const wallets = useSelector((state) => state.crypto.wallets?.wallets);\n  const tranFeeGroupDetails = useSelector(\n    (state) => state.Profile.clientData?.transactionFeeId\n  );\n\n  const [asset, setAsset] = useState(\"\");\n  const [assetId, setAssetId] = useState(\"\");\n\n  const [transactionFee, setTransactionFee] = useState(\"\");\n\n  const [selectedWallet, setSelectedWallet] = useState(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [networkAddress, setNetworkAddress] = useState(null);\n  const [networkName, setNetworkName] = useState(null);\n  const [network, setNetwork] = useState(null);\n  const [address, setAddress] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [amountValidation, setAmountValidation] = useState(false);\n  const [selectCurrancyError, setSelectCurrancyError] = useState(false);\n  const [addressError, setAddressError] = useState(false);\n  const [networkError, setNetworkError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  useEffect(() => {\n    if (isOpen) {\n      setActiveStep(0);\n      setSelectedWallet(null);\n      setAmount(\"\");\n      setAddress(\"\");\n    }\n  }, [isOpen]);\n\n  function toggleTab(tab) {\n    if (activeStep !== tab) {\n      setActiveStep(tab);\n    }\n  }\n\n  useEffect(() => {\n    setTransactionFee(\n      tranFeeGroupDetails ? calculateFee(tranFeeGroupDetails, amount) : 0\n    );\n  }, [tranFeeGroupDetails, amount]);\n\n  const amountValidationHandler = (e) => {\n    e.target.value < 15\n      ? setAmountValidation(true)\n      : setAmountValidation(false);\n  };\n\n  const handleSubmit = () => {\n    // event.preventDefault();\n    console.log({\n      to: address,\n      walletId: selectedWallet?._id,\n      amount: amount,\n      note: \"note\",\n      assetId: assetId._id,\n      addressId: network._id,\n      chainId: network.chainId._id,\n      networkName: network.chainId.name,\n      cryptoapiName: network.chainId.cryptoapiName,\n      from: network.address,\n    });\n\n    addWithdrawCrypto({\n      to: address,\n      walletId: selectedWallet?._id,\n      amount: amount,\n      note: \"note\",\n      assetId: assetId._id,\n      addressId: network._id,\n      chainId: network.chainId._id,\n      networkName: network.chainId.name,\n      cryptoapiName: network.chainId.cryptoapiName,\n      from: network.address,\n    })\n      .then((e) => {\n        // console.log(e);\n        setResult(e);\n        toggleTab(2);\n      })\n      .catch((e) => {\n        // console.log(e);\n        setResult(e);\n        toggleTab(2);\n      });\n    // toggleOpen()\n  };\n  const validateStep1 = () => {\n    if (!selectedWallet) {\n      setSelectCurrancyError(true);\n      setTimeout(() => {\n        setSelectCurrancyError(false);\n      }, 2000);\n    }\n    if (address == \"\") {\n      setAddressError(true);\n      setTimeout(() => {\n        setAddressError(false);\n      }, 2000);\n    }\n    if (!networkName) {\n      setNetworkError(true);\n      setTimeout(() => {\n        setNetworkError(false);\n      }, 2000);\n    }\n    if (selectedWallet && address != \"\") {\n      toggleTab(1);\n    }\n  };\n  const validateStep2 = () => {\n    if (amount == \"\") {\n      setAmountError(true);\n      setTimeout(() => {\n        setAmountError(false);\n      }, 2000);\n    } else {\n      handleSubmit();\n    }\n  };\n\n  const steps = [\n    {\n      header: \"Select Method\",\n      content: (\n        <>\n          <div className=\"mb-3\">\n            <InputGroup>\n              <InputGroupText className=\"custom-input-group-text\">\n                {props.t(\"Available Balance\")}\n              </InputGroupText>\n              <Input\n                value={selectedWallet?.amount}\n                className=\"form-control border-start-0 text-end\"\n                type=\"text\"\n                disabled\n              />\n            </InputGroup>\n          </div>\n          <Row className=\"mb-3\">\n            <Col>\n              <Label className=\"mb-2\">{props.t(\"Select wallet\")}</Label>\n              <WalletsListSelect\n                className=\"h-50\"\n                onChange={(e) => {\n                  setSelectedWallet(e.value);\n                  setAsset(e.value?.asset);\n                  setAssetId(e.value?.assetId);\n                }}\n                wllates={wallets.filter((x) => x.isCrypto)}\n              ></WalletsListSelect>\n              {selectCurrancyError && (\n                <p className=\"small text-danger \">\n                  {\" \"}\n                  {props.t(\"Please Select Currency\")}\n                </p>\n              )}\n            </Col>\n            <Col>\n              <Label className=\"mb-2\">{props.t(\"Network\")}</Label>\n              <NetworksListSelect\n                className=\"h-50\"\n                noOptionsMessage={({ inputValue }) =>\n                  !inputValue && \"Select a coin first\"\n                }\n                onChange={(e) => {\n                  console.log(e.value);\n                  setNetwork(e.value);\n                  setNetworkAddress(e.value.address);\n                  setNetworkName(e.value.chainId.name);\n                }}\n                networks={selectedWallet ? selectedWallet?.networks : []}\n              ></NetworksListSelect>\n              {networkError && (\n                <p className=\"small text-danger \">\n                  {props.t(\"Please select a network\")}\n                </p>\n              )}\n            </Col>\n          </Row>\n          <div className=\"mb-3\">\n            <Label>{props.t(\"Enter Address\")}</Label>\n\n            <input\n              className=\"form-control \"\n              onChange={(e) => {\n                setAddress(e.target.value);\n              }}\n              type=\"text\"\n              placeholder={props.t(\"Enter Address\")}\n            ></input>\n            {addressError && (\n              <p className=\"small text-danger \">\n                {props.t(\"Please Enter Address\")}\n              </p>\n            )}\n          </div>\n          <div className=\"text-center mt-4\">\n            <Button\n              className=\"btn btn-primary m-2 btn-sm w-lg\"\n              onClick={() => {\n                dispatch(toggleCurrentModal(\"selectWithdrawalMethodModal\"));\n              }}\n            >\n              {props.t(\"Back\")}\n            </Button>\n            <Button\n              className=\"btn btn-danger waves-effect waves-light w-lg btn-sm\"\n              onClick={() => validateStep1()}\n            >\n              {props.t(\"Continue\")}\n            </Button>\n          </div>\n        </>\n      ),\n    },\n    {\n      header: \"Enter Amount\",\n      content: (\n        <>\n          <div className=\"mb-3\">\n            <Label className=\"form-label mb-2\">\n              {props.t(\"Transaction Fee\")}\n            </Label>\n            <InputGroup className=\"\">\n              <InputGroupText className=\" w-100\">\n                {transactionFee}\n                {\"   \"}\n                {asset}\n              </InputGroupText>\n              {/* <Input className=\"form-control border-start-0 text-end\" type=\"text\" placeholder=\"0.00 EUR\" /> */}\n            </InputGroup>\n          </div>\n          <div className=\"mb-3\">\n            <Label className=\"form-label mb-2\">{props.t(\"Total Amount\")}</Label>\n            <Input\n              onChange={(e) => {\n                setAmount(e.target.value);\n                amountValidationHandler(e);\n              }}\n              className=\"form-control \"\n              type=\"number\"\n              placeholder=\"0.00 USDT\"\n            />\n            {amountError && (\n              <p className=\"small text-danger \">\n                {\" \"}\n                {props.t(\"Please Enter Amount\")}\n              </p>\n            )}\n            {amountValidation && (\n              <p className=\"small text-danger \">\n                {\" \"}\n                {props.t(\"The minimum value for amount is 15\")}\n              </p>\n            )}\n          </div>\n          <div className=\"text-center\">\n            <Button\n              className=\"btn btn-secondary m-2 btn-sm w-lg\"\n              onClick={() => toggleTab(0)}\n            >\n              {props.t(\"Previous\")}\n            </Button>\n            <Button\n              className=\"btn btn-danger m-2 btn-sm w-lg\"\n              disabled={amountValidation}\n              onClick={() => validateStep2()}\n            >\n              {props.t(\"Continue\")}\n            </Button>\n          </div>\n        </>\n      ),\n    },\n    {\n      header: \"Withdraw status\",\n      content: (\n        <>\n          <>\n            {result.status ? (\n              <>\n                <div className=\"text-center  mb-4\">\n                  <h1 className=\"fs-1 mb-5\">\n                    {props.t(\"Yay!\")} <i className=\"bx bx-wink-smile\"></i>\n                  </h1>\n                  <p>{props.t(\"Your Withdrawal Request Has Been Created\")} </p>\n                  <p>\n                    <span className=\"positive\">\n                      {result?.result?.amount?.[\"$numberDecimal\"]}\n                      {selectedWallet.label}\n                    </span>\n                  </p>\n                </div>\n                <CardWrapper className=\"mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-around px-4\">\n                    <div>\n                      <div className=\"text-muted\">{props.t(\"Status\")}</div>\n                      <div className=\"positive\">{props.t(\"gateway\")}</div>\n                    </div>\n                    <div>\n                      <div className=\"text-muted\">{result.result?.status}</div>\n                      <div>{result.result?.gateway}</div>\n                    </div>\n                  </div>\n                </CardWrapper>\n              </>\n            ) : (\n              <>\n                <div className=\"text-center  mb-4\">\n                  <h1 className=\"fs-1 mb-5\">\n                    {props.t(\"Oops!\")} <i className=\"bx sad\"></i>\n                  </h1>\n                  <p>\n                    {props.t(\n                      \"Your Withdrawal Request Not Successfully Created\"\n                    )}\n                  </p>\n                </div>\n                <CardWrapper className=\"mb-4\">\n                  <div className=\"d-flex align-items-center justify-content-between px-5\">\n                    <div>\n                      <div className=\"positive\">{result.message}</div>\n                    </div>\n                  </div>\n                </CardWrapper>\n              </>\n            )}\n          </>\n          <div className=\"text-center\">\n            <Button\n              className=\"btn btn-danger m-2 btn-sm w-lg\"\n              onClick={toggleOpen}\n            >\n              {props.t(\"Continue\")}\n            </Button>\n          </div>\n          {/* <div className=\"text-center\">\n                <Button className=\"btn btn-danger m-2 btn-sm w-lg\" onClick={handleSubmit}>View Wallet</Button>\n            </div> */}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <CustomModal\n        steps={steps}\n        isOpen={isOpen}\n        toggleOpen={toggleOpen}\n        activeStep={activeStep}\n        toggleTab={toggleTab}\n      ></CustomModal>\n    </>\n  );\n}\nexport default withTranslation()(CryptoWithdraw);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Convert/Convert.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Withdrawals/SelectWithdrawalMethodModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Deposits/SelectDepositMethodModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Modals/Wallets/Transfer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BankAccounts/AddBankAccountModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomTable.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Crypto/CryptoDeposit.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/OneAccountView.js",["2031"],"import Accounts from \"../Dashboard/Accounts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleCurrentModal } from \"store/actions\";\nimport { useTranslation } from \"react-i18next\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { JClickHandler } from \"components/Journey/handlers\";\n\nexport default function OneAccountView({ handleAccountSelect, propsType }) {\n  const history = useHistory();\n  const [type, setType] = useState(propsType || \"live\");\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { accounts } = useSelector((state) => state.forex.accounts);\n  const profileDetails = useSelector(state => state.Profile.clientData);\n\n  const { type: paramType } = useParams();\n\n  useEffect(() => {\n    setType(paramType);\n  }, [paramType]);\n  \n  const buttons = [\n    {\n      title: t(`Create new ${type} Account`),\n      onClick: () => {\n        if (\n          profileDetails.stages.individual?.submitProfile ||\n          type === \"demo\"\n        ) {\n          dispatch(toggleCurrentModal(\"CreateAccModal\", type));\n        } else {\n          JClickHandler(\n            \"madeDeposit\",\n            profileDetails.stages,\n            dispatch,\n            toggleCurrentModal\n          )();\n        }\n      },\n      iconName: \"icofont-plus-circle me-1\",\n      disabled: !profileDetails?.stages?.kycApproved,\n    },\n    // {\n    //   title: t(\"Change Password\"),\n    //   onClick: () => history.push(\"/accounts/password\"),\n    //   iconName: \"icofont-lock me-1\",\n    //   disabled: accounts === undefined || accounts?.length === 0,\n    // },\n    {\n      title: t(\"Change Leverage\"),\n      onClick: () => dispatch(toggleCurrentModal(\"LeverageModal\", accounts)),\n      iconName: \"icofont-exchange me-1\",\n      disabled: accounts === undefined || accounts?.length === 0,\n    },\n  ];\n  return (\n    <div className=\"forex-dashboard\">\n      <Accounts onAccountSelect={handleAccountSelect} isFromDashboard={false} buttons={buttons} type={type} setType={setType}  />\n    </div>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/TradingAccounts.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/TradingActivity.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/Clients.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Referrals/RecursiveTableRows.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/AgreementDetails.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/DedicatedLinks.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/bankAccounts.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Exchange/Chart.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/calculateFee.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/ib.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/Details.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/MT5/withdrawalConfig.js",["2032"],"import PerfectMoney from \"assets/img/payment-method/perfect-money.png\";\nexport const withdrawalConfig = [\n  {\n    gateway: \"WIRE_TRANSFER\",\n    name: \"Wire Transfer\",\n    image: \"/img/payment-method/wire-transfer.png\",\n    allowed: {\n      wallet: true,\n      mt5: true,\n    },\n    config: {},\n  },\n  // {\n  //   gateway: \"PERFECT_MONEY\",\n  //   name: \"Perfect Money\",\n  //   image: PerfectMoney,\n  //   allowed: {\n  //     wallet: true,\n  //     mt5: true,\n  //   },\n  //   config: {},\n  // },\n  // {\n  //   gateway: \"OLX_FOREX\",\n  //   name: \"Olx Forex\",\n  //   image: \"/img/payment-method/olxforex.jpeg\",\n  //   allowed: [\"fiatDeposit\"],\n  //   receipt: false,\n  // },\n  {\n    gateway: \"CRYPTO\",\n    name: \"Crypto\",\n    image: \"/img/payment-method/crypto.png\",\n    allowed: {\n      wallet: true,\n      mt5: true,\n    },\n    config: {\n      methods: [\n        {\n          network: \"TR20\",\n          coins: [\"USDT\"]\n        }\n      ]\n    },\n  },\n  // {\n  //   gateway: \"حواله بنكيه\",\n  //   name: \"حواله بنكيه\",\n  //   image: \"/img/payment-method/hawala_bank.png\",\n  //   allowed: {\n  //     wallet: true,\n  //     mt5: true,\n  //   },\n  //   config: {      \n  //   }\n  // },\n];","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/calculateTranFee.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/withdraw.js",["2033","2034","2035"],"import * as axiosHelper from \"./api_helper\";\n\nexport const getWallets = async () => {\n  const data = await axiosHelper.get(\"/wallets\");\n  if (data.isError) {\n    throw new Error(data.isError);\n  }\n  return data?.result;\n};\nexport const addWithdraw = async (values) => {\n  // const { id, values } = payload;\n  console.log(\"Withdraw: \", { values });\n  const data = await axiosHelper.post(\"transactions/withdraw\", values);\n  // if (data.isError) {\n  //   throw new Error(data.message);\n  // }\n  return data;\n};\nexport const addWithdrawCrypto = async (values) => {\n  // const { id, values } = payload;\n  console.log(\"CRYPTO Withdraw: \", { values });\n  const data = await axiosHelper.post({\n    url:\"transactions/withdraw/crypto\",\n     data: values\n    });\n  // if (data.isError) {\n  //   throw new Error(data.message);\n  // }\n  return data;\n};\nexport const addFxWithdraw = async (values)=>{\n  console.log(\"FX Withdraw: \", { values });  \n  const data = await axiosHelper.post(\"fxtransactions/withdrawals\", values);\n  return data;\n};\n// export const fetchwallets = async () => {\n//     const data = await axiosHelper.get('wallets');\n//     return data.result;\n// }\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/StartTrading.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/KYCProgress.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/IbQuestionaire.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/LeverageModal.js",["2036"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { \n  Modal, ModalHeader, ModalBody, Button\n } from \"reactstrap\";\nimport { withTranslation } from \"react-i18next\";\nimport {\n  createChangeLeverageRequest,\n  getAccountTypesStart,\n} from \"store/actions\";\nimport Loader from \"components/Common/Loader\";\nimport { useEffect, useState } from \"react\";\nimport config from \"config\";\n\nconst LeverageModal = ({ isOpen, toggle, accounts, t }) => {\n  const dispatch = useDispatch();\n  const [selectedAccount, setSelectedAccount] = useState(accounts[0]?._id);\n  const [selectedLeverage, setSelectedLeverage] = useState(config.LEVERAGES);\n  const createChangeLeverageRequestLoading = useSelector(\n    (state) => state.forex.requests.createChangeLeverageRequestLoading\n  );\n  const handleValidSubmit = (event, values) => {\n    dispatch(\n      createChangeLeverageRequest({\n        _id: values.account,\n        to: values.leverage,\n        from: values.from,\n        login: values.login,\n        platform: values.platform,\n      })\n    );\n  };\n  const { accountTypes, submitting } = useSelector(\n    (state) => state.forex.accounts\n  );\n\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setSelectedAccount(accounts[0]._id);\n    }\n  }, [accounts]);\n\n  useEffect(() => {\n    dispatch(\n      getAccountTypesStart({\n        forCp: true,\n      })\n    );\n    return () => {\n      dispatch(getAccountTypesStart());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!selectedAccount || !accountTypes.length) return;\n  \n    const account = accounts.find(acc => acc._id === selectedAccount);\n    const type = accountTypes.find(typee => typee._id === account?.accountTypeId._id);\n    \n    setSelectedLeverage(type?.leverages || config.LEVERAGES);\n    \n  }, [selectedAccount, accountTypes]);\n\n  return (\n    <Modal centered isOpen={isOpen} toggle={toggle}>\n      <ModalHeader toggle={toggle} tag=\"h4\">\n        {t(\"Change Leverage\")}\n      </ModalHeader>\n      <ModalBody>\n        <AvForm\n          onValidSubmit={(e, v) => {\n            v.from = accounts.filter(\n              (account) => account._id == v.account\n            )[0]?.MarginLeverage;\n            v.login = accounts.filter(\n              (account) => account._id == v.account\n            )[0]?.login;\n            v.platform = accounts.filter(\n              (account) => account._id == v.account\n            )[0]?.platform;\n            handleValidSubmit(e, v);\n          }}\n        >\n          <AvField\n            type=\"select\"\n            name=\"account\"\n            value={accounts[0]._id}\n            label={t(\"Select Account\")}\n            className=\"form-select mt-1 mb-2\"\n            required\n            onChange={(e) => setSelectedAccount(e.target.value)}\n          >\n            {accounts.map((account) => (\n              <option key={account.login} value={account._id}>\n                {account.login}\n              </option>\n            ))}\n            ;\n          </AvField>\n          <AvField\n            type=\"select\"\n            name=\"leverage\"\n            value={\"100\"}\n            label={t(\"Select Leverage\")}\n            className=\"form-select mt-1\"\n            required\n          >\n            {(selectedLeverage || config.LEVERAGES)?.map((leverage) => (\n              <option key={leverage} value={leverage}>\n                1:{leverage}\n              </option>\n            ))}\n          </AvField>\n          <div className=\"text-center mt-3 mb-1\">\n            {createChangeLeverageRequestLoading ? (\n              <Loader />\n            ) : (\n              <Button type=\"submit\" className=\"border-0 color-bg-btn shadow\">\n                {t(\"Change\")}\n              </Button>\n            )}\n          </div>\n        </AvForm>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default withTranslation()(LeverageModal);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/UploadKycModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Deposit.js",["2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048"],"import { useState, useEffect } from \"react\";\nimport {\n  Button, Col, Row \n} from \"reactstrap\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport {\n  addDeposit,\n  addForexDeposit,\n  paymentGatewayDeposit,\n} from \"apis/deposit\";\nimport { allowedMethods } from \"./Methods/allowedMethods\";\nimport WireTransfer from \"./Methods/WireTransfer\";\nimport Signature from \"./Methods/VisaMaster/Signature/Signature\";\nimport SelfieCamera from \"./Methods/VisaMaster/SelfieCamera/SelfieCamera\";\nimport CheckKYC from \"./Methods/VisaMaster/CheckKYC.js\";\nimport Others from \"./Methods/Others\";\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport CustomModal from \"components/Common/CustomModal\";\nimport StageTwo from \"./StageTwo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchWallets,\n  getAccountsStart,\n} from \"store/actions\";\nimport OlxForex from \"./Methods/OlxForex\";\nimport CompanyCrypto from \"./Methods/Crypto\";\nimport A3tmad from \"./Methods/A3tmad\";\nimport PerfectMoney from \"./Methods/PerfectMoney\";\nimport Epayme from \"./Methods/EpaymeForm\";\nimport { uploadPDF } from \"../../helpers/uploadPdf.js\";\n\n\nfunction Deposit({ isOpen, toggleOpen, type }) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  // Selectors\n  const { wallets } = useSelector((state) => state?.walletReducer);\n  const { clientData } = useSelector(state => state.Profile);\n  // States\n  const [activeStep, setActiveStep] = useState(0);\n  const [gateway, setGateway] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n    const [targetCurrency, setTargetCurrency] = useState(\"USD\");\n\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState();\n  // used to check if amount is less than 15 then raise an error\n  const [hoveredPaymentMethod, setHoveredPaymentMethod] = useState();\n  const [paymentPayload, setPaymentPayload] = useState({});\n\n  const [isFirstStepValid, setIsFirstStepValid] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [selectedAccount, setSelectedAccount] = useState(\"\");\n  const [resAmount, setResAmount] = useState(null);\n  const [finitic_PayUrl, setFiniticPayUrl] = useState(null);\n\n  const [baseCurrency, setBaseCurrency] = useState(\"USD\");\n\n  const [epaymeState, setEpaymeState] = useState({\n    loading: false,\n    isSuccess: false,\n    isError: false,\n    message: \"\"\n  });\n  const [paymentStatus, setPaymentStatus] = useState({\n    isSuccess: false,\n    isError: false,\n    loading: true,\n    result: \"\"\n  });\n  const firstVisaDeposit = clientData.isFirstDeposit == undefined || clientData.isFirstDeposit;\n\n  // Effects\n  useEffect(() => {\n    if (isOpen) {\n      setActiveStep(0);\n      setGateway(\"\");\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (type === \"mt5Deposit\") {\n      dispatch(getAccountsStart(\n        {\n          type: \"LIVE\",\n        },\n      ));\n    } else if (!wallets) {\n      dispatch(fetchWallets());\n    }\n  }, [type]);\n\n  // Handlers\n  function toggleTab(tab) {\n    if (activeStep !== tab) {\n      setActiveStep(tab);\n    }\n  }\n  \n  function loadScript(scriptURL, callback) {\n    const script = document.createElement(\"script\");\n    script.src = scriptURL;\n    script.async = true;\n    script.onload = () => {\n      if (callback) {\n        callback();\n      }\n    };\n    document.body.appendChild(script);\n  }\n\n  useEffect(()=>{\n    if (selectedPaymentMethod === \"EPAYME\" && result.result && result.isSuccess){\n      setPaymentStatus({\n        ...paymentStatus,\n        loading: true\n      });\n      let Epay = null;\n      const initiateEPaySDK = (url, callback) => {\n        loadScript(url, () => {\n          console.log(\"epay is ready\");\n          Epay = window.Epay;\n    \n          if (callback) {\n            callback(Epay);\n          }\n        });\n      };\n      initiateEPaySDK(result.result.url, (ePayMe) => {\n        if (ePayMe) {\n          if (result.result.orderId != \"\") {\n            setPaymentStatus({\n              ...paymentStatus,\n              loading: true\n            });\n            const options = {\n              customerId: result.result.customerId,\n              channelId: \"WEB\",\n              merchantId: result.result.merchantId,\n              orderID: result.result.orderID,\n              orderDescription: result.result.orderDescription,\n              orderAmount: result.result.orderAmount,\n              mobilenumber: result.result.mobilenumber,\n              email: result.result.email || \"\",\n              merchantType: \"ECOMMERCE\",\n              orderCurrency: \"USD\",\n              successHandler: async function (response) {\n                // debugger;\n                console.log(\"success\", response);      \n                let success = false;\n                switch (response.response.transt) {\n                  case \"completed\":\n                    success = true;\n                    setPaymentStatus({\n                      ...paymentStatus,\n                      isSuccess: true,\n                      loading: false\n                    });\n                    break;\n                  case \"failed\":\n                    setPaymentStatus({\n                      ...paymentStatus,\n                      isError: true,\n                      loading: false\n                    });\n                }\n                setPaymentStatus({\n                  ...paymentStatus,\n                  loading: false\n                });              },\n              failedHandler: async function (response) {\n                setPaymentStatus({\n                  ...paymentStatus,\n                  isError: true,\n                  loading: false\n                });\n              }\n            };\n            const ePay = new ePayMe(options);\n            ePay.open();\n          }\n        }\n      });\n    } else if (result.result){\n      if (result.status) {\n        setPaymentStatus({\n          ...paymentStatus,\n          isSuccess: true\n        });\n      } else {\n        setPaymentStatus({\n          ...paymentStatus,\n          isError: true\n        });\n      }\n    }\n    return () => {\n      setPaymentStatus({\n        isError: false,\n        isSuccess: false,\n        loading: false\n      });\n    };\n  }, [result]);\n\n  const stageOnePaymentDetails = () => {\n    switch (gateway) {\n      case \"WIRE_TRANSFER\":\n        return <WireTransfer t={t} setIsFirstStepValid={setIsFirstStepValid} />;\n      case \"FINITIC_PAY\":\n      case \"PAYMAXIS\":\n      case \"OLX_FOREX\":\n        return (\n          <OlxForex t={t} setIsFirstStepValid={setIsFirstStepValid} />\n        );\n      case \"EPAYME\":\n        return (\n          <Epayme type={type} t={t} setIsFirstStepValid={setIsFirstStepValid}\n            setBaseCurrency={setBaseCurrency} />\n        );\n      case \"PERFECT_MONEY\":\n        return (\n          <PerfectMoney t={t} setIsFirstStepValid={setIsFirstStepValid} />\n        );\n      case \"NETELLER\":\n      case \"MASTERCARD\":\n      case \"SKRILL\":\n        return <Others t={t} setIsFirstStepValid={setIsFirstStepValid} setPaymentPayload={setPaymentPayload} />;\n      case \"CRYPTO\":\n        return (\n          <CompanyCrypto\n            t={t}\n            setIsFirstStepValid={setIsFirstStepValid}\n            setPaymentPayload={setPaymentPayload}\n          />\n        );\n        case \"VISA_MASTER\":\n        return (\n          <CheckKYC\n            t={t}\n            setIsFirstStepValid={setIsFirstStepValid}\n            setPaymentPayload={setPaymentPayload}/>\n        );\n      case \"حواله بنكيه\":\n        return (\n          <A3tmad t={t} setIsFirstStepValid={setIsFirstStepValid} />\n        );\n      default:\n        return (\n          <div className=\"text-center\">\n            <h5 className=\"mb-3\">{t(\"Please Select Payment Method\")}</h5>\n          </div>\n        );\n    }\n  };\n\nfunction generateRandomNumber() {\n    const timestamp = Math.floor(Date.now() / 1000).toString(16);\n    const random = \"xxxxxxxxxxxxxxxx\".replace(/x/g, () =>\n      Math.floor(Math.random() * 16).toString(16)\n    );\n    return (timestamp + random).toLowerCase();\n  }\n  const submitHandler = (data) => {\n        if (selectedPaymentMethod == \"VISA_MASTER\") {\n      if (type != \"mt5Deposit\") {\n        data.gateway = \"VISA_MASTER\";\n        \n      }\n      delete data.gateway;\n      delete data.paymentPayload;\n      data.description = data.note;\n      delete data.note;      \n      data.email = clientData.email;\n      data.amount = `${data.amount}.00`;\n      data.number = generateRandomNumber();   \n    }\n    if (selectedPaymentMethod == \"VISA_MASTER\" && firstVisaDeposit) {\n      uploadPDF();\n    }\n    if (type === \"fiatDeposit\") {\n      if ([\"OLX_FOREX\", \"PAYMAXIS\", \"VISA_MASTER\"].includes(selectedPaymentMethod)) {\n        data.currency = targetCurrency;\n        paymentGatewayDeposit(data, selectedPaymentMethod)\n          .then((res) => {\n            setResult(res);\n            toggleTab(2);\n              if ((res.result.url || res.result.redirect_url) ) {\n              window.location.href = res.result.url || res.result.redirect_url;\n            }\n          })\n          .catch((err) => {\n            setResult(err);\n            toggleTab(2);\n          });\n      } else if (selectedPaymentMethod === \"FINITIC_PAY\") {\n        paymentGatewayDeposit(data, selectedPaymentMethod)\n          .then((res) => {\n            console.log(\"testing mt4\", res);\n            setResult(res);\n            toggleTab(2);\n            setFiniticPayUrl(res?.result?.url);\n          })\n          .catch((err) => {\n            setResult(err);\n            toggleTab(2);\n          });\n      } else if (selectedPaymentMethod === \"EPAYME\") {\n        paymentGatewayDeposit(data, selectedPaymentMethod)\n          .then((res) => {\n            setResult(res);\n            toggleTab(2);\n            // window.location.href = res.result.url;\n            setFiniticPayUrl(res?.result?.url);\n          \n          })\n          .catch((err) => {\n            setResult(err);\n            toggleTab(2);\n          });\n      } else {\n        addDeposit(data)\n          .then((res) => {\n            setLoading(false);\n            setResult(res);\n            toggleTab(2);\n          })\n          .catch((err) => {\n            setLoading(false);\n            setResult(err);\n            toggleTab(2);\n          });\n      }\n    } else if (type === \"mt5Deposit\") {\n      if ([\"FINITIC_PAY\", \"EPAYME\", \"PAYMAXIS\", \"VISA_MASTER\"].includes(selectedPaymentMethod)) {\n        paymentGatewayDeposit(data, selectedPaymentMethod)\n          .then((res) => {\n            setResult(res);\n            toggleTab(2);\n            setFiniticPayUrl(res?.result?.url);\n            if ((res.result.url || res.result.redirect_url) && [\"PAYMAXIS\", \"VISA_MASTER\"].includes(selectedPaymentMethod)) {\n             window.location.href = res.result.url || res.result.redirect_url;\n            }\n          })\n          .catch((err) => {\n            setResult(err);\n            toggleTab(2);\n          });\n        return;\n      } else {\n        addForexDeposit(data, selectedAccount)\n          .then((res) => {\n            setResult(res);\n            toggleTab(2);\n          })\n          .catch((err) => {\n            setResult(err);\n            toggleTab(2);\n          });\n      }\n    }\n    else {\n      console.log(\"Type: \", { type });\n    }\n  };\n\n  const steps = [\n    {\n      header: t(\"Select Method\"),\n      content: (\n        <>\n          <div>\n            <div className=\"mb-0\">\n              <h6 className=\"mb-3\">{t(\"Select Payment Method\")}</h6>\n              <Row className=\"justify-content-center payment-methods\">\n                {allowedMethods\n                  .filter((method) => method.isSandbox ? clientData.email?.includes(\"mailinator.com\") : true)\n                  .filter((method) => method.allowed.includes(type))\n                  .map((method) => {\n                    if (!method.showForCountries || (method.showForCountries && method.showForCountries.includes(clientData.country)))\n                      return <Col key={method.gateway} xs={4} lg={2} className=\"my-2\">\n                        <button\n                          type=\"button\"\n                          onClick={() => {\n                            setGateway(method.gateway);\n                            setSelectedPaymentMethod(method.gateway);\n                          }}\n                          onMouseEnter={() => { setHoveredPaymentMethod(method.gateway) }}\n                          onMouseLeave={() => { setHoveredPaymentMethod() }}\n                          className={`btn btn-${selectedPaymentMethod === method.gateway ? \"success\" : hoveredPaymentMethod === method.gateway ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4 d-flex align-items-center justify-content-center`}\n                          style={{\n                            maxWidth: \"80px\",\n                            maxHeight: \"80px\",\n                            height: \"100%\",\n                          }}\n                        >\n                          <img\n                            src={method.image}\n                            width=\"100%\"\n                            height=\"100%\"\n                            style={{\n                              objectFit: \"contain\",\n                            }}\n                            alt={method.name}\n                          ></img>\n                        </button>\n                      </Col>;\n                    })}\n              </Row>\n            </div>\n            {gateway && stageOnePaymentDetails()}\n            <div className=\"text-center mt-4\">\n              <Button\n                type=\"submit\"\n                className=\"btn btn-success waves-effect waves-light w-lg btn-sm\"\n                disabled={gateway === \"\" || !isFirstStepValid}\n                onClick={() => toggleTab(1)}\n              >\n                {t(\"Continue\")}\n              </Button>\n            </div>\n          </div>\n        </>\n      ),\n    },\n        ...(selectedPaymentMethod === \"VISA_MASTER\" && firstVisaDeposit\n      ? [\n        {\n          header: \"Signature\",\n          content: (\n            <Signature toggleTab={toggleTab} activeStep={activeStep} />\n          ),        \n        },\n      ]\n      : []),\n    ...(selectedPaymentMethod === \"VISA_MASTER\" && firstVisaDeposit\n      ? [\n        {\n          header: \"Selfie\",\n          content: (\n            <SelfieCamera toggleTab={toggleTab} activeStep={activeStep} />\n          ),\n        },\n      ]\n      : []),\n    {\n      header: \"Enter Amount\",\n      content: (\n        <StageTwo\n          t={t}\n          setLoading={setLoading}\n          loading={loading}\n          toggleTab={toggleTab}\n          type={type}\n          gateway={gateway}\n          setTargetCurrency={setTargetCurrency}\n          selectedPaymentMethod={selectedPaymentMethod}\n          handleSubmit={submitHandler}\n          paymentPayload={paymentPayload}\n          receipt={\n            allowedMethods.find((method) => method.gateway === gateway)?.receipt\n          }\n        />\n      ),\n    },\n    {\n      header: \"Deposit status\",\n      content: (\n        <>\n          {gateway === \"FINITIC_PAY\" && finitic_PayUrl ? (\n            <div>\n              {t(\"Please complete payment\")}\n              <div className=\"mt-4\">\n                <iframe\n                  src={finitic_PayUrl}\n                  title=\"Finitic Pay\"\n                  style={{\n                    width: \"100%\",\n                    height: \"70vh\",\n                  }}\n                />\n              </div>\n            </div>\n          ) : (\n            <div>\n              {result.status ? (\n                <>\n                  <div className=\"text-center  mb-4\">\n                    <h1 className=\"fs-1 mb-5\">\n                      {t(\"Yay!\")} <i className=\"bx bx-wink-smile\"></i>\n                    </h1>\n                    <p>{t(\"Pending Deposit Thank You\")}</p>\n                    <p>\n                      <span className=\"positive\">\n                        {type === \"mt5Deposit\"\n                          ? result.result.currency === \"CENT\"\n                            ? parseFloat(result?.result?.amount) * 100\n                            : result?.result?.amount\n                          : result?.result?.amount?.$numberDecimal}{\" \"}\n                        {type === \"fiatDeposit\"\n                          ? result?.result?.currency\n                          : result?.result?.currency}\n                      </span>\n                    </p>\n                    <span className=\"text-muted\">\n                      {t(\"Your transaction ID is\")}\n                      {result?.result?._id}\n                    </span>\n                  </div>\n                  <CardWrapper className=\"mb-4\">\n                    <div className=\"d-flex align-items-center justify-content-around px-4\">\n                      <div>\n                        <div className=\"text-muted\">{t(\"Status\")}</div>\n                        <div className=\"positive\">\n                          {t(result?.result?.status)}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"text-muted\">{t(\"GATEWAY\")}</div>\n                        <div>{result.result?.gateway}</div>\n                      </div>\n                    </div>\n                  </CardWrapper>\n                </>\n              ) : (\n                <>\n                  <div className=\"text-center  mb-4\">\n                    <h1 className=\"fs-1 mb-5\">\n                      {t(\"Oops!\")} <i className=\"bx sad\"></i>\n                    </h1>\n                    <p>{t(\"Your Deposit Request Not Successfully Created\")}</p>\n                  </div>\n                  <CardWrapper className=\"mb-4\">\n                    <div className=\"d-flex align-items-center justify-content-between px-5\">\n                      <div>\n                        <div className=\"positive\">{result.message}</div>\n                      </div>\n                    </div>\n                  </CardWrapper>\n                </>\n              )}\n\n              <div className=\"text-center\">\n                <Button\n                  className=\"btn btn-danger m-2 btn-sm w-lg\"\n                  onClick={toggleOpen}\n                >\n                  {t(\"Continue\")}\n                </Button>\n              </div>\n            </div>\n          )}\n        </>\n      ),\n    },\n  ];\n  return (\n    <>\n      <CustomModal\n        steps={steps}\n        isOpen={isOpen}\n        toggleOpen={toggleOpen}\n        activeStep={activeStep}\n        toggleTab={toggleTab}\n      ></CustomModal>\n    </>\n  );\n}\nexport default withTranslation()(Deposit);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/tradingviewChart.jsx",["2049"],"\nimport {  \n\tReact, useEffect, useRef \n} from \"react\";\nimport \"./style.css\";\nimport { widget } from \"../../../charting_library\";\nimport datafeedTest from \"./datafeed\";\n\nfunction getLanguageFromURL() {\n  const regex = new RegExp(\"[\\\\?&]lang=([^&#]*)\");\n  const results = regex.exec(window.location.search);\n  return results === null\n    ? null\n    : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n\nexport const TVChartContainer = () => {\n  const chartContainerRef = useRef();\n\n  const defaultProps = {\n    symbol: \"ETH/USDT\",\n    interval: \"15\",\n    datafeedUrl: \"https://demo_feed.tradingview.com\",\n    library_path: \"./charting_library/\",\n    chartsStorageUrl: \"https://saveload.tradingview.com\",\n    chartsStorageApiVersion: \"1.1\",\n    clientId: \"tradingview.com\",\n    userId: \"public_user_id\",\n    fullscreen: false,\n    autosize: true,\n    studiesOverrides: {},\n    timezone: \"Etc/UTC\",\n\thas_intraday: false\n  };\n\n  useEffect(() => {\n    const widgetOptions = {\n\t\tsymbol: defaultProps.symbol,\n\t\tdatafeed: datafeedTest,\n\t\tinterval: defaultProps.interval,\n\t\tcontainer: chartContainerRef.current,\n\t\tlibrary_path: defaultProps.library_path,\n\t\tdebug: true,\n\t\tlocale: getLanguageFromURL() || \"en\",\n\t\tdisabled_features: [\"use_localstorage_for_settings\"],\n\t\tenabled_features: [\"study_templates\"],\n\t\tcharts_storage_url: defaultProps.chartsStorageUrl,\n\t\tcharts_storage_api_version: defaultProps.chartsStorageApiVersion,\n\t\tclient_id: defaultProps.clientId,\n\t\tuser_id: defaultProps.userId,\n\t\tfullscreen: defaultProps.fullscreen,\n\t\tautosize: defaultProps.autosize, \n\t\t\"has-intraday\": true,\n\t\t\"has_intraday\": true,\n\t\thas_daily: false,\n\t\thas_weekly_and_monthly: false,\n\t\tstudies_overrides: defaultProps.studiesOverrides,\n    };\n\n    const tvWidget = new widget(widgetOptions);\n    tvWidget.onChartReady(() => {\n      console.log(\"Chart has loaded\");\n    });\n\n    return () => {\n      tvWidget.remove();\n    };\n  });\n\n  return <div ref={chartContainerRef} className={\"TVChartContainer\"} />;\n};","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Withdraw/MT5/Mt5.js",["2050","2051","2052","2053"],"/* eslint-disable no-undef */\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Label,\n  Row,\n} from \"reactstrap\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport { addFxWithdraw } from \"../../../apis/withdraw\";\nimport calculateFee from \"../../../helpers/calculateTranFee\";\nimport CardWrapper from \"../../Common/CardWrapper\";\nimport CustomModal from \"../../Common/CustomModal\";\nimport AddBankAccountModal from \"../../BankAccounts/AddBankAccountModal\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport AvFieldSelecvt from \"components/Common/AvFieldSelect\";\nimport { getAccountsStart } from \"store/actions\";\nimport { withdrawalConfig } from \"./withdrawalConfig\";\nimport { validateFile } from \"helpers/validations/file\";\n\nfunction Mt5Withdraw({ isOpen, toggleOpen, ...props }) { \n  const dispatch = useDispatch();\n  const tranFeeGroupDetails = useSelector((state) => state.Profile?.clientData?.transactionFeeId);\n  const { accounts } = useSelector(state=> state.forex.accounts);\n  const { clientData } = useSelector(state=>state.Profile);\n  // eslint-disable-next-line no-unused-vars\n  const [loading, setLoading] = useState(false);\n  const [activeStep, setActiveStep] = useState(0);\n  // eslint-disable-next-line no-unused-vars\n  const [selectedWallet, setSelectedWallet] = useState(\"USD\");\n  const [amount, setAmount] = useState(\"\");\n  const [gateway, setGateway] = useState(\"\"); \n  const [transactionFee, setTransactionFee] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [selectGatwayError, setSelectGatwayError] = useState(false);\n  const [amountError, setAmountError] = useState(false);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState();\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  // used to check if amount is less than 15 then raise an error\n  const [amountValidation, setAmountValidation] = useState(false);\n  // eslint-disable-next-line no-unused-vars\n  const [selectWalletError, setSelectWalletError] = useState(false);\n  const [hoveredPaymentMethod, setHoveredPaymentMethod] = useState();\n  const [addBankModal, setAddBankModal] = useState(false);\n  const [bankAccount, setBankAccount] = useState({});\n  const [isFirstStepValid, setIsFirstStepValid] = useState(false);\n  const bankAccounts = useSelector(\n    (state) => state.crypto.bankAccounts?.bankAccounts?.docs\n  );\n\n  const [perfectMoneyAccount, setPerfectMoneyAccount] = useState(\"\");\n\n  const [methodConfig, setMethodConfig] = useState({});\n  const { t } = useTranslation();\n  useEffect(() => {\n    if (isOpen) {\n      setActiveStep(0);\n      // setSelectedWallet(defaultFiatWallet?.value);\n      setGateway(\"\");\n      setAmount(\"\");  \n      setIsFirstStepValid(false);\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    dispatch(getAccountsStart(\n      {\n        type: \"LIVE\",\n      },\n    ));\n  }, []);\n\n  function toggleTab(tab) {\n    if (activeStep !== tab) {\n      setActiveStep(tab);\n    }\n  }\n  useEffect(() => {\n    setTransactionFee(tranFeeGroupDetails ? calculateFee(tranFeeGroupDetails, amount) : 0);\n  }, [tranFeeGroupDetails, amount]);\n\n  const handleSubmit = (e, v) => {\n    const formData = new FormData();\n    formData.append(\"gateway\", gateway);\n    console.log(gateway);\n    formData.append(\"amount\", amount);\n    formData.append(\"tradingAccountId\", v.toAccount?._id);\n    formData.append(\"note\", \"note\");\n    formData.append(\"payload\", JSON.stringify(methodConfig));\n    if (methodConfig?.file){\n      formData.append(\"receipt\", methodConfig?.file);\n    }\n    const body = {\n      gateway: gateway,\n      amount: amount,\n      tradingAccountId: v.toAccount?._id,\n      note: \"note\",\n      name: v.name,\n      phone: v.phone,\n      address: v.address,\n      payload: JSON.stringify(methodConfig)\n    };\n    addFxWithdraw(body)\n      .then((e) => {\n        // console.log(e);\n        setResult(e);\n        toggleTab(2);\n      })\n      .catch((e) => {\n        // console.log(e);\n        setResult(e);\n        toggleTab(2);\n      });\n    // toggleOpen()\n  };\n\n  const validateStep1 = () => {\n    if (selectedWallet === \"\") {\n      setSelectWalletError(true);\n      setTimeout(() => {\n        setSelectWalletError(false);\n      }, 2000);\n    } \n    if (gateway === \"\") {\n      setSelectGatwayError(true);\n      setTimeout(() => {\n        setSelectGatwayError(false);\n      }, 2000);\n    }\n    if (gateway != \"\") {\n      toggleTab(1);\n    }\n  };\n  const validateStep2 = (e, v) => {\n    if (amount == \"\") {\n      setAmountError(true);\n      setTimeout(() => {\n        setAmountError(false);\n      }, 2000);\n    } else {\n      console.log(\"[info] submit \", {\n        e,\n        v\n        }) ;\n      handleSubmit(e, v);\n    }\n  };\n\n  const amountValidationHanlder = (e) => {\n    e.target.value < selectedAccount?.accountTypeId?.minWithdrawal ? setAmountValidation(true) : setAmountValidation(false);\n  };\n\n  useEffect(()=>{\n    amount < selectedAccount?.accountTypeId?.minWithdrawal ? setAmountValidation(true) : setAmountValidation(false);\n  }, [selectedAccount]);\n\n  const isFirstSubmitValid = () => {\n    if (gateway === \"\") {\n      return setIsFirstStepValid(false);\n    } else if (gateway === \"WIRE_TRANSFER\") {\n      if (Object.keys(bankAccount).length === 0) {\n        return setIsFirstStepValid(false);\n      } else {\n        return setIsFirstStepValid(true);\n      }\n    } else if (gateway === \"PERFECT_MONEY\") {\n      if (!perfectMoneyAccount) {\n        return setIsFirstStepValid(false);\n      } else {\n        console.log(perfectMoneyAccount);\n        return setIsFirstStepValid(true);\n      }\n    } else if (gateway === \"CRYPTO\") {\n      if (methodConfig?.network && methodConfig?.coin && methodConfig?.address !== \"\") {\n        return setIsFirstStepValid(true);\n      } else {\n        return setIsFirstStepValid(false);\n      }\n    } else if (gateway === \"صناديق-الاعتماد\") {\n      if (methodConfig.type === \"حواله\") {\n        if (methodConfig.file && (methodConfig.locationOfHawala !== \"\" && methodConfig.locationOfHawala !== null && methodConfig.locationOfHawala !== undefined)) {\n          return setIsFirstStepValid(true);\n        } else {\n          return setIsFirstStepValid(false);\n        }\n      }\n      if (methodConfig.type === \"اعتماد\") {\n        if (methodConfig.nameOfBox !== \"\" && methodConfig.numberOfBox !== \"\" && methodConfig.nameOfBox !== undefined && methodConfig.numberOfBox !== undefined) {\n          return setIsFirstStepValid(true);\n        } else {\n          return setIsFirstStepValid(false);\n        }\n      }\n    }\n    else if (gateway === \"حواله بنكيه\"){\n      return setIsFirstStepValid(true);\n    }\n    return setIsFirstStepValid(false);\n  };\n\n  useEffect(() => {\n    isFirstSubmitValid();\n  }, [gateway, bankAccount, bankAccounts, methodConfig, perfectMoneyAccount]);\n\n  const steps = [\n    {\n      header: t(\"Select Method\"),\n      content: (\n        <>\n          <div className=\"my-4\">\n            <AvForm\n              onValidSubmit={validateStep1}\n            >\n              <div className=\"mb-4\">\n                <h6 className=\"mb-3\">\n                  {props.t(\"Select Payment Method\")}\n                  {selectGatwayError && (\n                    <p className=\"small text-danger \">\n                      {props.t(\"Please Select Payment Method\")}\n                    </p>\n                  )}\n                </h6>\n                <Row className=\"justify-content-center payment-methods\">\n                  {\n                    withdrawalConfig.filter(\n                      method => method.allowed.mt5\n                    ).map((method, index) => (\n                      <Col xs={4} lg={2} className=\"my-2\" key={index}>\n                        <button\n                          type=\"button\"\n                          onClick={() => {\n                            setGateway(method.gateway);\n                            setSelectedPaymentMethod(method.gateway);\n                            setMethodConfig(method);\n                          }}\n                          onMouseEnter={() => {setHoveredPaymentMethod(method.gateway)}}\n                          onMouseLeave={() => {setHoveredPaymentMethod()}}\n                          className={`btn btn-${selectedPaymentMethod === method.gateway ? \"success\" : hoveredPaymentMethod === method.gateway ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4 d-flex align-items-center justify-content-center`}\n                          style={{\n                            maxWidth: \"80px\",\n                            maxHeight: \"80px\",\n                          }}\n                        >\n                          <img\n                            src={method.image}\n                            // width=\"100%\"\n                            // height=\"100%\"\n                            alt=\"\"\n                          ></img>\n                        </button>\n                      </Col>\n                    ))\n                  }\n                  {/* <Col xs={4} lg={2} className=\"my-2\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setGateway(\"VISA\");\n                        setSelectedPaymentMethod(\"VISA\");\n                      }}\n                      onMouseEnter={() => {setHoveredPaymentMethod(\"VISA\")}}\n                      onMouseLeave={() => {setHoveredPaymentMethod()}}\n                      className={`btn btn-${selectedPaymentMethod === \"VISA\" ? \"success\" : hoveredPaymentMethod === \"VISA\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                    >\n                      <img\n                        src=\"/img/payment-method/visa.png\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        alt=\"\"\n                      ></img>\n                    </button>\n                  </Col>\n                  <Col xs={4} lg={2} className=\"my-2\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setGateway(\"MASTERCARD\");\n                        setSelectedPaymentMethod(\"MASTERCARD\");\n                      }}\n                      onMouseEnter={() => {setHoveredPaymentMethod(\"MASTERCARD\")}}\n                      onMouseLeave={() => {setHoveredPaymentMethod()}}\n                      className={`btn btn-${selectedPaymentMethod === \"MASTERCARD\" ? \"success\" : hoveredPaymentMethod === \"MASTERCARD\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                    >\n                      <img\n                        src=\"/img/payment-method/mastercard-1.png\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        alt=\"\"\n                      ></img>\n                    </button>\n                  </Col>\n                  <Col xs={4} lg={2} className=\"my-2\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setGateway(\"NETELLER\");\n                        setSelectedPaymentMethod(\"NETELLER\");\n                      }}\n                      onMouseEnter={() => {setHoveredPaymentMethod(\"NETELLER\")}}\n                      onMouseLeave={() => {setHoveredPaymentMethod()}}\n                      className={`btn btn-${selectedPaymentMethod === \"NETELLER\" ? \"success\" : hoveredPaymentMethod === \"NETELLER\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                    >\n                      <img\n                        src=\"/img/payment-method/neteller.png\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        alt=\"\"\n                      ></img>\n                    </button>\n                  </Col>\n                  <Col xs={4} lg={2} className=\"my-2\">\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setGateway(\"SKRILL\");\n                        setSelectedPaymentMethod(\"SKRILL\");\n                      }}\n                      onMouseEnter={() => {setHoveredPaymentMethod(\"SKRILL\")}}\n                      onMouseLeave={() => {setHoveredPaymentMethod()}}\n                      className={`btn btn-${selectedPaymentMethod === \"SKRILL\" ? \"success\" : hoveredPaymentMethod === \"SKRILL\" ? \"default\" : \"light\"} waves-effect waves-light w-sm py-4`}\n                    >\n                      <img\n                        src=\"/img/payment-method/skrill.png\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        alt=\"\"\n                      ></img>\n                    </button>\n                  </Col> */}\n                </Row>\n              </div>\n              {gateway == \"WIRE_TRANSFER\" && (\n                <div className=\"mb-3\">\n                  <Label>{props.t(\"Select Bank Account\")}</Label>\n                  <AvFieldSelecvt\n                    name=\"bankAccount\"\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      setBankAccount(e);\n                    }}\n                    required\n                    placeholder=\"Select Bank Account\"\n                    options={bankAccounts?.map((bankAccount) => {\n                      return {\n                        label:`${bankAccount.bankName}`,\n                        value: bankAccount\n                      };\n                    })}\n                  >\n                  </AvFieldSelecvt>\n                  <InputGroup className=\"mt-2\">\n                    <InputGroupText className=\"custom-input-group-text\">\n                      <Link\n                        to=\"#\"\n                        onClick={() => {\n                          setAddBankModal(true);\n                        }}\n                      >\n                        {props.t(\"Add New\")}\n                      </Link>\n                    </InputGroupText>\n                  </InputGroup>\n                </div>\n              )}\n              {gateway == \"PERFECT_MONEY\" && (\n                <div className=\"mb-3\">\n                  <Label className=\"mb-3\">{props.t(\"Enter Your Perfect Money Account\")}</Label>\n                  <AvField\n                    name=\"perfectMoney\"\n                    className=\"form-control\"\n                    placeholder={`${props.t(\"Perfect Money Account\")}`}\n                    required\n                    validate={{\n                      maxLength:{ value: 20 }\n                    }}\n                    value={perfectMoneyAccount}\n                    onChange={(e) => setPerfectMoneyAccount(e.target.value)}\n                  />\n                  \n                </div>\n              )}\n              {\n                gateway === \"CRYPTO\" && (\n                  <>\n                    <div className=\"mb-3\">\n                      <Label>{props.t(\"Select Network\")}</Label>\n                      <AvFieldSelecvt\n                        name=\"cryptoNetwork\"\n                        className=\"form-select\"\n                        onChange={(e) => {\n                          setMethodConfig({\n                            ...methodConfig,\n                            network: e,\n                          });\n                          // setCryptoCurrency(e);\n                        }}\n                        options={methodConfig?.config.methods.map((method) => {\n                          return {\n                            label: method.network,\n                            value: method,\n                          };\n                        })}\n                      />\n                    </div>\n                    {\n                      methodConfig?.network && (\n                        <>\n                          <div className=\"mb-3\">\n                            <Label>{props.t(\"Select Coin\")}</Label>\n                            <AvFieldSelecvt\n                              name=\"cryptoCoin\"\n                              className=\"form-select\"\n                              onChange={(e) => {\n                                setMethodConfig({\n                                  ...methodConfig,\n                                  coin: e,\n                                  address: \"\",\n                                });\n                                // setCryptoCurrency(e);\n                              }}\n                              options={methodConfig?.network?.coins?.map((method) => {\n                                return {\n                                  label: method,\n                                  value: method,\n                                };\n                              })}\n                            />\n                          </div>\n                        </>\n                      )\n                    }\n                    {\n                      methodConfig?.coin && (\n                        <>\n                          <div className=\"mb-3\">\n                            <Label>{props.t(\"Select Address\")}</Label>\n                            <AvField\n                              name=\"cryptoAddress\"\n                              className=\"form-control\"\n                              placeholder=\"Enter Address\"\n                              value={methodConfig?.address}\n                              onChange={(e) => {\n                                setMethodConfig({\n                                  ...methodConfig,\n                                  address: e.target.value,\n                                });\n                              }}\n                            />\n                          </div>\n                        </>\n                      )\n                    }\n                  </>\n                )\n              }\n              {\n                // gateway === \"حواله بنكيه\" && (\n                //   <>\n                //     <div className=\"mb-3\">\n                //       <Label>{t(\"Type\")}</Label>\n                //       <AvFieldSelecvt\n                //         name=\"bankHawalaType\"\n                //         className=\"form-select\"\n                //         placeholder=\"حواله بنكيه\"\n                //         onChange={(e) => {\n                //           setMethodConfig({\n                //             /*...methodConfig,\n                //             type: */e,\n                //           });\n                //         }}\n                //         options={                          \n                //             [{\n                //               label: \"حواله بنكيه\",\n                //               value: \"حواله بنكيه\",\n                //             } ]                       \n                //         }\n                //       />\n                //     </div>\n                //     {\n                //       // methodConfig?.type && (\n                //       //   <>\n                //       //     {methodConfig.type === \"حواله\" && (\n                //       //       <>\n                //       //         <div className=\"mb-3\">\n                //       //           <Label className=\"form-label\" htmlFor=\"receipt\">\n                //       //             {t(\"Receipt\")}\n                //       //           </Label>\n                //       //           <AvField\n                //       //             type=\"file\"\n                //       //             name=\"receipt\"\n                //       //             className=\"form-control form-control-md\"\n                //       //             errorMessage={t(\"Receipt is required\")}\n                //       //             onChange={(e) => {\n                //       //               setMethodConfig({\n                //       //                 ...methodConfig,\n                //       //                 file: e.target.files[0],\n                //       //               });\n                //       //             }}\n                //       //             validate={{\n                //       //               required: { value: true },\n                //       //               validate: validateFile([\"jpg\", \"jpeg\", \"png\"], 1000000, (methodConfig?.file || {}), {\n                //       //                 sizeValidationMessage: t(\"The file size is too large\"),\n                //       //                 extensionValidationMessage: t(\"The file extension is not allowed\"),\n                //       //               })\n                //       //             }}\n                //       //           />\n                //       //         </div>\n                //       //         <div className=\"mb-3\">\n                //       //           <Label>{t(\"وجه الحواله\")}</Label>\n                //       //           <AvField\n                //       //             name=\"locationOfHawala\"\n                //       //             type=\"text\"\n                //       //             placeholder=\"وجه الحواله\"\n                //       //             onChange={(e) => {\n                //       //               setMethodConfig({\n                //       //                 ...methodConfig,\n                //       //                 locationOfHawala: e.target.value,\n                //       //               });\n                //       //             }}\n                //       //           />\n                //       //         </div>\n                //       //       </>\n                //       //     )} \n                //       //     {methodConfig.type === \"اعتماد\" && (\n                //       //       <>\n                //       //         <div className=\"mb-3\">\n                //       //           <Label>{t(\"اسم الصندوق\")}</Label>\n                //       //           <AvField\n                //       //             name=\"nameOfBox\"\n                //       //             type=\"text\"\n                //       //             placeholder=\"اسم الصندوق\"\n                //       //             onChange={(e) => {\n                //       //               setMethodConfig({\n                //       //                 ...methodConfig,\n                //       //                 nameOfBox: e.target.value,\n                //       //               });\n                //       //             }}\n                //       //           />\n                //       //         </div>\n                //       //         <div className=\"mb-3\">\n                //       //           <Label>{t(\"رقم الصندوق\")}</Label>\n                //       //           <AvField\n                //       //             name=\"numberOfBox\"\n                //       //             type=\"text\"\n                //       //             placeholder=\"رقم الصندوق\"\n                //       //             onChange={(e) => {\n                //       //               setMethodConfig({\n                //       //                 ...methodConfig,\n                //       //                 numberOfBox: e.target.value,\n                //       //               });\n                //       //             }}\n                //       //           />\n                //       //         </div>\n                //       //       </>\n                //       //     )} \n                //       //     {methodConfig.type === \"حواله بنكيه\" && (\n                //       //       <>\n                //       //         <div className=\"mb-3\">\n                //       //           <Label>{t(\"اسم الصندوق\")}</Label>\n                //       //           <AvField\n                //       //             name=\"nameOfBox\"\n                //       //             type=\"text\"\n                //       //             placeholder=\"اسم الصندوق\"\n                //       //             onChange={(e) => {\n                //       //               setMethodConfig({\n                //       //                 ...methodConfig,\n                //       //                 nameOfBox: e.target.value,\n                //       //               });\n                //       //             }}\n                //       //           />\n                //       //         </div>\n                //       //         <div className=\"mb-3\">\n                //       //           <Label>{t(\"رقم الصندوق\")}</Label>\n                //       //           <AvField\n                //       //             name=\"numberOfBox\"\n                //       //             type=\"text\"\n                //       //             placeholder=\"رقم الصندوق\"\n                //       //             onChange={(e) => {\n                //       //               setMethodConfig({\n                //       //                 ...methodConfig,\n                //       //                 numberOfBox: e.target.value,\n                //       //               });\n                //       //             }\n                //       //           }\n                //       //           />\n                //       //         </div>\n                //       //       </>\n                //       //     )}\n                //       //   </>\n                //       // )\n                //     }\n                //   </>\n                // )\n              }\n              {(gateway === \"WIRE_TRANSFER\" && bankAccount && Object.keys(bankAccount).length > 0) ?\n                (\n                  <>\n                    <AvForm>\n                      <h5 className=\"mb-4\">{props.t(\"Payment details\")}</h5>\n                      <div>\n                        <Label>{props.t(\"Bank Holder Name\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"accountHolderName\"\n                          value={`${clientData?.firstName} ${clientData?.lastName}`}\n                          validate={{ required:true }}\n                          disabled={true}\n                        >\n                        </AvField>\n                      </div>\n                      <div>\n                        <Label>{props.t(\"Bank Name\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"bankName\"\n                          value={bankAccount.bankName}\n                          validate={{ required:true }}\n                          disabled={true}\n                        >\n                        </AvField>\n                      </div>\n                      <div>\n                        <Label>{props.t(\"Account Number\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"accountNumber\"\n                          value={bankAccount.accountNumber}\n                          validate={{ required:true }}\n                          disabled={true}\n                        >\n                        </AvField>\n                      </div>\n                      <div>\n                        <Label>{props.t(\"Address\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"address\"\n                          value={bankAccount.address}\n                          validate={{ required:true }}\n                          disabled={true}\n                        >\n                        </AvField>\n                      </div>\n                      <div>\n                        <Label>{props.t(\"Swift Code\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"swiftCode\"\n                          value={bankAccount.swiftCode}\n                          validate={{ required:true }}\n                          disabled={true}\n                        >\n                        </AvField>\n                      </div>\n                      <div>\n                        <Label>{props.t(\"Currency\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"currency\"\n                          disabled={true}\n                          value={bankAccount.currency}\n                          validate={{ required:true }}\n                        >\n                        </AvField>\n                      </div>\n                      <p>{props.t(\"Bank Account\")}</p>\n                      {/* <p className=\"text-muted\">\n                        {props.t(\"You MUST include the Reference Code in your deposit in order to credit your account!\")}\n                      </p> */}\n                    </AvForm>\n                  </>  \n                )  : gateway == \"SKRILL\" ||\n                gateway == \"NETELLER\" ||\n                gateway == \"MASTERCARD\" ? (\n                    <>\n                      <p className=\"text-muted\">{props.t(\"\")}{props.t(\"Enter card information.\")}</p>\n                      <Row>\n                        <AvForm>\n                          <Col xs={12}>\n                            <div className=\"mb-3\">\n                              <Label\n                                htmlFor=\"example-date-input\"\n                                className=\"form-label\"\n                              >\n                                {props.t(\"Name\")}\n                              </Label>\n                              <Input\n                                className=\"form-control\"\n                                type=\"text\"\n                                id=\"example-date-input\"\n                              />\n                            </div>\n                          </Col>\n                          <Col xs={12}>\n                            <div className=\"mb-3\">\n                              <Label\n                                htmlFor=\"example-date-input\"\n                                className=\"form-label\"\n                              >\n                                {props.t(\"Card Number\")}\n                              </Label>\n                              <Input\n                                className=\"form-control\"\n                                type=\"text\"\n                                id=\"example-date-input\"\n                              />\n                            </div>\n                          </Col>\n                          <Col md={6}>\n                            <div className=\"mb-3\">\n                              <Label\n                                htmlFor=\"example-date-input\"\n                                className=\"form-label\"\n                              >\n                                {props.t(\"Expiry date\")}\n                              </Label>\n                              <Input\n                                className=\"form-control\"\n                                type=\"date\"\n                                id=\"example-date-input\"\n                              />\n                            </div>\n                          </Col>\n                          <Col md={6}>\n                            <div className=\"mb-3\">\n                              <Label\n                                htmlFor=\"example-date-input\"\n                                className=\"form-label\"\n                              >\n                                {props.t(\"Security Code (CVV)\")}\n                              </Label>\n                              <Input\n                                className=\"form-control\"\n                                type=\"text\"\n                                id=\"example-date-input\"\n                              />\n                            </div>\n                          </Col>\n                        </AvForm>\n                      </Row>\n                    </>\n                  ) : (\n                    \"\"\n                  )\n              }\n              <div className=\"text-center mt-4\">\n                <Button\n                  type=\"submit\"\n                  className=\"btn btn-success waves-effect waves-light w-lg btn-sm\"\n                  disabled={!isFirstStepValid}\n                >\n                  {props.t(\"Continue\")}\n                </Button>\n              </div>\n            </AvForm>\n          </div>\n        </>\n      ),\n    },\n    {\n      header: \"Enter Amount\",\n      content: (\n        <>\n          {\n            <>\n              <AvForm\n                onValidSubmit={(e, v) => {\n                  validateStep2(e, v);\n                }}\n              >\n                <h6 className=\"mb-3\">{props.t(\"Enter Amount\")}</h6>\n                <div className=\"d-flex justify-content-between mb-2\">\n                  <div>\n                    <Label htmlFor=\"example-date-input\" className=\"form-label\">\n                       {gateway === \"حواله بنكيه\" ? props.t(\"The withdrawal amount to be withdrawn from the wallet or platform\") : props.t(\"Amount\")}\n                    </Label>\n                  </div>\n                  <div>\n                    {props.t(\"Transaction requirements\")}\n                    <i className=\"fas fa-info-circle ms-2\"></i>\n                  </div>\n                </div>\n                <InputGroup>\n                  <Input\n                    required\n                    onChange={(e) => {\n                      amountValidationHanlder(e);\n                      setAmount(e.target.value);\n                    }}\n                    className=\"form-control\"\n                    type=\"number\"\n                    min=\"0\"\n                    value={amount}\n                    placeholder=\"Enter 200-128341\"\n                    onKeyPress={(e) => {\n                      if (!/[0-9]/.test(e.key)) {\n                        e.preventDefault();\n                      }\n                    }}\n                  />\n                  {/* <InputGroupText className=\"custom-input-group-text p-0 border-0\">\n                    <div style={{\n                      width: \"127px\",\n                    }}\n                    >\n                      <AvFieldSelect\n                        style={{ height:\"100%\" }}\n                        name=\"wallets\"\n                        options={[{\n                          label:\"USD\",\n                          value:\"USD\"\n                        }]}\n                        defaultValue={\"USD\"}\n                        onChange={(e) => {\n                          setSelectedWallet(e);\n                        }}\n                      >\n                      </AvFieldSelect>\n                    </div>\n                  </InputGroupText> */}\n                </InputGroup>\n                {amount && amountValidation && (\n                  <p className=\"small text-danger \"> {props.t(`The minimum value for amount is ${selectedAccount?.accountTypeId?.minWithdrawal}`)}</p>\n                )}\n                <div className=\"mt-3\">\n                  <AvFieldSelecvt\n                    options={\n                      accounts?.filter(a => a.type !== \"DEMO\").map(acc=>{\n                        return {\n                          label:`${acc?.login} ${acc?.accountTypeId?.title} (${acc.balance || acc.Balance} ${acc?.currency})`,\n                          value: acc\n                        };\n                      })\n                    }\n                    onChange={(e) => {\n                      setSelectedAccount(e);\n                    }}\n                    name=\"toAccount\"\n                    type=\"text\"\n                    errorMessage={props.t(\"to account is required\")}\n                    validate={{ required: { value: true } }}\n                    label={props.t(\"CTRADER Account\")}\n                  >\n                  </AvFieldSelecvt>\n                </div>\n                {amountError && (\n                  <p className=\"small text-danger \"> {props.t(\"Please Select Account\")}</p>\n                )}\n                <div className=\"text-center fw-bolder mt-4 received-amount\">\n                  <span className=\"fs-5\">{selectedWallet?.label}</span>\n                  <span className=\"fs-1\">{amount}</span>\n                </div>\n                {/* <div className=\"text-center mb-4\">You receive:</div> */}\n                {gateway === \"حواله بنكيه\" && \n                    <>\n                      <div className=\"mt-2\">\n                      <Label>{t(\"Name\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"name\"\n                          validate={{ required: true }}\n                        >\n                        </AvField>\n                      </div>\n                      <div className=\"mt-2\">\n                      <Label>{t(\"Phone\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"phone\"\n                          validate={{ required: true }}\n                        >\n                        </AvField>\n                      </div>\n                      <div className=\"mt-2\">\n                      <Label>{t(\"Address to send the transfer to the customer\")}</Label>\n                        <AvField\n                          type=\"text\"\n                          name=\"address\"\n                          validate={{ required: true }}\n                        >\n                        </AvField>\n                      </div>\n                    </>}\n                <div className=\"mb-3\">\n                  <Label className=\"form-label mb-2\">{props.t(\"Transaction Fee\")}</Label>\n                  <InputGroup className=\"\">\n                    <InputGroupText className=\" w-100\">\n                      {transactionFee}{\"   \"}{selectedWallet?.label}\n                    </InputGroupText>\n                    {/* <Input className=\"form-control border-start-0 text-end\" type=\"text\" placeholder=\"0.00 EUR\" /> */}\n                  </InputGroup>\n                </div>\n                <div className=\"my-4 text-center\">\n                  <Button\n                    className=\"btn btn-primary m-2 btn-sm w-lg\"\n                    onClick={() => toggleTab(0)}\n                  >\n                    {props.t(\"Back\")}\n                  </Button>\n                  <Button\n                    className=\"btn btn-success m-2 btn-sm w-lg\"\n                    type=\"submit\"\n                    disabled={loading || amountValidation}\n                  >\n                    {props.t(\"Continue\")}\n                  </Button>\n                </div>\n              </AvForm>\n            </>\n          }\n        </>\n      ),\n    },\n    {\n      header: \"Withdraw status\",\n      content: (\n        <>\n          {result.status ? (\n            <>\n              <div className=\"text-center  mb-4\">\n                <h1 className=\"fs-1 mb-5\">\n                  {props.t(\"Yay!\")} <i className=\"bx bx-wink-smile\"></i>\n                </h1>\n                <p>{props.t(\"Pending Withdraw Thank You\")}</p>\n                <p>\n                  <span className=\"positive\">\n                    {result?.result?.amount[\"$numberDecimal\"]}\n                    {selectedWallet.label}\n                  </span>\n                </p>\n              </div>\n              <CardWrapper className=\"mb-4\">\n                <div className=\"d-flex align-items-center justify-content-around px-4\">\n                  <div>\n                    <div className=\"text-muted\">{props.t(\"Status\")}</div>\n                    <div className=\"positive\">{props.t(\"gateway\")}</div>\n                  </div>\n                  <div>\n                    <div className=\"text-muted\">{result.result?.status}</div>\n                    <div>{result.result?.gateway}</div>\n                  </div>\n                </div>\n              </CardWrapper> \n            </>\n          ) : (\n            <>\n              <div className=\"text-center  mb-4\">\n                <h1 className=\"fs-1 mb-5\">\n                  {props.t(\"Oops!\")} <i className=\"bx sad\"></i>\n                </h1>\n                <p>{props.t(\"Your Withdraw Request Not Successfully Created\")}</p>\n              </div>\n              <CardWrapper className=\"mb-4\">\n                <div className=\"d-flex align-items-center justify-content-between px-5\">\n                  <div>\n                    <div className=\"positive\">{result.message}</div>\n                  </div>\n                </div>\n              </CardWrapper>\n            </>\n          )}\n          <div className=\"text-center\">\n            <Button\n              className=\"btn btn-danger m-2 btn-sm w-lg\"\n              onClick={toggleOpen}\n            >\n              {props.t(\"Continue\")}\n            </Button>\n          </div>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <CustomModal\n        steps={steps}\n        isOpen={isOpen}\n        toggleOpen={toggleOpen}\n        activeStep={activeStep}\n        toggleTab={toggleTab}\n      ></CustomModal> \n      <AddBankAccountModal\n        isOpen={addBankModal}\n        toggleOpen={() => {\n          setAddBankModal(false);\n        }}\n      ></AddBankAccountModal>\n    </>\n\n  );\n}\nexport default withTranslation()(Mt5Withdraw); ","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Deposit/SelectDepositMethod.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Accounts/SelectAccType.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Accounts/CreateAccModal.js",["2054","2055"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  AvForm, AvGroup, AvRadioGroup, AvRadio, AvField, AvFeedback,\n} from \"availity-reactstrap-validation\";\nimport {\n  Row, Col,\n  Modal, ModalHeader, ModalBody,\n  Input, Label, Button,\n} from \"reactstrap\";\nimport { withTranslation } from \"react-i18next\";\n\nimport {\n  createAccount, toggleCurrentModal, getAccountTypesStart, createAccountRequest,\n} from \"store/actions\";\nimport config from \"config\";\n\nconst CreateLiveAccModal = ({ isOpen, toggle, type, t }) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAccountTypesStart({\n      forCp: true,\n    }));\n    return () => {\n      dispatch(getAccountTypesStart());\n    };\n  }, []);\n\n  const { accountTypes, submitting, accounts } = useSelector((state) => state.forex.accounts);\n  const [filteredAccountTypes, setFilteredAccountTypes] = useState([]);\n  const [platformAccountTypes, setPlatformAccountTypes] = useState([]);\n  const [selectedPlatform, setSelectedPlatform] = useState(null);\n  const [accountCurrency, setSAccountCurrency] = useState([]);\n  const [accountLeverages, setAccountLeverages] = useState([]);\n\n  useEffect(() => {\n    if (!accountLeverages) {\n      setAccountLeverages(config.LEVERAGES);\n    }\n  }, [accountLeverages]);\n\n  // filter accounts based on account's type (live/demo)\n  useEffect(() => {\n    setFilteredAccountTypes(accountTypes?.filter((at) => at.type === type.toUpperCase()));\n  }, [accountTypes, type]);\n\n  // get unique platforms\n  const platforms = accountTypes.length > 0 && [...new Set(accountTypes.map(item => item.platform))];\n\n  // filter accounts based on platform\n  useEffect(() => {\n    setPlatformAccountTypes(filteredAccountTypes?.filter((account) => account.platform === selectedPlatform));\n  }, [selectedPlatform]);\n\n  const confirmPassword = (value, ctx, input, cb) => {\n    if (value !== ctx.password) cb(\"Password doesn't match!\");\n    else cb(true);\n  };\n\n  const isApprovalRequired = accounts?.length >= config.MAX_UNAPPROVED_ACCOUNTS;\n\n  const handleValidSubmit = (event, values) => {\n    delete values.confirm_password;\n    //console.log(\"Account create\", {values});\n    if (isApprovalRequired) {\n      dispatch(createAccountRequest({\n        ...values,\n      }));\n    } else {\n      dispatch(createAccount({\n        ...values,\n      }));\n    }\n  };\n\n  return (\n    <Modal centered isOpen={isOpen} toggle={toggle}>\n      <ModalHeader toggle={toggle} tag=\"h4\" className=\"text-capitalize\">\n        {t(`Create ${type} Account`)}\n      </ModalHeader>\n      <ModalBody className=\"px-4\">\n        <AvForm\n          onValidSubmit={(e, v) => {\n            handleValidSubmit(e, v);\n          }}\n        >\n          {platforms && <Row className=\"border rounded-3 p-3\">\n            <h5>{t(\"Platforms\")}</h5>\n            {platforms.map((platform) =>\n              <Col key={platform} md=\"6\" className=\"gy-3\">\n                <div className=\"custom-radio\"\n                  onClick={() => {\n                    setSelectedPlatform(platform);\n                    document.getElementById(platform).click();\n                  }}                     style={{\n                    border: 0,\n                  }}>\n                  <Input\n                    className=\"mt-0 me-2\"\n                    id={platform}\n                    name=\"platform\"\n                    type=\"radio\"\n                    value={platform}\n                  >\n                  </Input>\n                  <Label check for={platform}>\n                    {t(platform)}\n                  </Label>\n                </div>\n              </Col>)}\n          </Row>\n          }\n          {\n            selectedPlatform &&\n            <Row className=\"border rounded-3 p-3 my-1\">\n              <AvRadioGroup name=\"accountTypeId\" errorMessage={t(\"Account type is required\")} required className=\"radio-group\"  >\n                <Row className=\"radio-group\" >\n                  <h5>{t(\"Account Type\")}</h5>\n                  {platformAccountTypes.length > 0 && platformAccountTypes.map((type) =>\n                    <Col key={type._id} md=\"6\" className=\"gy-3 \" >\n                      <div className=\"custom-radio\"\n                        onClick={() => {\n                          setSAccountCurrency(type.currencies);\n                          setAccountLeverages(type.leverages);\n                          document.getElementById(`radio-accountTypeId-${type._id}`).click();\n                        }}  >\n                        <AvRadio label={t(type.title)} value={type._id} />\n                      </div>\n                    </Col>\n                  )}\n                </Row>\n              </AvRadioGroup>\n            </Row>}\n          {accountCurrency.length > 0 &&\n            <Row className=\"border rounded-3 p-3 my-1\">\n              <AvRadioGroup name=\"currency\" errorMessage={t(\"Currency is required\")} required className=\"radio-group\" >\n                <Row className=\"radio-group \" >\n                  <h5 className=\"mb-3\">{t(\"Account Currency\")}</h5>\n                  {accountCurrency.map((currency) =>\n                    <Col key={currency.currency} md=\"6\" className=\"gy-3\" >\n                      <div className=\"custom-radio\" \n                        onClick={() => {\n                          document.getElementById(`radio-currency-${currency.currency}`).click();\n                        }} >\n                        <AvRadio label={t(currency.currency)} value={currency.currency} />\n                      </div>\n                    </Col>\n                  )}\n                </Row>\n              </AvRadioGroup>\n            </Row>}\n          <Row className=\"border rounded-3 p-3 mt-3\">\n            <h5 className=\"mb-3\">{t(\"Select Leverage\")}</h5>\n            <AvField type=\"select\" name=\"leverage\" value={(accountLeverages && accountLeverages.length > 0) \n                                                              ? `${accountLeverages[0]}` \n                                                              : \"\"} required>\n              {accountLeverages?.map((leverage) =>\n                <option key={leverage} value={leverage}>{`1:${leverage}`}</option>\n              )}\n            </AvField>\n          </Row>\n          {/* {\n            !isApprovalRequired ? \n              <Row className=\"border rounded-3 p-3 mt-3\">\n                <Col md=\"6\">\n                  <AvGroup>\n                    <Label for=\"password\" className=\"mb-2\">{t(\"Trading Account Password\")}</Label>\n                    <AvField name=\"password\" type=\"password\" id=\"password\"\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Password is required\"\n                        },\n                        pattern: {\n                          errorMessage: \"Password must contain at least 1 Uppercase, 1 Lowercase, 1 Number and 1 Special Character\",\n                          value: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])\"\n                        },\n                        minLength: {\n                          value: 8,\n                          errorMessage: \"Password must be more than 8 characters\"\n                        },\n                      }} />\n                  </AvGroup>\n                </Col>\n                <Col md=\"6\">\n                  <AvGroup>\n                    <Label for=\"confirm_password\" className=\"mb-2\">{t(\"Confirm Password\")}</Label>\n                    <AvField name=\"confirm_password\" type=\"password\" id=\"confirm_password\"\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Password is required\"\n                        },\n                        custom: confirmPassword\n                      }}\n                    />\n                    <AvFeedback>{t(\"Password doesn't match\")}</AvFeedback>\n                  </AvGroup>\n                </Col>\n              </Row>\n              : null\n          } */}\n          {\n            isApprovalRequired ? \n              <Row className=\"border rounded-3 p-3 mt-3\">\n                <AvGroup>\n                  <Label for=\"reason\" className=\"mb-2\">{t(\"Reason for new Account\")}</Label>\n                  <AvField name=\"reason\" type=\"reason\" id=\"reason\"\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Reason is required\"\n                      },\n                      minLength: {\n                        value: 7,\n                        errorMessage: \"Reason must have at least 6 characters\"\n                      },\n                    }} />\n                </AvGroup>\n              </Row>\n              : null  \n          }\n          <div className=\"text-center mt-3 mb-1\">\n            <Button type=\"submit\" disabled={submitting} className=\"color-bg-btn border-0 text-white w-25\">{t(\"Submit\")}</Button>\n            <Button color=\"light\" type=\"button\" className=\"w-25 ms-3\"\n              onClick={() => dispatch(toggleCurrentModal(\"\"))}\n            >{t(\"Skip\")}</Button>\n          </div>\n        </AvForm>\n      </ModalBody>\n    </Modal >\n  );\n};\n\nexport default withTranslation()(CreateLiveAccModal);","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/TwoFactorAuth/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/IbNotApproved.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomSelect.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/captalize.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/Loader.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/TableLoader.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/PageHeader.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/pageHeader2.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/Accounts.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Referrals/AllAccountsModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Partnership/links.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/AvFieldSelect.js",["2056","2057"],"\nimport React, { useRef, useEffect } from \"react\";\nimport {\n  AvField\n} from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport CustomSelect from \"./CustomSelect\";\n\nfunction AvFieldSelecvt(props) {\n  const ref1 = useRef();\n  const [state, setState] = React.useState(null);\n  const onFieldChange = (e) => {\n    if (props.isMulti){\n      setState(e);\n    } else {\n      setState(e.value);\n      if (props.onChange) {\n        props.onChange(e.value);\n      }\n    }\n  };\n  // useEffect(() => {\n  //   if (props.value === undefined) {\n  //     ref1.current.state.value = undefined;\n  //   }\n  // }, [props.value]);\n  const { label, ...params } = props;\n  let options = props.options || [];\n  return (<React.Fragment>\n    <label>{label}</label>\n    <CustomSelect\n      ref={ref1}\n      placeholder={props.placeholder}\n      options={options} \n      onChange={onFieldChange}\n      isMulti={props.isMulti}\n      maxMenuHeight={props.maxHeight}\n    />\n    <AvField\n      {...params}\n      type=\"select\"\n      value={state === null ? props.value : state}\n      style={{\n        opacity: 0,\n        height: 0,\n        margin: -10,\n        \"pointerEvents\": \"none\",\n      }}\n    >\n      {options.map((obj, index) => {\n        return (<option key={index} value={obj.value}>{obj.label}</option>);\n      })}\n    </AvField>\n    \n\n  </React.Fragment>);\n}\n\nexport default AvFieldSelecvt;\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/languages.js",["2058","2059","2060","2061"],"import usFlag from \"../assets/images/flags/us.jpg\";\nimport spain from \"../assets/images/flags/spain.jpg\";\nimport germany from \"../assets/images/flags/germany.jpg\";\nimport italy from \"../assets/images/flags/italy.jpg\";\nimport russia from \"../assets/images/flags/russia.jpg\";\nimport uae from \"../assets/images/flags/uae.jpg\";\n\nconst languages = {\n  // sp: {\n  //   label: \"Spanish\",\n  //   flag: spain,\n  // },\n  // gr: {\n  //   label: \"German\",\n  //   flag: germany,\n  // },\n  // it: {\n  //   label: \"Italian\",\n  //   flag: italy,\n  // },\n  // rs: {\n  //   label: \"Russian\",\n  //   flag: russia,\n  // },\n  en: {\n    label: \"English\",\n    flag: usFlag,\n  },\n  ar: {\n    label: \"Arabic\",\n    flag: uae,\n  },\n};\n\nexport default languages;\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/klines.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/uploadPdf.js",["2062","2063"],"import { pdf } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport * as content from \"content\";\nimport store from \"../store/index.js\";\nimport PdfOfVisa from \"../components/Journey/Profiles/Applications/PdfOfVisa.js\";\n\nexport const getSecureLink = async (id, index) => {\n  try {\n    const { data } = await axios.get(\n      `${content.apiUrl}/api/v1/crm/documents/${id}/${index}`,\n      {\n        headers: {\n          Authorization: `Bearer ${\n            JSON.parse(localStorage.getItem(\"authUser\"))?.token\n          }`,\n        },\n      }\n    );\n    return data.result;\n  } catch (error) {\n    console.error(\"Error fetching secure link:\", error);\n    return null;\n  }\n};\n\nexport const uploadPDF = async () => {\n  try {\n    const state = store.store.getState(); // or just `store.getState()` depending on your setup\n    const clientData = state.Profile?.clientData || {};\n    const documents = state.documents?.documents || [];\n    const savedSignature = localStorage.getItem(\"savedSignature\") || \"\";\n    const selfiePhoto = localStorage.getItem(\"selfiePhoto\") || \"\";\n\n    const ipLinks = await Promise.all(\n      documents\n        .filter((doc) => doc.type === \"ID\")\n        .map((doc, i) => getSecureLink(doc._id, i + 1))\n    );\n\n    const addressLinks = await Promise.all(\n      documents\n        .filter((doc) => doc.type === \"ADDRESS\")\n        .map((doc, i) => getSecureLink(doc._id, i + 1))\n    );\n\n    const blob = await pdf(\n      <PdfOfVisa\n        clientData={clientData}\n        documents={documents}\n        ipLinks={ipLinks}\n        addressLinks={addressLinks}\n        selfiePhoto={selfiePhoto}\n        savedSignature={savedSignature}\n      />\n    ).toBlob();\n    const formData = new FormData();\n    formData.append(\"file\", blob, \"document.pdf\");\n    formData.append(\"clientId\", clientData._id);\n    const response = await axios.post(\n      `${content.apiUrl}/api/v1/cp/psp/checkout/uploadprofile`,\n      formData,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${\n            JSON.parse(localStorage.getItem(\"authUser\"))?.token\n          }`,\n        },\n      }\n    );\n    // localStorage.removeItem(\"selfiePhoto\");\n    // localStorage.removeItem(\"savedSignature\");\n\n    return response.data;\n  } catch (error) {\n    console.error(\"Error generating or uploading PDF:\", error);\n    throw error;\n  }\n};","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/validations/file.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/api_helper.js",["2064","2065"],"/* eslint-disable no-debugger */\nimport axios from \"axios\";\nimport { defaultPortal } from \"config\";\nimport * as url from \"./url_helper\";\n\nexport const setUser = (user) => {\n  localStorage.setItem(\"PORTAL\", user.defaultPortal || defaultPortal);\n  localStorage.setItem(\"authUser\", JSON.stringify(user));\n};\n\nconst getToken = () => {\n  try {\n    const authUser = JSON.parse(localStorage.getItem(\"authUser\"));\n    return authUser?.token || \"\";\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const redirectToLogin = function () {\n  return window.location.replace(url.LOGIN);\n\n};\n\n//apply base url for axios\nconst API_URL = `${process.env.REACT_APP_API_CP_DOMAIN}/api/v1/cp`;\n\nconst axiosApi = axios.create({\n  baseURL: API_URL,\n});\n\nconst setHeaderAuth = () => {\n  axiosApi.defaults.headers.common[\"Authorization\"] = `Bearer ${getToken()}`;\n};\n// axiosApi.interceptors.response.use(\n//   response => response,\n//   error => Promise.reject(error)\n// );\n\nconst apiErrorHandler = (errObj) => {\n  if (errObj.response && errObj.response.data) {\n    if (errObj.response.data.code === 401) {\n      localStorage.removeItem(\"authUser\");\n      redirectToLogin();\n    }\n    return errObj.response.data;\n  }\n  return errObj;\n};\n\nexport async function get(url, config = {}) {\n  setHeaderAuth();\n  const path = `${url}`;\n  return await axiosApi.get(path, { ...config }).then(response => response.data).catch(err => apiErrorHandler(err));\n}\n\nexport async function post(url, data, config = {}) {\n  console.log(\"Post body: \",  \n  {\n    url, \n    data\n   });\n  setHeaderAuth();\n  const path = `${url}`;\n  console.log({ path });\n  return axiosApi\n    .post(path, { ...data }, { ...config })\n    .then(response => {\n      return response.data;\n    }).catch(err => apiErrorHandler(err));\n}\n\nexport async function patch(url, data, config = {}) {\n  setHeaderAuth();\n  const path = `${url}`;\n  return axiosApi\n    .patch(path, { ...data }, { ...config })\n    .then(response => {\n      return response.data;\n    }).catch(err => apiErrorHandler(err));\n}\n\nexport async function put(url, data, config = {}) {\n  setHeaderAuth();\n  const path = `${url}`;\n  return axiosApi\n    .put(path, { ...data }, { ...config })\n    .then(response => response.data).catch(err => apiErrorHandler(err));\n}\n\nexport async function del(url, config = {}) {\n  setHeaderAuth();\n  const path = `${url}`;\n  return await axiosApi\n    .delete(path, { ...config })\n    .then(response => response.data).catch(err => apiErrorHandler(err));\n}\n\nexport async function loginApi(url, data, config = {}) {\n  setHeaderAuth();\n  const res = await post(url, data, config);\n  if (res && res.result && res.result.token) {\n    axiosApi.defaults.headers.common[\"Authorization\"] = `Bearer ${res.result.token}`;\n  }\n  return res;\n}\n\nexport async function postFormData(url, data) {\n  setHeaderAuth();\n  const path = `${url}`;\n  return axiosApi({\n    method: \"post\",\n    url: path,\n    data,\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  }).then(function (response) {\n    return response.data;\n  }).catch(err => apiErrorHandler(err));\n}\n\nexport const GetToken = getToken;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/SellTab.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/QuickBuy/BuyTab.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/AssetsListSelect.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/NetworksListSelect.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/datafeed.js",["2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080"],"import {\n\tnormalizedData\n} from \"./priceData\";\n\n// DatafeedConfiguration implementation\nconst configurationData = {\n\t// Represents the resolutions for bars supported by your datafeed\n\t// supported_resolutions: [\"1\", \"5\", \"15\", \"30\", \"1H\", \"1D\", \"1W\", \"1M\"],\n\tsupported_resolutions: [\"1\"],\n\t// The `exchanges` arguments are used for the `searchSymbols` method if a user selects the exchange\n\texchanges: [\n\t\t{\n\t\t\tvalue: \"Binance\",\n\t\t\tname: \"Binance\",\n\t\t\tdesc: \"Binance\"\n\t\t},\n\t\t{\n\t\t\tvalue: \"Bitfinex\",\n\t\t\tname: \"Bitfinex\",\n\t\t\tdesc: \"Bitfinex\"\n\t\t},\n\t\t{\n\t\t\tvalue: \"Kraken\",\n\t\t\tname: \"Kraken\",\n\t\t\tdesc: \"Kraken bitcoin exchange\"\n\t\t},\n\t\t{\n\t\t\tvalue: \"CME\",\n\t\t\tname: \"CME\",\n\t\t\tdesc: \"Chicago Merchentile Exchange\"\n\t\t},\n\t],\n\t// The `symbols_types` arguments are used for the `searchSymbols` method if a user selects this symbol type\n\tsymbols_types: [\n\t\t{\n\t\t\tname: \"crypto\",\n\t\t\tvalue: \"crypto\"\n\t\t},\n\t\t{\n\t\t\tname: \"fx\",\n\t\t\tvalue: \"fx\"\n\t\t},\n\t\t{\n\t\t\tname: \"cfd\",\n\t\t\tvalue: \"cfd\"\n\t\t},\n\t]\n};\nconst dummySymbols = [{\n\tsymbol: \"ETH/USDT\",\n\tfull_name: \"ETHER vs USDT\",\n\tdescription: \"\",\n\texchange: \"Binance\",\n\ttype: \"crypto\",\n\tpricescale: 100,\n\tminmov: 1,\n}, {\n\tsymbol: \"EUR/USD\",\n\tfull_name: \"EURO VS USD\",\n\tdescription: \"\",\n\texchange: \"CME\",\n\ttype: \"fx\"\n}, {\n\tsymbol: \"GBP/USD\",\n\tfull_name: \"GBP VS USD\",\n\tdescription: \"\",\n\texchange: \"CME\",\n\ttype: \"fx\"\n}, {\n\tsymbol: \"AUD/USD\",\n\tfull_name: \"AUD VS USD\",\n\tdescription: \"\",\n\texchange: \"CME\",\n\ttype: \"fx\"\n},\n\n];\nfunction onReady(callback) {\n\tconsole.log(\"[onReady]: Method call\");\n\tsetTimeout(() => callback(configurationData));\n}\nasync function searchSymbols(userInput, exchange, symbolType, onResultReadyCallback) {\n\tconsole.log(\"[searchSymbols]: Method call\");\n\t// const symbols = await getAllSymbols();\n\tconst symbols = dummySymbols;\n\tconst newSymbols = symbols.filter(symbol => {\n\t\tconst isExchangeValid = exchange === \"\" || symbol.exchange === exchange;\n\t\tconst isFullSymbolContainsInput = symbol.full_name\n\t\t\t.toLowerCase()\n\t\t\t.indexOf(userInput.toLowerCase()) !== -1;\n\t\treturn isExchangeValid && isFullSymbolContainsInput;\n\t});\n\tonResultReadyCallback(newSymbols);\n}\nasync function resolveSymbol(symbolName, onSymbolResolvedCallback, onResolveErrorCallback, extension) {\n\tconsole.log(\"[resolveSymbol]: Method call\", symbolName);\n\tconst symbols = dummySymbols;\n\tconst symbolItem = symbols.find(({ full_name, symbol }) => { return (symbolName === full_name || symbolName === symbol) });\n\tif (!symbolItem) {\n\t\tconsole.log(\"[resolveSymbol]: Cannot resolve symbol\", symbolName);\n\t\tonResolveErrorCallback(\"Cannot resolve symbol\");\n\t\treturn;\n\t}\n\t// Symbol information object\n\tconst symbolInfo = {\n\t\tticker: symbolItem.full_name,\n\t\tname: symbolItem.symbol,\n\t\tdescription: symbolItem.description,\n\t\ttype: symbolItem.type,\n\t\tsession: \"24x7\",\n\t\ttimezone: \"Etc/UTC\",\n\t\texchange: symbolItem.exchange,\n\t\tminmov: 1,\n\t\tpricescale: 100,\n\t\thas_intraday: true,\n\t\thas_no_volume: true,\n\t\thas_weekly_and_monthly: false,\n\t\tsupported_resolutions: configurationData.supported_resolutions,\n\t\tvolume_precision: 2,\n\t\t//data_status: \"streaming\",\n\t\tdata_status: \"historical\",\n\t};\n\tconsole.log(\"[resolveSymbol]: Symbol resolved\", symbolName);\n\tonSymbolResolvedCallback(symbolInfo);\n}\nasync function getBars(symbolInfo, resolution, periodParams, onHistoryCallback, onErrorCallback) {\n\tconst bars = normalizedData;\n\tconsole.log({ bars });\n\tconst { from, to, firstDataRequest } = periodParams;\n\tconsole.log(\"[getBars]: Method call\", symbolInfo, resolution, from, to);\n\ttry {\n\t\t//priceData;\n\t\tconsole.log(\"[getBars]: bars=> \", { bars });\n\t\tif (!bars) onHistoryCallback([], { noData: true });\n\t\telse {\n\t\t\tconsole.log(`[getBars]: returned ${bars.length} bar(s)`);\n\t\t\tonHistoryCallback(bars, { noData: false });\n\t\t}\n\n\t} catch (error) {\n\t\tconsole.log(\"[getBars]: Get error\", error);\n\t\tonErrorCallback(error);\n\t}\n}\nfunction subscribeBars(symbolInfo, resolution, onRealtimeCallback, subscriberUID, onResetCacheNeededCallback) {\n\tconsole.log(\"[subscribeBars]: Method call with subscriberUID:\", subscriberUID);\n}\nfunction unsubscribeBars(subscriberUID) {\n\tconsole.log(\"[unsubscribeBars]: Method call with subscriberUID:\", subscriberUID);\n}\nexport default ({\n\tonReady: onReady,\n\tsearchSymbols: searchSymbols,\n\tresolveSymbol: resolveSymbol,\n\tgetBars: getBars,\n\tsubscribeBars: subscribeBars,\n\tunsubscribeBars: unsubscribeBars\n});","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/WalletsListSelect.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Deposit/DepositTabs.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/StageTwo.js",["2081","2082","2083","2084","2085","2086","2087","2088"],"import { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport calculateFee from \"helpers/calculateFee\";\nimport { validateFile } from \"helpers/validations/file\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Button,\n  InputGroup,\n  InputGroupText,\n  Label\n} from \"reactstrap\";\nimport FiatFormDetails from \"./Fiat/FiatFormDetails\";\nimport Mt5Details from \"./MT5/Mt5Details\";\nimport { finiticPayFees } from \"config\";\nimport { getFiniticPayFeesConfig } from \"apis/deposit\";\n\nexport default function StageTwo(props) {\n  const {\n    t,\n    toggleTab,\n    type,\n    gateway,\n    handleSubmit,\n    receipt = false,\n    loading,\n    paymentPayload,\n    setLoading,\n    selectedPaymentMethod\n  } = props;\n\n  const [file, setFile] = useState({});\n  const [amount, setAmount] = useState();\n  const [amountValidation, setAmountValidation] = useState(false);\n  const [selectedWallet, setSelectedWallet] = useState(undefined);\n  const tranFeeGroupDetails = useSelector((state) => state.Profile?.clientData?.transactionFeeId);\n  const [transactionFee, setTransactionFee] = useState(0);\n  const [payeeAccount, setPayeeAccount] = useState();\n  const [notes, setNotes] = useState(\"\");\n  const [selectedAccount, setSelectedAccount] = useState([]);\n  const [minimumDepositAmount, setMinimumDepositAmount] = useState(10);\n  const [feesLoading, setFeesLoading] = useState(false);\n  const [fees, setFees] = useState({});\n\n  const amountValidationHandler = () => {\n    if (selectedAccount){\n      if (selectedAccount?.[0]?.currency === \"CENT\") {\n        setAmountValidation(false);\n      } else {\n        parseFloat(amount) < (selectedAccount?.[0]?.accountTypeId?.minDeposit ?? minimumDepositAmount) ? setAmountValidation(true) : setAmountValidation(false);\n      }\n    } else {\n      amount < minimumDepositAmount || !amount ? setAmountValidation(true) : setAmountValidation(false);\n    }\n  };\n\n  useEffect(()=>{\n    amountValidationHandler();\n  }, [selectedAccount]);\n\n  useEffect(() => {\n    if (gateway === \"FINITIC_PAY\") {\n      setFeesLoading(true);\n      getFiniticPayFeesConfig()\n        .then((resp) => resp.result)\n        .then((res) => setFees(res))\n        .finally(() => setFeesLoading(false));\n    }\n  }, [gateway]);\n\n  useEffect(() => {\n    if (amount > 0) {\n      if (gateway === \"FINITIC_PAY\") {\n        const { isPercentage, minDeposit, onChainfee, value, minValue } = fees;\n        if (isPercentage) {\n          const cFees = parseFloat((value * amount) / 100);\n          const feeAmount = cFees <= parseFloat(minValue) ? parseFloat(minValue) : cFees;\n          setTransactionFee(parseFloat(feeAmount).toFixed(2));\n          setMinimumDepositAmount(parseFloat(minDeposit));\n        } else {\n          setTransactionFee(parseFloat(onChainfee + minValue).toFixed(2));\n        }\n      } else {\n        setMinimumDepositAmount(10);\n        setTransactionFee(tranFeeGroupDetails ? calculateFee(tranFeeGroupDetails, amount) : 0);\n      }\n      amountValidationHandler();\n    } else {\n      setTransactionFee(0);\n    }\n  }, [tranFeeGroupDetails, amount, gateway]);\n\n  useEffect(() => {\n    if (gateway !== \"FINITIC_PAY\") {\n      setMinimumDepositAmount(10);\n    }\n  }, [gateway]);\n\n  const renderFormType = () => {\n    switch (type) {\n      case \"fiatDeposit\":\n        return <FiatFormDetails t={t}\n          selectedWallet={selectedWallet}\n          amount={amount}\n          setAmount={setAmount}\n          setPayeeAccount={setPayeeAccount}\n          setNotes={setNotes}\n          selectedPaymentMethod={selectedPaymentMethod}\n          setAmountValidation={setAmountValidation}\n          setSelectedWallet={setSelectedWallet}\n          minDepositAmount={minimumDepositAmount}\n        />;\n      case \"mt5Deposit\":\n        return <Mt5Details\n          t={t}\n          amount={amount}\n          setAmount={setAmount}\n          selectedPaymentMethod={selectedPaymentMethod}\n          amountValidation={amountValidation}\n          setPayeeAccount={setPayeeAccount}\n          setNotes={setNotes}\n          setAmountValidation={setAmountValidation}\n          selectedAccount={selectedAccount}\n          setSelectedAccount={setSelectedAccount}\n          minDepositAmount={minimumDepositAmount}\n        />;\n      default:\n        return <></>;\n    }\n  };\n\n\n  const handleOnValidSubmit = (e, v) => {\n    setLoading(true);\n    const formData = new FormData();\n    if (type === \"mt5Deposit\") {\n      console.log(\"Stage2- MT5Deposit\");\n      if (receipt) {\n        console.log(\"Stage2- if receipt true\");\n        formData.append(\"gateway\", gateway);\n        formData.append(\"amount\", parseFloat(amount));\n        // formData.append(\"note\", \"note\");\n        formData.append(\"tradingAccountId\", v.tradingAccountId);\n        formData.append(\"receipt\", file);\n        formData.append(\"paymentPayload\", paymentPayload);\n\n        if (selectedPaymentMethod === \"PERFECT_MONEY\") {\n          // formData.append(\"payeeAccount\", payeeAccount);\n          formData.append(\"note\", notes.toString());\n        }\n\n        handleSubmit(formData);\n      } else {\n        if (gateway === \"CRYPTO\") {\n          console.log(\"Stage2- CRYPTO\");\n          handleSubmit({\n            gateway,\n            paymentPayload,\n            amount: parseFloat(amount),\n            note: \"note\",\n            tradingAccountId: v.tradingAccountId,\n          });\n        }\n        if (gateway === \"حواله بنكيه\") {\n          console.log(\"Stage2- حواله بنكيه\");\n          handleSubmit({\n            gateway,\n            paymentPayload,\n            amount: parseFloat(amount),\n            note: \"note\",\n            tradingAccountId: v.tradingAccountId,\n          });\n        }\n      }\n    } else if (type === \"fiatDeposit\") {\n      if (receipt) {\n        formData.append(\"gateway\", gateway);\n        formData.append(\"amount\", parseFloat(amount));\n        // formData.append(\"note\", \"note\");\n        formData.append(\"walletId\", selectedWallet.value);\n        formData.append(\"receipt\", file);\n        formData.append(\"paymentPayload\", paymentPayload);\n        if (selectedPaymentMethod === \"PERFECT_MONEY\") {\n          // formData.append(\"payeeAccount\", payeeAccount);\n          formData.append(\"note\", notes.toString());\n        }\n        handleSubmit(formData);\n      } else {\n        handleSubmit({\n          gateway,\n          paymentPayload,\n          amount: parseFloat(amount),\n          note: \"note\",\n          walletId: selectedWallet.value,\n        });\n      }\n    }\n  };\n\n  return (\n    <AvForm\n      onValidSubmit={(e, v) => {\n        setLoading(true);\n        const formData = new FormData();\n        if (type === \"mt5Deposit\") {\n          if (receipt) {\n            formData.append(\"gateway\", gateway);\n            formData.append(\"amount\", parseFloat(amount));\n            formData.append(\"note\", \"note\");\n            formData.append(\"currency\", selectedAccount?.[0]?.currency);\n            formData.append(\"tradingAccountId\", v.tradingAccountId);\n            formData.append(\"receipt\", file);\n            formData.append(\"paymentPayload\", paymentPayload);\n            handleSubmit(formData);\n          } else {\n            if ([\"CRYPTO\", \"FINITIC_PAY\", \"EPAYME\", \"PAYMAXIS\"].includes(gateway)) {\n              handleSubmit({\n                gateway,\n                paymentPayload,\n                amount: parseFloat(amount),\n                note: \"note\",\n                tradingAccountId: v.tradingAccountId,\n              });\n            }\n          }\n        } else if (type === \"fiatDeposit\") {\n          if (receipt) {\n            formData.append(\"gateway\", gateway);\n            formData.append(\"amount\", parseFloat(amount));\n            formData.append(\"note\", \"note\");\n            formData.append(\"walletId\", selectedWallet.value);\n            formData.append(\"receipt\", file);\n            formData.append(\"paymentPayload\", paymentPayload);\n            handleSubmit(formData);\n          } else {\n            handleSubmit({\n              gateway,\n              paymentPayload,\n              amount: parseFloat(amount),\n              note: \"note\",\n              walletId: selectedWallet.value,\n            });\n          }\n        }\n      }}\n    >\n      <h6 className=\"mb-3\">{t(\"Enter Amount\")}</h6>\n      <div className=\"d-flex justify-content-between mb-2\">\n        {renderFormType()}\n      </div>\n      <div className=\"mb-3\">\n        <Label className=\"form-label mb-2\">{t(\"Transaction Fee\")}</Label>\n        <InputGroup className=\"\">\n          <InputGroupText className=\" w-100\">\n            {parseFloat(transactionFee ?? 0)}{\"   \"}{selectedWallet?.asset}\n          </InputGroupText>\n        </InputGroup>\n      </div>\n      {receipt && (\n        <div className=\"mb-3\">\n          <Label className=\"form-label\" htmlFor=\"receipt\">\n            {t(\"Receipt\")}\n          </Label>\n          <AvField\n            type=\"file\"\n            name=\"receipt\"\n            className=\"form-control form-control-md\"\n            errorMessage={t(\"Receipt is required\")}\n            onChange={(e) => {\n              setFile(e.target.files[0]);\n            }}\n            validate={{\n              required: { value: true },\n              validate: validateFile([\"jpg\", \"jpeg\", \"png\"], 1000000, file, {\n                sizeValidationMessage: t(\"The file size is too large\"),\n                extensionValidationMessage: t(\"The file extension is not allowed\"),\n              })\n            }}\n          />\n        </div>\n      )}\n      <div className=\"my-4 text-center\">\n        <Button\n          className=\"btn btn-primary m-2 btn-sm w-lg\"\n          onClick={() => toggleTab(0)}\n        >\n          {t(\"Back\")}\n        </Button>\n        <Button\n          className=\"btn btn-success m-2 btn-sm w-lg\"\n          type=\"submit\"\n          disabled={amountValidation || loading || !amount}\n        >\n          {t(\"Continue\")}\n        </Button>\n      </div>\n\n    </AvForm>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/Crypto.js",["2089"],"import React, { useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupText,\n  Label,\n  Row\n} from \"reactstrap\";\nimport Select from \"react-select\";\nimport config from \"config\";\nimport QRCode from \"qrcode.react\";\nimport FeatherIcon from \"feather-icons-react\";\nimport { useDispatch } from \"react-redux\";\nimport { showSuccessNotification } from \"store/actions\";\nimport { AvForm, AvInput } from \"availity-reactstrap-validation\";\n\nexport default function CompanyCrypto({ t, setIsFirstStepValid, setPaymentPayload }) {\n  const options = config.COMPANY_WALLETS.map((wallet) => {\n    return {\n      label: wallet.name,\n      value: wallet\n    };\n  });\n  const [coin, setCoin] = React.useState(null);\n  const [network, setNetwork] = React.useState(null);\n  const [walletAddress, setWalletAddress] = React.useState(null);\n  const [transactionHash, setTransactionHash] = React.useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      setCoin(null);\n      setNetwork(null);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (walletAddress && transactionHash) {\n      setIsFirstStepValid(true);\n      setPaymentPayload({\n        walletAddress,\n        transactionHash,\n        coin: coin.name,\n        network: network.name\n      });\n    } else {\n      setIsFirstStepValid(false);\n      setPaymentPayload({});\n    }\n  }, [walletAddress, transactionHash]);\n\n  return (\n    <>\n      <p className=\"text-muted\">{t(\"Note the following Details\")}</p>\n      <Row>\n        <Col md={12} className=\"my-3\">\n          <Label>{t(\"Coin\")}</Label>\n          <Select\n            name=\"coin\"\n            onChange={(e) => setCoin(e.value)}\n            required\n            placeholder=\"Select Coin\"\n            options={options}\n          >\n          </Select>\n        </Col>\n        {\n          coin && (\n            <Col md={12}>\n              <Label>{t(\"Network\")}</Label>\n              <Select\n                name=\"network\"\n                onChange={(e) => setNetwork(e.value)}\n                required\n                placeholder=\"Select Network\"\n                options={coin?.networks.map((network) => {\n                  return {\n                    label: network.name,\n                    value: network\n                  };\n                })}\n              >\n              </Select>\n            </Col>\n          )  \n        }\n        {\n          network && (\n            <>\n              <Col md={12} className=\"my-3\">\n                <InputGroup>\n                  <InputGroupText>\n                    Address\n                  </InputGroupText>\n                  <Input\n                    type=\"Address\"\n                    name=\"address\"\n                    value={network.address}\n                    disabled\n                  />\n                  <br />\n                  <div onClick={()=>{\n                    navigator.clipboard.writeText(network.address);\n                    dispatch(showSuccessNotification(\"Copied to clipboard\"));\n                  }} className=\"cursor-pointer d-flex justify-content-center align-items-center\" style={{\n                    padding: 10\n                  }}\n                  >\n                    <FeatherIcon icon=\"copy\" />\n                  </div>\n                </InputGroup>\n              </Col>\n              <Col md={12} >\n                <div className=\"my-3 d-flex justify-content-center\">\n                  <QRCode\n                    value={network.address}\n                    size={256}\n                    bgColor=\"#FFFFFF\"\n                    fgColor=\"#000000\"\n                    level=\"L\"\n                    includeMargin={false}\n                    renderAs=\"svg\"\n                  />\n                </div>\n                \n              </Col>\n            </>\n          )\n        }\n        {\n          network && (\n            <>\n              <AvForm>\n                <Col md={12} className=\"my-3\">\n                  <Label>{t(\"Your Wallet Address\")}</Label>\n                  <AvInput\n                    type=\"text\"\n                    name=\"walletAddress\"\n                    onChange={(e) => setWalletAddress(e.target.value)}\n                    label={t(\"Wallet Address\")}\n                    placeholder={t(\"Enter Wallet Address\")}\n                    required\n                  />\n                </Col>\n                <Col md={12} className=\"my-3\">\n                  <Label>{t(\"Transaction Hash\")}</Label>\n                  <AvInput\n                    type=\"text\"\n                    name=\"transactionHash\"\n                    onChange={(e) => setTransactionHash(e.target.value)}\n                    label={t(\"Transaction Hash\")}\n                    placeholder={t(\"Enter Transaction Hash\")}\n                    required\n                  />\n                </Col>\n              </AvForm>\n            </>\n          )\n        }\n      </Row>\n    </>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/EpaymeForm.js",["2090","2091","2092","2093"],"import { useEffect } from \"react\";\n\nfunction EpaymeForm({ result, setResult, setIsFirstStepValid }) {\n  function loadScript(scriptURL, callback) {\n    const script = document.createElement(\"script\");\n    script.src = scriptURL;\n    script.async = true;\n    script.onload = () => {\n      if (callback) {\n        callback();\n      }\n    };\n    document.body.appendChild(script);\n  }\n  let Epay = null;\n  const initiateEPaySDK = (url, callback) => {\n    loadScript(url, () => {\n      console.log(\"epay is ready\");\n      Epay = window.Epay;\n\n      if (callback) {\n        callback(Epay);\n      }\n    });\n  };\n  useEffect(()=>{\n    setIsFirstStepValid(true);\n  }, []);\n  return ( <></> );\n}\n\nexport default EpaymeForm;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/PerfectMoney.js",["2094","2095","2096","2097","2098","2099","2100","2101","2102"],"import { fetchCompanyBankAccounts } from \"apis/bankAccounts\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport React, { useEffect, useState } from \"react\";\nimport { Label } from \"reactstrap\";\nimport CustomSelect from \"components/Common/CustomSelect\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\n\nexport const payeeAccounts = [\n  {\n    currency: \"USD\",\n    name: \"U23447061\"\n  },\n];\n\nexport default function PerfectMoney(props) {\n  const {\n    // t,\n    setIsFirstStepValid\n  } = props;\n  // const [accountNumbers, setaccountNumbers] = useState([]);\n  // const [selectedAccNo, setSelectedAccNo] = useState();\n  // const [selectedCurrency, setSelectedCurrency] = useState();\n  // const [selectedPayeeName, setSelectedPayeeName] = useState();\n  // const [notes, setNotes] = useState();\n  // const [amount, setAmount] = useState();\n  // useEffect(() => {\n  //   if (selectedAccNo && selectedCurrency === \"USD\" && selectedPayeeName && notes && amount) {\n  //     setIsFirstStepValid(true);\n  //   } else {\n  //     setIsFirstStepValid(false);\n  //   }\n  // }, [selectedAccNo, selectedCurrency, selectedPayeeName, notes, amount]);\n  // const { fx: { liveAcc } } = useSelector((state) => state.Profile.clientData);\n\n  // useEffect(() => {\n  //   if (liveAcc) setaccountNumbers([...liveAcc]);\n  // }, [liveAcc]);\n\n  useEffect(() => {\n    setIsFirstStepValid(true);\n  }, []);\n\n  // useEffect(() => {\n  //   return () => {\n  //     setNotes(null);\n  //     setAmount(null);\n  //     setSelectedPayeeName(null);\n  //     setSelectedCurrency(null);\n  //     setSelectedAccNo(null);\n  //   };\n  // }, []);\n\n  return (\n    <div className=\"my-3\">\n      {/* <AvForm className=\"mt-4\" onValid={() => setIsFirstStepValid(true)}>\n        <h5 className=\"mb-4\">{t(\"Payment details\")}</h5>\n        <Row>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n              <Label>{t(\"Payee Account\")}</Label>\n              <CustomSelect\n                name=\"accountName\"\n                required\n                options={payeeAccounts?.map(({ name }) => {\n                  return {\n                    label: name,\n                    value: name\n                  };\n                })}\n                onChange={(e) => {\n                  setSelectedPayeeName(e.value);\n                }}\n              >\n              </CustomSelect>\n            </div>\n\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n              <Label>{t(\"Currency\")}</Label>\n              <CustomSelect\n                name=\"currency\"\n                required\n                options={payeeAccounts?.map(({ currency }) => {\n                  return {\n                    label: currency,\n                    value: currency\n                  };\n                })}\n                onChange={(e) => {\n                  setSelectedCurrency(e.value);\n                }}\n              >\n              </CustomSelect>\n            </div>\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n\n              <Label>{t(\"Account No\")}</Label>\n              <CustomSelect\n                options={accountNumbers?.map(acc => {\n                  return {\n                    label: acc,\n                    value: acc\n                  };\n                })}\n                name=\"accountNumber\"\n                required\n                onChange={(e) => {\n                  setSelectedAccNo(e.value);\n                }}\n              // disabled={true}\n              >\n              </CustomSelect>\n            </div>\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n\n              <Label>{t(\"Amount\")} (USD)</Label>\n              <AvField\n                type=\"number\"\n                name=\"amount\"\n                validate={{\n                  required: {\n                    value: true,\n                    errorMessage: \"Amount is required\"\n                  },\n                  min: {\n                    value: 1,\n                    errorMessage: \"Amount should be at least 1$\"\n                  }\n                }}\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n              // disabled={true}\n              >\n              </AvField>\n              <p className=\"text-danger fst-italic\">\n                {t(\"* We only accept Payments in USD\")}\n              </p>\n            </div>\n\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n              <Label>{t(\"Notes\")}</Label>\n              <AvField\n                type=\"text\"\n                name=\"notes\"\n                validate={{ required: true }}\n                onChange={(e) => {\n                  setNotes(e.target.value);\n                }}\n              // disabled={true}\n              >\n              </AvField>\n            </div>\n          </Col>\n        </Row>\n      </AvForm> */}\n    </div>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/OlxForex.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/A3tmad.js",["2103","2104","2105","2106","2107","2108","2109","2110"],"import { fetchCompanyBankAccounts } from \"apis/bankAccounts\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport React, { useEffect, useState } from \"react\";\nimport { Label } from \"reactstrap\";\n\nexport default function A3tmad(props) {\n  const {\n    t,\n    setIsFirstStepValid\n  } = props;\n  \n  const [a3tmadBox, setA3tmadBox] = useState(\"حواله بنكيه\");\n  // const a3tmadList = [\n  //   \"اندلس 1126 السلام\",\n  //   \"الراوي 735 السلام ترمانين\",\n  //   \"اللورد 720 السلام ترمانين\",\n  //   \"سبايدر 113 ترمانين\",\n  //   \"اليقين 199 السلام ترمانين\",\n  //   \"البركات 409 السلام ترمانين\"\n  // ];\n  const a3tmadList = [\n    \"حواله بنكيه\"\n  ];\n\n  useEffect(() => {\n    if (a3tmadBox) {\n      setIsFirstStepValid(true);\n    }\n  }, [a3tmadBox]);\n\n  // useEffect(() => {\n  //   setIsFirstStepValid(true);\n    \n  // }, []);\n\n  return (\n    <div className=\"my-3\">\n      {/* <Select\n        name=\"a3tmadBox\"\n        onChange={(e) => setA3tmadBox(e.value)}\n        required\n        placeholder=\"حواله بنكيه\"\n        options={a3tmadList.map((a3tmad) => {\n          return {\n            label: a3tmad,\n            value: a3tmad\n          };\n        })}\n      >\n      </Select> */}\n      {\n        // a3tmadBox && (\n        //   <AvForm className=\"mt-5\">\n        //     <h5 className=\"mb-4\">{t(\"Payment details\")}</h5>\n        //     <div>\n        //       <Label>{t(\"حواله بنكيه\")}</Label>\n        //       <AvField\n        //         type=\"text\"\n        //         name=\"a3tmadBox\"\n        //         value={a3tmadList[0]}\n        //         validate={{ required:true }}\n        //         disabled={true}\n        //       >\n        //       </AvField>\n        //     </div>\n        //   </AvForm>\n        // )\n      }\n    </div>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/handlers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/Others.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Applications/PdfOfVisa.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Partnership/Clients/Details/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomPagination.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/url_helper.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/countries.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/IndvidualProfile.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/data/jourenykeys.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Tradingview/priceData.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/MT5/Mt5Details.js",["2111","2112","2113"],"import React from \"react\";\nimport {\n  Alert, Input, InputGroup, Label\n} from \"reactstrap\";\nimport { default as AvFieldSelect } from \"components/Common/AvFieldSelect\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Loader from \"components/Common/Loader\";\nimport { payeeAccounts } from \"../Methods/PerfectMoney\";\nimport { AvField } from \"availity-reactstrap-validation\";\nimport { useEffect } from \"react\";\nimport { getAccountsStart } from \"store/actions\";\nexport default function Mt5Details(props) {\n  const dispatch = useDispatch();\n  const {\n    t,\n    amount,\n    setAmount,\n    amountValidation,\n    amountError,\n    selectedPaymentMethod,\n    setPayeeAccount,\n    setNotes,\n    setAmountValidation,\n    selectedAccount,\n    setSelectedAccount,\n    minDepositAmount\n  } = props;\n\n  const { accounts, loading } = useSelector((state) => state?.forex?.accounts);\n\n\n  useEffect(() => {\n    dispatch(\n      getAccountsStart({})\n    );\n  }, []);\n\n  const handleAccountChange = (event) => {\n    setSelectedAccount(accounts?.filter((acc) => acc._id === event));    \n  };\n\n\n  return (\n    <div className=\"w-100\">\n      {loading ? <Loader /> : accounts && (\n        <>\n          {selectedPaymentMethod === \"PERFECT_MONEY\" ?\n            (<div className=\"mt-3\">\n              <AvFieldSelect\n                name=\"payeeAccount\"\n                required\n                options={payeeAccounts?.map((acc) => {\n                  return {\n                    label: acc.name,\n                    value: acc\n                  };\n                })}\n                onChange={(e) => {\n                  setPayeeAccount(e);\n                }}\n                type=\"text\"\n                errorMessage={t(\"Payee account is required\")}\n                validate={{ required: { value: true } }}\n                label={t(\"Payee Account\")}\n              >\n              </AvFieldSelect>\n            </div>)\n            : null}\n          <div className=\"mt-3\">\n            <AvFieldSelect\n              options={\n                accounts?.map(acc => {\n                  return {\n                    label: `${acc.login} ${acc?.accountTypeId?.title || \"-\"} (${acc.balance || acc.Balance} ${acc.currency})`,\n                    value: acc._id\n                  };\n                })\n              }\n              name=\"tradingAccountId\"\n              type=\"text\"\n              onChange={handleAccountChange}\n              errorMessage={t(\"CTRADER account is required\")}\n              validate={{ required: { value: true } }}\n              label={t(\"CTRADER Account\")}\n            >\n            </AvFieldSelect>\n          </div>\n          {selectedPaymentMethod === \"PERFECT_MONEY\" ?\n            <div className=\"mt-3\">\n              <AvField\n                type=\"text\"\n                name=\"notes\"\n                validate={{ required: true }}\n                label={t(\"Notes\")}\n                // disabled={true}\n                onChange={(e) => {\n                  setNotes(e.target.value);\n                }}\n              >\n              </AvField>\n            </div>\n            : null}\n          {amountError && (\n            <p className=\"small text-danger \"> {t(\"Please Select Account\")}</p>\n          )}\n          {selectedAccount && (\n            <div className=\"mt-3\">\n\n              <Label htmlFor=\"example-date-input\" className=\"form-label\">\n                {props.t(`Amount (${selectedAccount[0]?.currency || \"USD\"})`)}\n              </Label>\n              <InputGroup>\n                <Input\n                  required\n                  onChange={(e) => {\n                    setAmount(e.target.value);\n                  }}\n                  className=\"form-control\"\n                  type=\"number\"\n                  min=\"0\"\n                  value={amount}\n                  placeholder=\"Enter 200-128341\"\n                  onKeyPress={(e) => {\n                    if (!/[0-9]/.test(e.key)) {\n                      e.preventDefault();\n                    }\n                  }}\n                />\n              </InputGroup>\n              {selectedAccount?.[0]?.currency === \"CENT\" && (\n                <div className=\"mt-3\">\n                  <Alert color=\"warning\">\n                    {t(\"Conversion rate will be applied.\")}\n                    {\" 1 CENT = 0.01 USD\"}\n                  </Alert>\n                </div>\n              )}\n              \n              {amountValidation && (\n                <p className=\"small text-danger \"> {selectedAccount?.[0]?.accountTypeId?.minDeposit ? <>{t(\"The minimum value for amount is \" + selectedAccount?.[0]?.accountTypeId?.minDeposit )}</> : <>{t(\"Please choose trading account first\")}</>}</p>\n              )}\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Fiat/FiatFormDetails.js",["2114","2115","2116"],"import CustomSelect from \"components/Common/CustomSelect\";\nimport Loader from \"components/Common/Loader\";\nimport { getAssetImgSrc } from \"helpers/assetImgSrc\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchWallets } from \"store/actions\";\nimport {\n  Input,\n  InputGroup,\n  InputGroupText\n} from \"reactstrap\";\nimport { payeeAccounts } from \"../Methods/PerfectMoney\";\nimport { AvField } from \"availity-reactstrap-validation\";\nimport { default as AvFieldSelect } from \"components/Common/AvFieldSelect\";\nimport { max } from \"lodash\";\n\nexport default function FiatFormDetails(props) {\n  const {\n    t,\n    selectedWallet,\n    amount,\n    setAmount,\n    setSelectedWallet,\n    setAmountValidation,\n    selectedPaymentMethod,\n    setPayeeAccount,\n    setNotes,\n    minDepositAmount\n  } = props;\n  const dispatch = useDispatch();\n  const [amountError, setAmountError] = useState(false);\n  const [minAmount, setMinAmount] = useState(10);\n\n  const { wallets, loading } = useSelector((state) => state?.walletReducer);\n\n  useEffect(() => {\n    if (amount < 10) {\n      setAmountError(true);\n      setAmountValidation(true);\n    } else {\n      setAmountError(false);\n      setAmountValidation(false);\n    }\n  }, [amount]);\n\n  // useEffect(() => {\n  //   const sWallet = wallets?.find((wallet) => wallet._id === selectedWallet?.value);\n  //   const minAmount = parseInt(sWallet?.assetId?.minAmount?.deposit) > minDepositAmount ? parseInt(sWallet?.assetId?.minAmount?.deposit) : minDepositAmount;\n  //   setMinAmount(minAmount);\n  // }, [selectedWallet]);\n\n  useEffect(() => {\n    if (wallets?.length > 0) {\n      setSelectedWallet({\n        label: wallets[0].asset,\n        value: wallets[0]._id,\n        image: getAssetImgSrc(wallets[0].assetId)\n      });\n      // const minAmount = parseInt(wallets[0].assetId?.minAmount?.deposit) > minDepositAmount ? parseInt(wallets[0].assetId?.minAmount?.deposit) : minDepositAmount;\n      // setMinAmount(minAmount);\n    }\n  }, [wallets]);\n\n  const loadWallets = () => {\n    dispatch(fetchWallets());\n  };\n\n  useEffect(() => {\n    if (!wallets || wallets?.length === 0) {\n      loadWallets({\n        isCrypto: false,\n        isInventory: false,\n      });\n    }\n  }, []);\n\n  const fiatWallets = wallets?.map((wallet) => {\n    return {\n      label: wallet.asset,\n      value: wallet._id,\n      image: getAssetImgSrc(wallet.assetId)\n    };\n  });\n\n  return (\n    <div className=\"w-100\">\n      {loading ? <Loader /> : (\n        <>\n          {t(\"Transaction requirements\")}\n          <i className=\"fas fa-info-circle ms-2\"></i>\n          <div className=\"mt-3\">\n            <InputGroup>\n              <Input\n                required\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n                className=\"form-control\"\n                type=\"number\"\n                min=\"0\"\n                value={amount}\n                placeholder={`Enter ${minAmount}-128341`}\n                onKeyPress={(e) => {\n                  if (!/[0-9]/.test(e.key)) {\n                    e.preventDefault();\n                  }\n                }}\n              />\n              <InputGroupText className=\"custom-input-group-text p-0 border-0\">\n                <div style={{\n                  width: \"127px\",\n                  height: \"100%\"\n                }}\n                >\n                  <CustomSelect\n                    placeholder=\"Select\"\n                    name=\"wallets\"\n                    isRequired\n                    options={fiatWallets}\n                    defaultValue={fiatWallets[0]}\n                    onChange={(e) => {\n                      setSelectedWallet(e);\n                    }}\n                  >\n                  </CustomSelect>\n                </div>\n              </InputGroupText>\n            </InputGroup>\n          </div>\n          {amountError && (\n            <p className=\"small text-danger \"> {\n              !amount ? t(\"Amount is required\") : t(\"Amount must be greater than \" + 10)\n            } </p>\n          )}\n          <div className=\"text-center fw-bolder mt-4 received-amount\">\n            <span className=\"fs-5\">{selectedWallet?.label}</span>\n            <span className=\"fs-1\">{amount}</span>\n          </div>\n\n          {selectedPaymentMethod === \"PERFECT_MONEY\" ?\n            (<div className=\"mt-3\">\n              <AvFieldSelect\n                name=\"payeeAccount\"\n                required\n                options={payeeAccounts?.map((acc) => {\n                  return {\n                    label: acc.name,\n                    value: acc\n                  };\n                })}\n                onChange={(e) => {\n                  setPayeeAccount(e);\n                }}\n                type=\"text\"\n                errorMessage={t(\"Payee account is required\")}\n                validate={{ required: { value: true } }}\n                label={t(\"Payee Account\")}\n              >\n              </AvFieldSelect>\n            </div>)\n            : null}\n\n          {selectedPaymentMethod === \"PERFECT_MONEY\" ?\n            <div className=\"mt-3\">\n              <AvField\n                type=\"text\"\n                name=\"notes\"\n                validate={{ required: true }}\n                label={t(\"Notes\")}\n                // disabled={true}\n                onChange={(e) => {\n                  setNotes(e.target.value);\n                }}\n              >\n              </AvField>\n            </div>\n            : null}\n        </>\n      )}\n    </div>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/deposit.js",["2117"],"import * as axiosHelper from \"./api_helper\";\n\nexport const getWallets = async () => {\n  const data = await axiosHelper.get(\"/wallets\");\n  if (data.isError) {\n    throw new Error(data.isError);\n  }\n  return data?.result;\n};\nexport const addDeposit = async (values) => {\n  // const { id, values } = payload;\n  const data = await axiosHelper.postFormData(\"transactions/deposit/\", values);\n  // if (data.isError) {\n  //   throw new Error(data.message);\n  // }\n  return data;\n};\nexport const addForexDeposit = async (values) => {\n  console.log(\"Forex deposit: \", { values });\n  const data = await axiosHelper.postFormData(\"fxtransactions/deposits\", values);\n  return data;\n};\n// export const fetchwallets = async () => {\n//     const data = await axiosHelper.get('wallets');\n//     return data.result;\n// }\n\nexport const paymentGatewayDeposit = async (values, paymentGateway) => {\n  let url = \"\";\n  switch (paymentGateway) {\n    case \"OLX_FOREX\":\n      url = \"psp/olxforex/pay\";\n      break;\n    case \"FINITIC_PAY\":\n      url = \"psp/finitic-pay/checkout\";\n      break;\n    case \"EPAYME\": \n      url = \"psp/epayme/pay\";\n      break;\n    case \"PAYMAXIS\":\n      url = \"psp/paymaxis/pay\";\n      break;  \n      case \"VISA_MASTER\":\n      url = \"psp/checkout/pay\";\n      break;\n  }\n  const data = await axiosHelper.post(url, values);\n  return data;\n};\n\nexport const getFiniticPayFeesConfig = async () => {\n  const data = await axiosHelper.get(\"/psp/finitic-pay/fees\");\n  return data;\n};\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/Declerations.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/AuthorizedPerson.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/Personnels.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Profiles/Corporate/GeneralInfo.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/declarations.js",["2118"],"import {\n  companyName,\n  privacyPolicyLink,\n  clientAgreementLink,\n  companyWebsite,\n} from \"./content\";\n\nexport const REGISTER = `By clicking here, I give my consent for ${companyName} to contact me for marketing purposes. You can opt out at any time. For further details, please see our Marketing and Communication Policy Statement. <a class=\"link-blue\" style=\"cursor: pointer; color: #E4B200;\" href=\"/${clientAgreementLink}\" download=\"GW_Client_Agreement.pdf\">Client Agreement</a>.`;\n\nexport const CLIENT_AGREEMENT = `You have read, understood, and agreed to ${companyName}'s <a class=\"link-blue\" href=${clientAgreementLink} download=\"GW_Client_Agreement.pdf\">client agreement</a>, which includes order execution policy, conflict of interest policy, privacy policy, 3rd party disclosure policy and any other terms in the client agreement.`;\n\nexport const IB_AGREEMENT = `You have read, understood, acknowledged, and agreed to all ${companyName}'s policies, terms & conditions and client agreements which are available on the company's <a href=${companyWebsite} target='_blank'>website</a>`;\n\nexport const COUNTRY_REGULATIONS = `You confirm that you do not breach any regulation of your country of residence in trading with ${companyName}.`;\n\nexport const E_SIGNATURE = \"Your electronic signature is considered a legal and official signature.\";\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/data/dropdowns.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/VisaMaster/CheckKYC.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/VisaMaster/SelfieCamera/SelfieCamera.js",["2119","2120"],"/* eslint-disable indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable semi */\n/* eslint-disable quotes */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport \"./SelfieCamera.css\";\nimport { Button } from \"reactstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport { fetchDocsStart } from \"store/general/documents/actions\";\n\nexport default function SelfieCamera({ onCapture, toggleTab, activeStep }) {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  const [photo, setPhoto] = useState(null);\n  const [facingMode, setFacingMode] = useState(\"user\");\n  const [hasPermission, setHasPermission] = useState(null);\n  const [error, setError] = useState(null);\n  const [saveStatus, setSaveStatus] = useState(\"\");\n\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    fetchDocsStart();\n\n    return () => {\n      stopCamera();\n    };\n  }, []);\n\n  // Start the camera\n  const startCamera = async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: facingMode,\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n        },\n        audio: false,\n      });\n\n      setStream(mediaStream);\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n      }\n      setHasPermission(true);\n      setError(null);\n    } catch (err) {\n      console.error(\"Error accessing camera:\", err);\n      setError(err.message || \"Could not access camera\");\n      setHasPermission(false);\n    }\n  };\n\n  // Stop the camera\n  const stopCamera = () => {\n    if (stream) {\n      stream.getTracks().forEach((track) => track.stop());\n      setStream(null);\n    }\n  };\n\n  // Toggle between front and rear camera\n  const toggleCamera = () => {\n    stopCamera();\n    setFacingMode((prev) => (prev === \"user\" ? \"environment\" : \"user\"));\n  };\n\n  // Take a photo\n  const takePhoto = () => {\n    if (!videoRef.current || !stream) return;\n\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    const photoDataUrl = canvas.toDataURL(\"image/jpeg\", 0.8);\n    photoDataUrl == \"data:,\" ? setPhoto(null) : setPhoto(photoDataUrl);\n\n    stopCamera();\n\n    if (onCapture) {\n      onCapture(photoDataUrl);\n    }\n  };\n\n  // Save photo to localStorage and proceed\n  const handleContinue = () => {\n    if (photo) {\n      console.log(\"Saving photo:\", photo);\n\n      try {\n        localStorage.setItem(\"selfiePhoto\", photo);\n        setSaveStatus(\"Photo saved successfully!\");\n        toggleTab(activeStep + 1);\n        stopCamera();\n      } catch (error) {\n        setSaveStatus(\"Error saving photo: \" + error.message);\n      }\n    } else {\n      setSaveStatus(\"Please take a photo first\");\n    }\n    toggleTab(activeStep + 1);\n  };\n\n  // Clean up camera on unmount\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, []);\n\n  // Start/stop camera when facingMode changes\n  useEffect(() => {\n    startCamera();\n    return () => stopCamera();\n  }, [facingMode]);\n\n  return (\n    <>\n      <div className=\"selfie-camera-container\">\n        <h2>Take a Selfie</h2>\n\n        {error && (\n          <div className=\"error-message\">\n            <p>{error}</p>\n            <p>Please ensure you've granted camera permissions.</p>\n          </div>\n        )}\n\n        <div className=\"camera-preview\">\n          {hasPermission && !photo ? (\n            <video\n              ref={videoRef}\n              autoPlay\n              playsInline\n              muted\n              className=\"video-element\"\n            />\n          ) : (\n            <div className=\"camera-placeholder\">\n              {photo ? (\n                <img\n                  src={photo}\n                  alt=\"Captured selfie\"\n                  className=\"captured-photo-preview\"\n                />\n              ) : (\n                <p>Camera not available</p>\n              )}\n            </div>\n          )}\n\n          <canvas ref={canvasRef} style={{ display: \"none\" }} />\n        </div>\n\n        <div className=\"camera-controls\">\n          <button\n            onClick={takePhoto}\n            className=\"capture-btn\"\n            disabled={!hasPermission}\n          >\n            Take Photo\n          </button>\n\n          <button\n            onClick={toggleCamera}\n            className=\"switch-camera-btn\"\n            disabled={!hasPermission}\n          >\n            {facingMode === \"user\"\n              ? \"Switch to Rear Camera\"\n              : \"Switch to Front Camera\"}\n          </button>\n        </div>\n\n        {saveStatus && (\n          <div\n            className={`save-status ${\n              saveStatus.includes(\"success\") ? \"success\" : \"error\"\n            }`}\n          >\n            {saveStatus}\n          </div>\n        )}\n      </div>\n      <div className=\"my-4 text-center\">\n        <Button\n          className=\"btn btn-primary m-2 btn-sm w-lg\"\n          onClick={() => {\n            toggleTab(activeStep - 1);\n            stopCamera();\n          }}\n        >\n          {t(\"Back\")}\n        </Button>\n        <Button\n          className=\"btn btn-success m-2 btn-sm w-lg\"\n          type=\"submit\"\n          onClick={handleContinue}\n          disabled={!photo || photo === \"data:,\"}\n        >\n          {t(\"Continue\")}\n        </Button>\n      </div>\n    </>\n  );\n}","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/WireTransfer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/allowedMethods.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/VisaMaster/Signature/Signature.js",["2121","2122","2123","2124"],"/* eslint-disable no-multiple-empty-lines */\n/* eslint-disable indent */\n/* eslint-disable object-curly-newline */\n/* eslint-disable semi */\n/* eslint-disable quotes */\nimport React, { useRef, useState, useEffect } from 'react';\nimport './Signature.css';\nimport { Button } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\n\nexport default function Signature({\n    activeStep,\n    toggleTab,\n}) {\n  const { t } = useTranslation();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [signatureData, setSignatureData] = useState(null);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(0.05); \n  const [saveStatus, setSaveStatus] = useState('');\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [privacyAccepted, setPrivacyAccepted] = useState(false);\n  const [isSignatureEnabled, setIsSignatureEnabled] = useState(false);\n\n  // Check if both checkboxes are checked to enable signature\n  useEffect(() => {\n    setIsSignatureEnabled(termsAccepted && privacyAccepted);\n    if (!termsAccepted || !privacyAccepted) {\n      clearSignature();\n    }\n  }, [termsAccepted, privacyAccepted]);\n\n  // Initialize canvas with smooth drawing settings\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    \n    // Set higher quality rendering\n    ctx.imageSmoothingEnabled = true;\n    ctx.imageSmoothingQuality = 'high';\n    \n    clearSignature();\n\n    // Load saved signature if exists\n    // const savedSignature = localStorage.getItem('savedSignature');\n    // if (savedSignature) {\n    //   setTermsAccepted(true);\n    //   setPrivacyAccepted(true);\n    //   const img = new Image();\n    //   img.onload = () => {\n    //     ctx.drawImage(img, 0, 0);\n    //     setSignatureData(savedSignature);\n    //     setIsCanvasEmpty(false);\n    //   };\n    //   img.src = savedSignature;\n    // }\n    console.log(\"this is normal use effect\");\n    \n  }, []);\n\n  const startDrawing = (e) => {\n    if (!isSignatureEnabled) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    \n    // Set smoother drawing properties\n    ctx.lineJoin = 'round';\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = brushSize;\n    \n    ctx.beginPath();\n    ctx.moveTo(\n      e.clientX - rect.left,\n      e.clientY - rect.top\n    );\n    setIsDrawing(true);\n    setIsCanvasEmpty(false);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing || !isSignatureEnabled) return;\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    \n    // Continue with smooth line\n    ctx.lineTo(\n      e.clientX - rect.left,\n      e.clientY - rect.top\n    );\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    if (isDrawing) {\n      const canvas = canvasRef.current;\n      const dataUrl = canvas.toDataURL();\n      setSignatureData(dataUrl);\n      setIsDrawing(false);\n      \n      // Check if canvas is empty\n      checkCanvasEmpty();\n    }\n  };\n\n  const checkCanvasEmpty = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const pixelBuffer = new Uint32Array(\n      ctx.getImageData(0, 0, canvas.width, canvas.height).data.buffer\n    );\n    const isEmpty = !pixelBuffer.some(color => color !== 0);\n    setIsCanvasEmpty(isEmpty);\n  };\n\n  const clearSignature = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setSignatureData(null);\n    setSaveStatus('');\n    setIsCanvasEmpty(true);\n  };\n\n  const saveSignature = () => {\n    if (!isCanvasEmpty && signatureData && isSignatureEnabled) {\n      try {\n        localStorage.setItem('savedSignature', signatureData);\n        setSaveStatus('Signature saved successfully!');\n        toggleTab(activeStep + 1);\n      } catch (error) {\n        setSaveStatus('Error saving signature: ' + error.message);\n      }\n    } else {\n      setSaveStatus('Please accept terms and create a signature');\n    }\n  };\n\n  const downloadSignature = () => {\n    if (!isCanvasEmpty && signatureData) {\n      const link = document.createElement('a');\n      link.href = signatureData;\n      link.download = `signature_${new Date().toISOString().slice(0, 10)}.png`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n<>\n    <div className=\"terms-checkboxes\">\n        <div className=\"checkbox-group\">\n          <input\n            type=\"checkbox\"\n            id=\"termsCheckbox\"\n            checked={termsAccepted}\n            onChange={(e) => setTermsAccepted(e.target.checked)}\n          />\n          <label htmlFor=\"termsCheckbox\">I accept the Terms and Conditions</label>\n        </div>\n        \n        <div className=\"checkbox-group\">\n          <input\n            type=\"checkbox\"\n            id=\"privacyCheckbox\"\n            checked={privacyAccepted}\n            onChange={(e) => setPrivacyAccepted(e.target.checked)}\n          />\n          <label htmlFor=\"privacyCheckbox\">I accept the Privacy Policy</label>\n        </div>\n      </div>\n\n    <div className=\"signature-container\">\n      <h2>Sign Below</h2>\n      \n      \n      \n      {/* <div className=\"signature-controls\">\n        <div className=\"color-picker\">\n          <label>Color : </label>\n          <input \n            type=\"color\" \n            value={color} \n            onChange={(e) => setColor(e.target.value)} \n          />\n        </div>\n      </div> */}\n      \n      <div className=\"signature-pad\">\n        <canvas\n          ref={canvasRef}\n          width={250}\n          height={75}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseLeave={stopDrawing}\n          onTouchStart={(e) => {\n            e.preventDefault();\n            startDrawing(e.touches[0]);\n          }}\n          onTouchMove={(e) => {\n            e.preventDefault();\n            draw(e.touches[0]);\n          }}\n          onTouchEnd={stopDrawing}\n          className={`signature-pad-canvas ${!isSignatureEnabled ? 'disabled' : ''}`}\n          style={{ cursor: isSignatureEnabled ? 'crosshair' : 'not-allowed' }}\n        />\n      </div>\n      \n      <div className=\"signature-actions\">\n        {/* <button onClick={() => toggleTab(0)} className=\"clear-btn\">\n          Back\n        </button> */}\n        <button onClick={clearSignature} className=\"clear-btn\">\n          Clear\n        </button>\n        {/* <button \n          onClick={saveSignature} \n          className=\"save-btn\"\n          disabled={isCanvasEmpty || !isSignatureEnabled}\n        >\n          Continue\n        </button> */}\n        {/* <button \n          onClick={downloadSignature} \n          className=\"download-btn\"\n          disabled={isCanvasEmpty || !isSignatureEnabled}\n        >\n          Download\n        </button> */}\n      </div>\n      \n      {saveStatus && (\n        <div className={`save-status ${saveStatus.includes('success') ? 'success' : 'error'}`}>\n          {saveStatus}\n        </div>\n      )}\n    </div>\n    <div className=\"my-4 text-center\">\n        <Button\n          className=\"btn btn-primary m-2 btn-sm w-lg\"\n          onClick={() => toggleTab(activeStep - 1)}\n        >\n          {t(\"Back\")}\n        </Button>\n        <Button\n          className=\"btn btn-success m-2 btn-sm w-lg\"\n          type=\"submit\"\n          onClick={saveSignature}\n          disabled={isCanvasEmpty || !isSignatureEnabled}\n        >\n          {t(\"Continue\")}\n        </Button>\n      </div>\n    </>\n  );\n}","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebTrader/WebTrader.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/WebTrader/Disclamer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Statement/ListDeals.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Statement/Filteration.js",["2125"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Button, Col, Row, Table\n} from \"reactstrap\";\nimport AvFieldSelect from \"components/Common/AvFieldSelect\";\nimport moment from \"moment\";\nimport { fetchStatement } from \"store/actions\";\nimport Loader from \"components/Common/Loader\";\nimport CustomPagination from \"components/Common/CustomPagination\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { Thead } from \"react-super-responsive-table\";\n\nconst platformOptions = [{\n  label: \"CTRADER\",\n  value: \"CTRADER\",\n}];\n// , {\n//   label: \"MT5\",\n//   value: \"MT5\",\n// }, {\n//   label: \"MT4\",\n//   value: \"MT4\",\n// }];\n\n\nconst Filteration = ({ onLoginSelect }) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const { statement, loading } = useSelector(state => state.forex.ib.agreements);\n\n\n  const [sizePerPage, setSizePerPage] = useState(10);\n  const [dateFrom, setDateFrom] = useState(String(moment().subtract(30, \"days\").format(\"YYYY-MM-DD\")));\n  const [dateTo, setDateTo] = useState(String(moment().add(1, \"day\").format(\"YYYY-MM-DD\")));\n  const [platform, setPlatform] = useState(platformOptions[0].value);\n\n  const handleDateFrom = (e) => setDateFrom(e.target.value);\n  const handleDateTo = (e) => setDateTo(e.target.value);\n\n  const loadStatement = (page = 1, limit = 10, platform) => {\n    dispatch(fetchStatement({\n      limit,\n      page,\n      // setting it to MT5 for now,\n      // just remove the assignment to platform when MT4 is ready\n      platform: \"CTRADER\",\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n    }));\n  };\n\n  useEffect(() => {\n    loadStatement(1, sizePerPage, platform);\n  }, [sizePerPage]);\n\n  return (\n    <CardWrapper className=\"mt-3 px-5 py-4 pb-2 glass-card shadow\">\n      <MetaTags>\n        <title>{t(\"Statement\")}</title>\n      </MetaTags>\n      <AvForm onValidSubmit={() => loadStatement(1, sizePerPage, platform)}>\n        <Row className=\"mt-3 justify-content-between align-items-end\">\n          <Col xs=\"12\" md=\"3\" lg=\"3\">\n            <AvFieldSelect\n              className=\"mt-1 form-select\"\n              name=\"platform\"\n              label={t(\"Platform\")}\n              errorMessage={t(\"Platform is required\")}\n              validate={{ required: { value: true } }}\n              onChange={(e) => setPlatform(e)}\n              value={platform}\n              options={platformOptions.map((obj) => {\n                return ({\n                  label: obj.label,\n                  value: obj.value,\n                });\n              })}\n            />\n          </Col>\n          <Col xs=\"12\" md=\"3\" lg=\"3\">\n            <AvField\n              className=\"mt-1 mb-2\"\n              type=\"date\"\n              name=\"dateFrom\"\n              label={t(\"From Date\")}\n              value={dateFrom}\n              validate={{ date: { format: \"YYYY-MM-DD\" } }}\n              onChange={handleDateFrom}\n            />\n          </Col>\n          <Col xs=\"12\" md=\"3\" lg=\"3\">\n            <AvField\n              className=\"mt-1 mb-2\"\n              type=\"date\"\n              name=\"dateTo\"\n              label={t(\"To Date\")}\n              validate={{ date: { format: \"YYYY-MM-DD\" } }}\n              value={dateTo}\n              onChange={handleDateTo}\n            />\n          </Col>\n          <Col>\n            <Button\n              className=\"btn-light color-bg-btn border-0 shadow mb-md-2 mt-3 mt-lg-0 w-100 text-white text-uppercase\"\n              loading={true}\n            >\n              {t(\"search\")}\n            </Button>\n          </Col>\n        </Row>\n      </AvForm>\n      <hr className=\"my-4\" />\n      <div className=\"mt-4 border rounded-3\">\n        <Table borderless responsive hover className=\"text-center mb-0\">\n          <Thead className=\"table-light\">\n            <tr>\n              <th>{t(\"Client Login\")}</th>\n              <th>{t(\"Lots Opened\")}</th>\n              <th>{t(\"Commission\")}</th>\n              <th>{t(\"Lots Closed\")}</th>\n              <th>{t(\"Rebate\")}</th>\n            </tr>\n          </Thead>\n          <tbody>\n            {loading ?\n              <tr>\n                <td colSpan=\"5\" className=\"text-center\"><Loader /></td>\n              </tr>\n              : statement?.docs?.map((statement, index) =>\n                <tr key={index} className=\"border-top\"\n                  onClick={() => onLoginSelect(statement.clientLogin)}>\n                  <td>{statement.clientLogin}</td>\n                  <td>{statement.lotsOpened }</td>\n                  <td>{statement.commission}</td>\n                  <td>{statement.lotsClosed }</td>\n                  <td>{statement.rebate}</td>\n                </tr>\n              )\n            }\n          </tbody>\n        </Table>\n      </div>\n      <div className=\"mt-4\">\n        <CustomPagination\n          {...statement}\n          setSizePerPage={setSizePerPage}\n          sizePerPage={sizePerPage}\n          onChange={loadStatement}\n        />\n      </div>\n    </CardWrapper>\n  );\n};\n\nexport default Filteration;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/PreviewPDF.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/generatePDF.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Platforms/Platform.js",["2126"],"import { Col } from \"reactstrap\";\nimport { withTranslation } from \"react-i18next\";\nimport CardWrapper from \"components/Common/CardWrapper\";\n\nconst Platform = ({ t, image, logo, title, subTitle, isLocalImg, onDownload, style, isMobile }) => {\n  return (\n    <Col xs=\"12\" md=\"6\" lg=\"3\" onClick={onDownload} style={style}>\n      <CardWrapper\n        className=\"pt-0 px-0 shadow\"\n        style={{\n          cursor: \"pointer\",\n          overflow: \"hidden\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\"\n        }}\n      >\n        <div className=\"text-center\">\n          <img\n            src={isLocalImg ? `/img/platforms/${image}.png` : image}\n            alt={title}\n            style={{ \n              width: `${isMobile ? \"50%\" : \"100%\"}`, \n              height: \"100%\", \n              objectFit: \"cover\",\n            }}\n          />\n        </div>\n        <div className=\"text-center\">\n          <div className=\"r text-center ms-3\">\n            <h6 className=\"lh-sm\">{t(title)}</h6>\n            <small className=\"text-muted\">{t(subTitle)}</small>\n          </div>\n        </div>\n      </CardWrapper>\n    </Col>\n  );\n};\n\nexport default withTranslation()(Platform);","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/CryptoForm.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/WireTransferForm.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Deposit/WireTransfer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Reports/FxReport.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Reports/WalletReport.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/Transfers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/OpenPosition.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Accounts/ClosedPositions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Notifications/NotificationSettings.js",["2127","2128"],"import CardWrapper from \"components/Common/CardWrapper\";\nimport Loader from \"components/Common/Loader\";\nimport _ from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MetaTags } from \"react-meta-tags\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Col,\n  Row,\n  Input,\n  Label,\n  Container,\n  Button,\n} from \"reactstrap\";\nimport { updateProfileSettings } from \"store/actions\";\n\nfunction NotificationSettings() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [isCheckAllNotifications, setIsCheckAllNotifications] = useState(false);\n  const [isCheckNotifications, setIsCheckNotifications] = useState([]);\n\n  const {\n    clientData,\n    settingsLoading,\n  } = useSelector(\n    (state) => ({\n      clientData: state.Profile.clientData,\n      settingsLoading: state.Profile.settingsLoading,\n    })\n  );\n  const allNotifications = [];\n\n  clientData?.settings?.pushNotifications && clientData?.settings?.pushNotifications.map((notifKey, notifIndex) => {\n    if (clientData?.settings?.pushNotifications[notifIndex].enabled) {\n      allNotifications.push(`settings.pushNotifications.${notifIndex}.enabled`);\n    }\n    clientData?.settings?.pushNotifications[notifIndex] && notifKey.actions.map((actionKey, actionIndex) => {\n      if (clientData?.settings?.pushNotifications[notifIndex].actions[actionIndex].enabled) {\n        allNotifications.push({ name: `settings.pushNotifications.${notifIndex}.actions.${actionIndex}.enabled` });\n      }\n    });\n  });\n\n  useEffect(() => {\n    const checkedNotifs = [];\n    clientData?.settings?.pushNotifications && clientData?.settings?.pushNotifications.map((notifKey, notifIndex) => {\n      if (clientData?.settings?.pushNotifications[notifIndex].enabled) {\n        checkedNotifs.push(`settings.pushNotifications.${notifIndex}.enabled`);\n      }\n      clientData?.settings?.pushNotifications[notifIndex] && notifKey.actions.map((actionKey, actionIndex) => {\n        if (clientData?.settings?.pushNotifications[notifIndex].actions[actionIndex].enabled) {\n          checkedNotifs.push(`settings.pushNotifications.${notifIndex}.actions.${actionIndex}.enabled`);\n        }\n      });\n    });\n    setIsCheckNotifications([...checkedNotifs]);\n  }, [clientData?.settings?.pushNotifications]);\n\n  const handleNotificationClick = e => {\n    const { name, checked } = e.target;\n    let name2 = \"\";\n    let x = name.split(\".\");\n    if (x.length > 3 && checked) {\n      name2 = `${x[0]}.${x[1]}.enabled`;\n    }\n    setIsCheckNotifications([...isCheckNotifications, name, name2]);\n    if (!checked) {\n      setIsCheckNotifications(isCheckNotifications.filter(item => item !== name));\n      if (name2 !== \"\") {\n        setIsCheckNotifications(isCheckNotifications.filter(item => item !== name2));\n      }\n    }\n  };\n\n  const handlePushNotificationUpdate = () => {\n    let values = {};\n    // assigning checked and unchecked check boxes before submitting\n    clientData?.settings?.pushNotifications && clientData?.settings?.pushNotifications.map((notifKey, notifIndex) => {\n      if (isCheckNotifications.includes(`settings.pushNotifications.${notifIndex}.enabled`)) {\n        clientData.settings.pushNotifications[notifIndex].enabled = true;\n      } else {\n        clientData.settings.pushNotifications[notifIndex].enabled = false;\n      }\n      clientData?.settings?.pushNotifications[notifIndex] && notifKey.actions.map((actionKey, actionIndex) => {\n        if (isCheckNotifications.includes(`settings.pushNotifications.${notifIndex}.actions.${actionIndex}.enabled`)) {\n          clientData.settings.pushNotifications[notifIndex].actions[actionIndex].enabled = true;\n        } else {\n          clientData.settings.pushNotifications[notifIndex].actions[actionIndex].enabled = false;\n        }\n      });\n    });\n    values.settings = {\n      pushNotifications: [\n        ...clientData.settings.pushNotifications\n      ]\n    };\n    dispatch(updateProfileSettings(values));\n  };\n\n  return (\n    <React.Fragment>\n      <MetaTags>\n        <title>\n          {t(\"Notification Settings\")}\n        </title>\n      </MetaTags>\n      <div>\n        <CardWrapper className=\"p-4 glass-card shadow\">\n          {/* <Row>\n            <Col className=\"d-flex justify-content-between\">\n              <h3 className=\"color-primary\">{t(\"Settings\")}</h3>\n            </Col>\n          </Row> */}\n          <div className=\"border rounded-3 mt-4\">\n            {(!clientData || !clientData?.settings?.pushNotifications) && (\n              <div className=\"text-center p-4\">\n                <h4 className=\"color-primary\">\n                  {t(\"No notification settings configured, please contact admin.\")}\n                </h4>\n              </div>\n            )}\n            {\n              clientData?.settings?.pushNotifications && clientData?.settings?.pushNotifications.map((notifKey, notifIndex) => (\n                <Container key={notifIndex} className=\"p-4\">\n                  <Row>\n                    <Col lg={3}>\n                      <span className=\"font-size-18 mb-3 me-4\">{_.startCase(notifKey.key)}</span>\n                    </Col>\n                    <Col lg={2}>\n                      <Input\n                        type=\"checkbox\"\n                        id={`settings.pushNotifications.${notifIndex}.enabled`}\n                        name={`settings.pushNotifications.${notifIndex}.enabled`}\n                        switch=\"none\"\n                        onChange={handleNotificationClick}\n                        checked={isCheckNotifications.includes(`settings.pushNotifications.${notifIndex}.enabled`)}\n                      />\n                      <Label\n                        className=\"me-1\"\n                        htmlFor={`settings.pushNotifications.${notifIndex}.enabled`}\n                        data-on-label=\"On\"\n                        data-off-label=\"Off\">\n                      </Label>\n                    </Col>\n                  </Row>\n                  {clientData?.settings?.pushNotifications[notifIndex] && notifKey.actions.map((notificationAction, notificationActionInd) =>\n                    <Row className=\"m-2\" key={notificationActionInd}>\n                      <Col lg={4}>\n                        <span className=\"font-size-14 mb-3 me-4\">{_.startCase(notificationAction.action.toLowerCase())}</span>\n                      </Col>\n                      <Col lg={2}>\n                        <Input\n                          type=\"checkbox\"\n                          name={`settings.pushNotifications.${notifIndex}.actions.${notificationActionInd}.enabled`}\n                          id={`settings.pushNotifications.${notifIndex}.actions.${notificationActionInd}.enabled`}\n                          switch=\"none\"\n                          onChange={handleNotificationClick}\n                          checked={isCheckNotifications.includes(`settings.pushNotifications.${notifIndex}.actions.${notificationActionInd}.enabled`)}\n                        />\n                        <Label\n                          className=\"me-1\"\n                          htmlFor={`settings.pushNotifications.${notifIndex}.actions.${notificationActionInd}.enabled`}\n                          data-on-label=\"On\"\n                          data-off-label=\"Off\">\n                        </Label>\n                      </Col>\n                    </Row>\n                  )}\n                </Container>\n              ))\n            }\n          </div>\n          <Button type=\"button\" onClick={(e) => {\n            e.preventDefault();\n            handlePushNotificationUpdate();\n            return false;\n          }} className=\"border-0 color-bg-btn w-100 mt-2\">\n            {settingsLoading && <Loader />}\n            {!settingsLoading && t(\"Update Push Notification Settings\")}\n          </Button>\n        </CardWrapper>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NotificationSettings;","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Notifications/NotificationList.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/ProfileDetails.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/getLogMessages.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/journey.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/socket/events.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/Journey.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/CardHeader.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/forexSidebar.js",["2129","2130","2131","2132"],"import { CUSTOMER_SUB_PORTALS } from \"common/constants\";\nimport dashboardSvg from \"./icons/dashboardSvg\";\nimport dotSvg from \"./icons/dotSvg\";\nimport accountSvg from \"./icons/accountSvg\";\nimport walletSvg from \"./icons/walletSvg\";\nimport moneyBagSvg from \"./icons/moneyBagSvg\";\nimport depositSvg from \"./icons/depositSvg\";\nimport withdrawSvg from \"./icons/withdrawSvg\";\nimport transferSvg from \"./icons/transferSvg\";\nimport platformSvg from \"./icons/platformSvg\";\nimport webTraderSvg from \"./icons/webTraderSvg\";\nimport partnershipSvg from \"./icons/partnershipSvg\";\nimport reportSvg from \"./icons/reportSvg\";\nimport affiliateSvg from \"./icons/affiliateSvg\";\nimport profileSvg from \"./icons/profileSvg\";\nimport ibTransferSvg from \"./icons/ibTransferSvg\";\nimport documentSvg from \"./icons/documentSvg\";\nimport inventorySvg from \"./icons/inventorySvg\";\nimport historySvg from \"./icons/historySvg\";\nimport masterSvg from \"./icons/masterSvg\";\nimport investorSvg from \"./icons/investorSvg\";\nimport calenderSvg from \"./icons/calenderSvg\";\nimport tradingSvg from \"./icons/tradingSvg\";\nimport feedSvg from \"./icons/feedSvg\";\n\nconst lightFill = \"#E4B200\";\nconst darkFill = \"#F89622\";\n\nexport default (portal, subPortal, profile, ibAllowtranscation = false, {\n  partnershipStatus,\n}, layoutMode) => {\n  let menu = [\n    {\n      title: \"Dashboard\",\n      icon: dashboardSvg({\n        color: layoutMode === \"dark\" ? darkFill : lightFill,\n        fill: layoutMode === \"dark\" ? \"#0A172D\" : \"#fff\",\n      }),\n      link: \"/dashboard\",\n    }\n  ];\n  switch (portal) {\n    case \"FOREX\":\n      switch (subPortal) {\n        case CUSTOMER_SUB_PORTALS.LIVE:\n          // Doing this way because permissions based menu\n          if (profile?.fx?.isClient) {\n            // Account details\n            menu.push(\n              {\n                title: \"Accounts\",\n                icon: accountSvg({\n                  fill: layoutMode === \"dark\" ? darkFill : lightFill,\n                  height: 25,\n                }),\n                link: \"#\",\n                hasSubMenu: true,\n                subMenu: [\n                  {\n                    title: \"Live Accounts\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/accounts/live\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"Demo Accounts\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/accounts/demo\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  // {\n                  //   title: \"Change Password\",\n                  //   icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                  //   link: \"/accounts/password\",\n                  //   hasSubMenu: false,\n                  //   subMenu: [],\n                  // },\n                ],\n              }\n            );\n            menu.push(\n              {\n                title: \"Wallets\",\n                icon: walletSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/wallet\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Deposit\",\n                icon: moneyBagSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"selectDepositMethodModal\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Withdraw\",\n                icon: withdrawSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"selectWithdrawalMethodModal\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Internal Transfer\",\n                icon: transferSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"Transfer\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Platforms\",\n                icon: platformSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/platforms\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              // {\n              //   title: \"Web Trader\",\n              //   icon: webTraderSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              //   link: \"https://app.ztforex.com/\",\n              //   hasSubMenu: false,\n              //   subMenu: [],\n              // },\n            );\n          }\n          if (!profile?.fx?.isIb) {\n            menu.push({\n              title: \"Partnership\",\n              icon: partnershipSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/request-partnership\",\n              hasSubMenu: false,\n              subMenu: [],\n            }\n            );\n          }\n          break;\n        case CUSTOMER_SUB_PORTALS.IB:\n          if (profile?.fx?.isIb) {\n            menu.push(\n              {\n                title: \"Wallets\",\n                icon: walletSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/wallet\",\n                hasSubMenu: false,\n                subMenu: [],\n              },              \n              {\n                title: \"Partnership\",\n                icon: partnershipSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: null,\n                hasSubMenu: true,\n                subMenu: [\n                  {\n                    title: \"My Live Clients\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/ib/clients/live\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"My Demo Clients\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/ib/clients/demo\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"Partnership\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/partnership\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"Referrals\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/referrals\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"Statement\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/statement\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                ],\n              },\n              {\n                title: \"Withdraw\",\n                icon: depositSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/withdraw\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Internal Transfer\",\n                icon: ibTransferSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/ib/transfer\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n            );\n          }\n          if (profile?.fx?.liveAcc?.length === 0) {\n            menu.push({\n              title: \"Trading Account\",\n              icon: platformSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/trading-account\",\n              hasSubMenu: false,\n              subMenu: [],\n            });\n          }\n          break;\n        case CUSTOMER_SUB_PORTALS.INVESTOR:\n          if (profile?.fx?.isInvestor) {\n            menu.push(\n              {\n                title: \"Investor\",\n                icon: masterSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"#\",\n                hasSubMenu: true,\n                subMenu: [\n                  {\n                    title: \"Accounts\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/investor-accounts\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  // {\n                  //   title: \"Transaction\",\n                  //   icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                  //   link: \"/transaction\",\n                  //   hasSubMenu: false,\n                  //   subMenu: [],\n                  // },\n                ],\n              },\n              {\n                title: \"Leaderboard\",\n                icon: masterSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/master-traders\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Wallets\",\n                icon: walletSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/wallet\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Deposit\",\n                icon: moneyBagSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"selectDepositMethodModal\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Withdraw\",\n                icon: withdrawSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"selectWithdrawalMethodModal\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Internal Transfer\",\n                icon: transferSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"Transfer\",\n                hasSubMenu: false,\n                subMenu: [],\n              }\n            );\n          }\n          if (!profile?.fx?.isSp) {\n            menu.push({\n              title: \"Request Master\",\n              icon: investorSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/request-master\",\n              hasSubMenu: false,\n              subMenu: [],\n            });\n          }\n          if (profile?.fx?.liveAcc?.length === 0) {\n            menu.push({\n              title: \"Trading Account\",\n              icon: platformSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/trading-account\",\n              hasSubMenu: false,\n              subMenu: [],\n            });\n          }\n          break;\n        case CUSTOMER_SUB_PORTALS.SP:\n          if (profile?.fx?.isSp) {\n            menu.push(\n              {\n                title: \"Signal Provider\",\n                icon: masterSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"#\",\n                hasSubMenu: true,\n                subMenu: [\n                  {\n                    title: \"Accounts\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/signal-provider-accounts\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"Allocation Profile\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/signal-provider-allocation\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"Investor Transaction\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/signal-provider-transaction\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                  {\n                    title: \"My Dedicated Links\",\n                    icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                    link: \"/signal-provider-dedicated-links\",\n                    hasSubMenu: false,\n                    subMenu: [],\n                  },\n                ],\n              },\n              {\n                title: \"Wallets\",\n                icon: walletSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/wallet\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Deposit\",\n                icon: moneyBagSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"selectDepositMethodModal\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Withdraw\",\n                icon: withdrawSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"selectWithdrawalMethodModal\",\n                hasSubMenu: false,\n                subMenu: [],\n              },\n              {\n                title: \"Internal Transfer\",\n                icon: transferSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                onClick: \"Transfer\",\n                hasSubMenu: false,\n                subMenu: [],\n              }\n            );\n          }\n          break;\n        default:\n      }\n      menu.push(\n        {\n          title: \"Reports\",\n          icon: reportSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/reports\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n        \n        // {\n        //   title: \"Affiliate\",\n        //   icon: affiliateSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n        //   link: \"/affiliate\",\n        //   hasSubMenu: false,\n        //   subMenu: [],\n        // },\n        {\n          title: \"Web Calender\",\n          icon: calenderSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/web-calender\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n        {\n          title: \"Trading Opportunities\",\n          icon: tradingSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/trading-opportunities\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n        {\n          title: \"Web Feed\",\n          icon: feedSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/web-feed\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n        {\n          title: \"My Profile\",\n          icon: profileSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"#\",\n          hasSubMenu: true,\n          subMenu: [\n            {\n              title: \"User Profile\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/profile\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"My Documents\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/documents\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"My Applications\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/application\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"Bank Accounts\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/bank-accounts\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"Notifications\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/notifications\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"Activities\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/activites\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"2FA\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/two-fa\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n          ],\n        });\n      break;\n    case \"GOLD\":\n      menu.push(\n        {\n          title: \"Wallets\",\n          icon: walletSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/wallet\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n        {\n          title: \"Documents\",\n          icon: documentSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/documents\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n      );\n      switch (subPortal) {\n        case CUSTOMER_SUB_PORTALS.LIVE:\n          if (profile?.fx?.liveAcc?.length === 0) {\n            menu.push(\n              {\n                title: \"Trading Account\",\n                icon: platformSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n                link: \"/trading-account\",\n                hasSubMenu: false,\n                subMenu: [],\n              });\n          }\n          menu.push(\n            {\n              title: \"Internal Transfer\",\n              icon: transferSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              onClick: \"Transfer\",\n              hasSubMenu: false,\n              subMenu: [],\n            }\n          );\n          break;\n        case CUSTOMER_SUB_PORTALS.DEMO:\n\n      }\n      menu.push(\n        {\n          title: \"Inventory\",\n          icon: inventorySvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/inventory\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n        {\n          title: \"History\",\n          icon: historySvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"/history\",\n          hasSubMenu: false,\n          subMenu: [],\n        },\n        {\n          title: \"My Profile\",\n          icon: profileSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n          link: \"#\",\n          hasSubMenu: true,\n          subMenu: [\n            {\n              title: \"User Profile\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/profile\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"My Addresses\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/addresses\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"Bank Accounts\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/bank-account\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"Activities\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/activities\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"Notifications\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/notifications\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n            {\n              title: \"2FA\",\n              icon: dotSvg({ fill: layoutMode === \"dark\" ? darkFill : lightFill }),\n              link: \"/two-fa\",\n              hasSubMenu: false,\n              subMenu: [],\n            },\n          ],\n        });\n      break;\n    default:\n  }\n  return menu;\n};","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Applications/Pdf.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/Widgets.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/ProfileAvatar.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/clientPortal/ClientPortalDashboard.js",["2133","2134"],"import React, { useState } from \"react\";\nimport Journey from \"components/Journey/Journey\";\nimport Slider from \"../Silder\";\nimport {\n  Col, Row,\n} from \"reactstrap\";\nimport { withTranslation, useTranslation } from \"react-i18next\"; \nimport Accounts from \"../Accounts\";\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport DepositTabs from \"components/Forex/Deposit/DepositTabs\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Icofont from \"react-icofont\";\nimport { toggleCurrentModal } from \"store/actions\";\nimport Profiles from \"components/Journey/Profiles/\";\nimport { HIDE_JOU_IND_PROFILE } from \"common/data/jourenykeys\";\nimport { JClickHandler } from \"components/Journey/handlers\";\nimport Widget from \"pages/Forex/Widget\";\nimport DefaultSlider from \"components/Slider/DefaultSlider\";\nimport { showDefaultSlider } from \"config\";\n\nconst ClientPortalDashboard = () => {\n  const [showSlider] = useState(true);\n  const [type, setType] = useState(\"live\");\n  const [showSubmitIndProfileModal, setShowSubmitIndProfileModal] = useState(false);\n  const { t } = useTranslation();\n  const profileDetails = useSelector(state => state.Profile.clientData);\n  const dispatch = useDispatch();\n  const buttons =  [\n    {\n      title: t(`Create new ${type} Account`),\n      onClick: () => {\n        if ((profileDetails.stages.individual?.submitProfile) || type === \"demo\"){\n          dispatch(toggleCurrentModal(\"CreateAccModal\", type));\n        } else {\n          JClickHandler(\"madeDeposit\", profileDetails.stages, dispatch, toggleCurrentModal)();\n        }\n      },\n      iconName: \"icofont-plus-circle me-1\",\n      disabled: !profileDetails?.stages?.kycApproved,\n    }\n  ];\n  return (\n    <>\n      <Profiles t={(str) => { return str }} \n        show={showSubmitIndProfileModal}\n        toggle={() => { setShowSubmitIndProfileModal(!showSubmitIndProfileModal); localStorage.setItem(HIDE_JOU_IND_PROFILE, true) }} />\n      <div className=\"pt-3\">\n        {console.log(showDefaultSlider, \"default\", process.env.DEFAULT_BANNER)}\n        {showSlider && \n          <DefaultSlider />\n        }\n      </div>\n      {\n        !profileDetails?.fx?.isDemo && <>\n          <div className=\"pt-3\" >\n            <Journey></Journey>\n          </div>\n        </>\n      }\n      <div className=\"pt-3\" >\n        <Accounts buttons={buttons} type={type} setType={setType} />\n      </div>\n      <div className=\"pt-3\" style={{\n        marginBottom: \"10%\"\n      }}>\n        <Row>\n          <Col lg={6} xs={12} className=\"my-2\">\n            <CardWrapper className=\"shadow glass-card\" \n            >\n              <div className=\"d-flex justify-content-between heading pb-2\">\n                <h5 className=\"color-primary\">{t(\"Your Manager\")}</h5>\n                <div>\n                  <svg width=\"3\" height=\"15\" viewBox=\"0 0 4 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"2\" cy=\"2\" r=\"2\" fill=\"#74788D\"/>\n                    <circle cx=\"2\" cy=\"9\" r=\"2\" fill=\"#74788D\"/>\n                    <circle cx=\"2\" cy=\"16\" r=\"2\" fill=\"#74788D\"/>\n                  </svg>\n                </div>\n              </div>\n              <div className=\"d-flex flex-column justify-content-center align-items-center text-center manager-card\" \n                style={{\n                  height: \"100%\"\n                }}\n              >\n                {profileDetails && profileDetails.manager ? \n                  <>\n                    <Icofont icon=\"user\" size=\"3\" className=\"text-secondary\" />\n                    <div style={{ width:\"85%\" }}>\n                      <h5>{profileDetails.manager.name}</h5>\n                      <ul>\n                        <li>\n                          <span className=\"fw-bold\">{t(\"Email\")}: </span>\n                          {profileDetails.manager.email}\n                        </li>\n                        {profileDetails.manager.phone && (\n                          <li>\n                            <span className=\"fw-bold\">{t(\"Phone\")}: </span> \n                            {profileDetails.manager.phone}\n                          </li>\n                        )}\n                      </ul>\n                    </div>\n                  </> : \n                  <> \n                    {/* Center this div */}\n                    <div style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      textAlign: \"center\", \n                    }}>\n                      <h5 className=\"color-primary\">{t(\"You do not have a Manager\")}</h5>\n                    </div>\n                  </>\n                }\n                \n              </div>\n            </CardWrapper>\n          </Col>\n          <Col lg={6} xs={12} className=\"my-2\">\n            <CardWrapper  className=\"shadow glass-card\" >\n              <div className=\"d-flex justify-content-between heading pb-2\">\n                <h5 className=\"color-primary\">{t(\"Add Funds\")}</h5>\n                <div>\n                  <svg width=\"3\" height=\"15\" viewBox=\"0 0 4 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <circle cx=\"2\" cy=\"2\" r=\"2\" fill=\"#74788D\"/>\n                    <circle cx=\"2\" cy=\"9\" r=\"2\" fill=\"#74788D\"/>\n                    <circle cx=\"2\" cy=\"16\" r=\"2\" fill=\"#74788D\"/>\n                  </svg>\n                </div>\n              </div>\n              <div className=\"mt-3\">\n                <div className=\"text-muted text-center\">{t(\"Choose a payment to add funds into your account.\")}</div>\n                <DepositTabs></DepositTabs>\n              </div>\n            </CardWrapper>\n          </Col>\n          <Row style={{\n            marginTop: \"2%\"\n          }}>\n            <Widget />\n          </Row>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default withTranslation()(ClientPortalDashboard);","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomInput.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/nationalitites.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Profile/ChangePassword.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BalanceView/BalanceView.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/OrderFilter.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/DepositFilters.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/ConvertFilters.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/WithdrawalFilters.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/filters/AllFilters.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Orders.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Convert.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Deposits.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Withdrawals.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CryptoCard.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/History/Transactions.js",["2135","2136"],"import { connect, useDispatch } from \"react-redux\";\nimport CustomTable from \"../../../components/Common/CustomTable\";\nimport React, { useState, useEffect } from \"react\";\nimport { \n  getDepositsStart, \n  getWithdrawalsStart,\n  // getConvertsStart\n} from \"../../../store/crypto/history/actions\";\n// import { getOrdersStart } from \"../../store/orders/actions\";\nimport { Button } from \"reactstrap\";\nimport { BigNumber } from \"bignumber.js\";\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport { getAssetImgSrc } from \"helpers/assetImgSrc\";\n\nfunction Transactions(props) {\n  const [limit, setLimit] =  useState(5);\n  const dispatch = useDispatch();\n\n  const columns = [\n    {\n      text: props.t(\"Asset\"),\n      formatter: (val) => {\n        const found = props.assets?.find((asset)=>asset.symbol === val?.walletId?.asset);\n        return <div className=\"balances__company\">\n          <div className=\"balances__logo\">\n            <img src={getAssetImgSrc(found)} alt=\"symbol\"></img>\n          </div>\n          <div className=\"balances__text\">{val?.walletId?.asset ? val.walletId.asset : \"\"}</div>\n        </div>;},\n    },\n    {\n      text: props.t(\"Date\"),\n      dataField: \"createdAt\",\n      formatter: (item) => {\n        let d = new Date(item.createdAt);\n        d = `${d.toLocaleDateString()}, ${d.toLocaleTimeString()}`;\n        return d;\n      }\n    },\n    {\n      text: props.t(\"Amount\"),\n      dataField: \"amount\",\n      formatter: (val)=>val?.amount?.$numberDecimal ? val.amount.$numberDecimal : val.amount\n    },\n    {\n      text: props.t(\"Gateway\"),\n      dataField: \"gateway\",\n    },\n    {\n      text: props.t(\"Type\"),\n      dataField: \"type\",\n      formatter: (val)=>val?.type\n    },\n    {\n      text: props.t(\"Status\"),\n      dataField: \"status\",\n    },\n    {\n      text: props.t(\"On Orders\"),\n      formatter: (val) => <>\n        <div className=\"balances__number\">{val?.walletId?.freezeAmount?.$numberDecimal ? val.walletId.freezeAmount.$numberDecimal : val.walletId.freezeAmount}</div>\n      </>\n    },\n    {\n      text: props.t(\"Available Balance\"),\n      formatter: (val) => <>\n        <div className=\"balances__number\">{val?.walletId?.amount?.$numberDecimal ? val.walletId.amount.$numberDecimal : val.walletId.amount}</div>    \n      </>\n    },\n    {\n      text: props.t(\"Total Balance\"),\n      formatter: (val) => \n        <div className=\"balances__number\">{val.walletId ? \n          new BigNumber(val?.walletId?.amount?.$numberDecimal ? val.walletId.amount.$numberDecimal : val.walletId.amount ).plus(\n            new BigNumber(val?.walletId.freezeAmount?.$numberDecimal ? val.walletId.freezeAmount.$numberDecimal : val.walletId.freezeAmount)).toString() : \"\"}</div>  \n    }\n  ];\n\n  // when the filter value changes it fetches data with the new filter\n  useEffect(() => {\n    dispatch(getDepositsStart({\n      limit: limit,\n      page: 1,\n      currency: props.filterObj?.currency,\n      status: props.filterObj?.status,\n      gateway: props.filterObj?.gateway,\n      fromDate: props.filterObj?.fromDate,\n      toDate: props.filterObj?.toDate\n    }));\n    dispatch(getWithdrawalsStart({\n      limit: limit,\n      page: 1,\n      currency: props.filterObj?.currency,\n      status: props.filterObj?.status,\n      gateway: props.filterObj?.gateway,\n      fromDate: props.filterObj?.fromDate,\n      toDate: props.filterObj?.toDate\n    }));\n    // dispatch(getOrdersStart({\n    //   limit:limit,\n    //   page:1,\n    //   side: props.filterObj?.side,\n    //   status: props.filterObj?.status,\n    //   type: props.filterObj?.type,\n    //   fromDate: props.filterObj?.fromDate,\n    //   toDate: props.filterObj?.toDate\n    // }));\n    // dispatch(getConvertsStart({\n    //   limit:limit,\n    //   page:1,\n    //   fromAsset: props.filterObj?.fromAsset,\n    //   toAsset: props.filterObj?.toAsset,\n    //   fromDate: props.filterObj?.fromDate,\n    //   toDate: props.filterObj?.toDate\n    // }));\n\n  }, [props.filterObj, limit]);\n\n  return (\n    <React.Fragment>\n      {/* <CustomTable \n        columns={columns} \n        rows={[...props.deposits, ...props.withdrawals]}\n        loading={props.depositLoading || props.withdrawalLoading}\n      /> */}\n      {\n        props.depositsTotalDocs + props.withdrawalsTotalDocs > limit &&\n        <Button \n          type=\"button\"\n          onClick = {() => {\n            if (props.depositsTotalDocs + props.withdrawalsTotalDocs > limit){\n              setLimit(limit + 5);\n            }\n          }}\n          className=\"blue-gradient-color w-100\">{props.t(\"Load More\")}\n        </Button>\n        // <p className =\"text-center h4\">{props.t(\"There are no records\")}</p>\n      }\n    </React.Fragment>\n\n  );\n}\nconst mapStateToProps = (state)=>(\n  {\n    deposits: state.crypto.historyReducer.deposits || [],\n    withdrawals :state.crypto.historyReducer.withdrawals || [],\n    withdrawalsTotalDocs : state.crypto.historyReducer.withdrawalsTotalDocs,\n    depositsTotalDocs : state.crypto.historyReducer.depositsTotalDocs,\n    depositLoading: state.crypto.historyReducer.depositLoading,\n    withdrawalLoading: state.crypto.historyReducer.withdrawalLoading,\n  }\n);\nexport default connect(mapStateToProps, null)(withTranslation()(Transactions)); ","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/DocumentsCorpUpload.js",["2137"],"import React, {\n  useState, useEffect, useRef, Fragment\n} from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Form as ReactStrapForm,\n  Label,\n  Input,\n  FormGroup,\n  Spinner\n} from \"reactstrap\";\nimport {\n  Formik,\n  Form as FormikForm\n} from \"formik\";\nimport * as Yup from \"yup\";\n\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport CardWrapper from \"../../components/Common/CardWrapper\";\nimport { uploadDocsStart } from \"../../store/general/documents/actions\";\n\nfunction DocumentCorpUpload(props) {\n  const dispatch = useDispatch();\n  const memorandum = useRef();\n  const corpAddressRef = useRef();\n  const certificateRef = useRef();\n  const addressRef = useRef();\n  const frontSideRef = useRef();\n  const backSideRef = useRef();\n  const requiredPassportRef = useRef();\n  const optionalPassportRef = useRef();\n  const additionalRef = useRef();\n  const documentNumberRef = useRef();\n  const issueDateRef = useRef();\n  const expiryDateRef = useRef();\n  const [memFiles, setMemFiles] = useState({});\n  const [memorandumUploaded, setMemorandumUploaded] = useState(false);\n  const [corpAddressUploaded, setCorpAddressUploaded] = useState(false);\n  const [certificateUploaded, setCertificateUploaded] = useState(false);\n  const [authAddressUploaded, setAuthAddressUploaded] = useState(false);\n  const [authIdUploaded, setAuthIdUploaded] = useState(false);\n  const [option, setOption] = useState([]);\n  const [docType, setDocType] = useState(option[0]);\n  const [secondSelect, setSecondSelect] = useState(\"ID\");\n  const [personnel, setPersonnel] = useState(\"\");\n  const [shareholderId, setShareholderId] = useState(\"\");\n  const [uploadedShareholderIds, setUploadedShareholderIds] = useState([]);\n  const [allShareholdersIdsUploaded, setAllShareholdersIdsUploaded] = useState(false);\n  const [uploadedShareholderAddresses, setUploadedShareholderAddresses] = useState([]);\n  const [allShareholdersAddressesUploaded, setAllShareholdersAddressesUploaded] = useState(false);\n\n  const initialValues = {\n    typeOfDocument: \"\",\n    proofOfId: \"ID\",\n  };\n\n  // max file size to uplaod = 5 MB\n  const maxFileSize = 5;\n  const acceptedExtensions = [\"image/jpeg\", \"image/png\", \"application/pdf\"];\n  const fileSizeError = \"File is too large, It has to be 5MB at most\";\n  const fileExtensionError = \"Only accepts files with the following extensions *jpg, *png, *pdf\";\n\n  const addFile = (name, files) => {\n    if ((files?.size / 1000000) <= maxFileSize) {\n      setMemFiles({\n        ...memFiles,\n        [name]: files,\n      });\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    memorandum: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"memorandum\",\n      then: Yup.mixed().required(\"Memorandum of Association is required\")\n    }),\n\n    corpAddress: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"corpAddress\",\n      then: Yup.mixed().required(\"Corporate Address is required\")\n    }),\n\n    certificate: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"certificate\",\n      then: Yup.mixed().required(\"Certificate of Incorporation is required\")\n    }),\n\n    frontSideId: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"ID\",\n      then: Yup.mixed().required(\"Front side id is required\")\n    }),\n\n    backSideId: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"ID\",\n      then: Yup.mixed().required(\"Back side id is required\")\n    }),\n\n    address: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"address\",\n      then: Yup.mixed().required(\"Address is required\")\n    }),\n\n\n    proofOfPassport: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"proofOfId\", {\n      is: \"Passport\",\n      then: Yup.mixed().required(\"Passport is required\")\n    }),\n\n    proofOfPassportOptional: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }),\n\n    Additional: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"Additional\",\n      then: Yup.mixed().required(\"Additional file is required\")\n    }),\n  });\n\n  useEffect(() => {\n    if (props.documents?.length > 0) {\n      const { documents } = props;\n      const memorandumFound = documents.find((x) => (x.type === \"MEMORANDUM\" && x.status === \"APPROVED\"));\n      const corpAddressFound = documents.find((x) => (x.type === \"CORPORATE_ADDRESS\" && x.status === \"APPROVED\"));\n      const certificateFound = documents.find((x) => (x.type === \"CERTIFICATE_OF_INCORPORATION\" && x.status === \"APPROVED\"));\n      const authIdFound = documents.find((x) => (x.type === \"ID\" && x.subType === \"AUTHORIZED_PERSON\" && x.status === \"APPROVED\"));\n      const authAddressFound = documents.find((x) => (x.type === \"ADDRESS\" && x.subType === \"AUTHORIZED_PERSON\" && x.status === \"APPROVED\"));\n      if (memorandumFound) setMemorandumUploaded(true);\n      if (corpAddressFound) setCorpAddressUploaded(true);\n      if (certificateFound) setCertificateUploaded(true);\n      if (authIdFound) setAuthIdUploaded(true);\n      if (authAddressFound) setAuthAddressUploaded(true);\n    }\n  }, [props.documents, props.documents.map((item) => (item.status))]);\n\n  useEffect(() => {\n    if (props.documents?.length > 0) {\n      const { documents } = props;\n\n      const shareholderIds = props.clientData?.corporateInfo?.shareholders?.map(shareholder => shareholder._id) || [];\n      const shareholderIdsFound = documents\n        .filter(x => x.type === \"ID\" && x.subType === \"SHAREHOLDER\" && x.status === \"APPROVED\" && shareholderIds.includes(x.shareholderId))\n        .map(x => x.shareholderId);\n      setAllShareholdersIdsUploaded(shareholderIdsFound.length === shareholderIds.length);\n      setUploadedShareholderIds(shareholderIdsFound);\n\n      const shareholderAddresses = props.clientData?.corporateInfo?.shareholders?.map(shareholder => shareholder._id) || [];\n      const shareholderAddressesFound = documents\n        .filter(x => x.type === \"ADDRESS\" && x.subType === \"SHAREHOLDER\" && x.status === \"APPROVED\" && shareholderIds.includes(x.shareholderId))\n        .map(x => x.shareholderId);\n      setAllShareholdersAddressesUploaded(shareholderAddressesFound.length === shareholderAddresses.length);\n      setUploadedShareholderAddresses(shareholderAddressesFound);\n    }\n  }, [props.documents, props.clientData]);\n\n  const uploadDoc = async () => {\n    try {\n      var formData = new FormData();\n      switch (docType) {\n        case \"memorandum\":\n          formData.append(\"type\", \"MEMORANDUM\"); // type saved in db\n          formData.append(\"images\", memFiles[\"MEMORANDUM\"]);\n          break;\n        case \"corpAddress\":\n          formData.append(\"type\", \"CORPORATE_ADDRESS\");\n          formData.append(\"images\", memFiles[\"CORPORATE_ADDRESS\"]);\n          break;\n        case \"certificate\":\n          formData.append(\"type\", \"CERTIFICATE_OF_INCORPORATION\");\n          formData.append(\"images\", memFiles[\"CERTIFICATE\"]);\n          break;\n        case \"ID\":\n          formData.append(\"type\", \"ID\");\n          formData.append(\"images\", memFiles[\"ID1\"]);\n          formData.append(\"subType\", personnel);\n          if (personnel === \"SHAREHOLDER\") {\n            formData.append(\"shareholderId\", shareholderId);\n          }\n          if (memFiles[\"ID2\"]) {\n            formData.append(\"images\", memFiles[\"ID2\"]);\n          }\n          break;\n        case \"address\":\n          formData.append(\"type\", \"ADDRESS\");\n          formData.append(\"subType\", personnel);\n          if (personnel === \"SHAREHOLDER\") {\n            formData.append(\"shareholderId\", shareholderId);\n          }\n          formData.append(\"images\", memFiles[\"ADDRESS\"]);\n          break;\n        case \"Additional\":\n          formData.append(\"type\", \"ADDITIONAL_DOCUMENTS\");\n          formData.append(\"images\", memFiles[\"ADDITIONAL_DOCUMENTS\"]);\n          break;\n      }\n      dispatch(uploadDocsStart(formData));\n    } catch (error) {\n    }\n  };\n\n  const secondSelectChangeHandler = (e) => {\n    let value = e.target.value;\n    setSecondSelect(value);\n  };\n\n  const resetForm = () => {\n    setMemFiles({});\n    memorandum.current ? memorandum.current.value = \"\" : memorandum.current = \"\";\n    corpAddressRef.current ? corpAddressRef.current.value = \"\" : corpAddressRef.current = \"\";\n    certificateRef.current ? certificateRef.current.value = \"\" : certificateRef.current = \"\";\n    frontSideRef.current ? frontSideRef.current.value = \"\" : frontSideRef.current = \"\";\n    backSideRef.current ? backSideRef.current.value = \"\" : backSideRef.current = \"\";\n    addressRef.current ? addressRef.current.value = \"\" : addressRef.current = \"\";\n    requiredPassportRef.current ? requiredPassportRef.current.value = \"\" : requiredPassportRef.current = \"\";\n    optionalPassportRef.current ? optionalPassportRef.current.value = \"\" : optionalPassportRef.current = \"\";\n    additionalRef.current ? additionalRef.current.value = \"\" : additionalRef.current = \"\";\n    documentNumberRef.current ? documentNumberRef.current.value = \"\" : documentNumberRef.current = \"\";\n    issueDateRef.current ? issueDateRef.current.value = \"\" : issueDateRef.current = \"\";\n    expiryDateRef.current ? expiryDateRef.current.value = \"\" : expiryDateRef.current = \"\";\n  };\n\n  useEffect(() => {\n    const testArray = [\n      !memorandumUploaded && \"memorandum\",\n      !corpAddressUploaded && \"corpAddress\",\n      !certificateUploaded && \"certificate\",\n      // !authIdUploaded && \"ID\",\n      \"Additional\"\n    ];\n    const newOptions = testArray.filter((option) => option !== false);\n    setOption(newOptions);\n    setDocType(newOptions[0]);\n\n  }, [authIdUploaded, corpAddressUploaded, certificateUploaded, memorandumUploaded]);\n\n  return (\n    <Container>\n      <Row>\n        <Col lg={9}>\n          <CardWrapper className=\"h-100 glass-card shadow\">\n            <Container>\n              <Formik\n                validationSchema={validationSchema}\n                initialValues={initialValues}\n                onSubmit={(values) => {\n                  if (values.countryOfIssue === \"None\") {\n                    delete values.countryOfIssue;\n                  }\n                  delete values.memorandum;\n                  delete values.corpAddress;\n                  delete values.address;\n                  delete values.certificate;\n                  delete values.typeOfDocument;\n                  delete values.proofOfId;\n                  delete values.proofOfPassport;\n                  delete values.Additional;\n                  delete values.proofOfPassportOptional;\n                  uploadDoc(values);\n                  resetForm();\n                }}\n              >\n                {({ errors, touched, values, setFieldValue }) => (\n                  <ReactStrapForm\n                    tag={FormikForm}\n                  >\n                    <Row>\n                      <Col xs={12} lg={6}>\n                        <Label\n                          className=\"form-label\"\n                          for=\"typeOfDocument\"\n                        >\n                          {props.t(\"Type of document\")}\n                        </Label>\n                        <Input\n                          className=\"form-select form-select-lg\"\n                          required={true}\n                          onChange={(e) => {\n                            setDocType(e.target.value);\n                            setFieldValue(\"typeOfDocument\", e.target.value);\n                            // eslint-disable-next-line\n                            if (e.target.value === \"Additional\" || \"corpAddress\") {\n                              setFieldValue(\"proofOfId\", \"\");\n                              setSecondSelect(\"ID\");\n                            }\n                          }}\n                          id=\"typeOfDocument\"\n                          type=\"select\"\n                          name=\"typeOfDocument\"\n                          value={docType}\n                        >\n                          {!memorandumUploaded && <option value=\"memorandum\">{props.t(\"Memorandum of Association\")}</option>}\n                          {!certificateUploaded && <option value=\"certificate\">{props.t(\"Certificate of Incorporation\")}</option>}\n                          {!corpAddressUploaded && <option value=\"corpAddress\">{props.t(\"Corporate Address\")}</option>}\n                          {(!authIdUploaded || !allShareholdersIdsUploaded) && <option value=\"ID\">{props.t(\"Proof of ID\")}</option>}\n                          {(!authAddressUploaded || !allShareholdersAddressesUploaded) && <option value=\"address\">{props.t(\"Proof of Address\")}</option>}\n                          <option value=\"Additional\">Additional</option>\n                        </Input>\n                      </Col>\n                      {\n                        docType === \"memorandum\" &&\n                        !memorandumUploaded &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"memorandum\">\n                              {props.t(\"Memorandum of Association\")}\n                            </Label>\n                            <Input\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"memorandum\"\n                              onChange={(e) => {\n                                addFile(\"MEMORANDUM\", e.target.files[0]);\n                                setFieldValue(\"memorandum\", e.target.files[0]);\n                              }}\n                              name=\"memorandum\"\n                              innerRef={memorandum}\n                              invalid={errors.memorandum && touched.memorandum}\n                            />\n                            {\n                              errors?.memorandum &&\n                              touched.memorandum &&\n                              <label style={{ \"color\": \"red\" }}>{errors.memorandum}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        docType === \"corpAddress\" &&\n                        !corpAddressUploaded &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"corpAddress\">\n                              {props.t(\"Corporate Address\")}\n                            </Label>\n                            <Input\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"corpAddress\"\n                              onChange={(e) => {\n                                addFile(\"CORPORATE_ADDRESS\", e.target.files[0]);\n                                setFieldValue(\"corpAddress\", e.target.files[0]);\n                              }}\n                              name=\"corpAddress\"\n                              innerRef={corpAddressRef}\n                              invalid={errors.corpAddress && touched.corpAddress}\n                            />\n                            {\n                              errors?.corpAddress &&\n                              touched.corpAddress &&\n                              <label style={{ \"color\": \"red\" }}>{errors.corpAddress}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        docType === \"certificate\" &&\n                        !certificateUploaded &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"certificate\">\n                              {props.t(\"Certificate of Incorporation\")}\n                            </Label>\n                            <Input\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"certificate\"\n                              onChange={(e) => {\n                                addFile(\"CERTIFICATE\", e.target.files[0]);\n                                setFieldValue(\"certificate\", e.target.files[0]);\n                              }}\n                              name=\"certificate\"\n                              innerRef={certificateRef}\n                              invalid={errors.certificate && touched.certificate}\n                            />\n                            {\n                              errors?.certificate &&\n                              touched.certificate &&\n                              <label style={{ \"color\": \"red\" }}>{errors.certificate}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        docType === \"ID\" &&\n                        (!authIdUploaded ||\n                          !allShareholdersIdsUploaded) &&\n                        <>\n                          <Col xs={12} lg={6}>\n                            <Label className=\"form-label\" for=\"proofOfId\">{props.t(\"ID Type\")}</Label>\n                            <Input\n                              className=\"form-select form-select-lg\"\n                              required={docType === \"ID\"}\n                              onChange={(e) => {\n                                secondSelectChangeHandler(e);\n                                setFieldValue(\"proofOfId\", e.target.value);\n                              }}\n                              id=\"proofOfId\"\n                              type=\"select\"\n                              name=\"proofOfId\"\n                            >\n                              <option value=\"ID\">{props.t(\"ID\")}</option>\n                              <option value=\"Passport\">{props.t(\"Passport\")}</option>\n                            </Input>\n                          </Col>\n                          <Col xs={12} lg={6}>\n                            <Label className=\"form-label\" for=\"personnel\">{props.t(\"Personnel\")}</Label>\n                            <Input\n                              className=\"form-select form-select-lg\"\n                              required={docType === \"ID\"}\n                              onChange={(e) => {\n                                setPersonnel(e.target.value);\n                                setFieldValue(\"personnel\", e.target.value);\n                              }}\n                              id=\"personnel\"\n                              type=\"select\"\n                              name=\"personnel\"\n                              value={personnel}\n                            >\n                              <option disabled value=\"\">\n                                {props.t(\"Select a Personnel\")}\n                              </option>\n                              {!authIdUploaded && <option value=\"AUTHORIZED_PERSON\">{props.t(\"Authorized Person\")}</option>}\n                              {!allShareholdersIdsUploaded && <option value=\"SHAREHOLDER\">{props.t(\"Shareholder\")}</option>}\n                            </Input>\n                            {\n                              errors?.personnel &&\n                              <label style={{ \"color\": \"red\" }}>{errors.personnel}</label>\n                            }\n                          </Col>\n                          {\n                            personnel === \"SHAREHOLDER\" &&\n                            <Col xs={12} lg={6}>\n                              <Label className=\"form-label\" for=\"shareholder\">{props.t(\"Shareholder\")}</Label>\n                              <Input\n                                className=\"form-select form-select-lg\"\n                                required={docType === \"ID\"}\n                                onChange={(e) => {\n                                  setShareholderId(e.target.value);\n                                  setFieldValue(\"shareholder\", e.target.value);\n                                }\n                                }\n                                id=\"shareholder\"\n                                type=\"select\"\n                                name=\"shareholder\"\n                                value={shareholderId}\n                              >\n                                <option disabled value=\"\">\n                                  {props.t(\"Select a shareholder\")}\n                                </option>\n                                {\n                                  props.clientData?.corporateInfo?.shareholders?.map((shareholder, index) => (\n                                    !uploadedShareholderIds.includes(shareholder._id) &&\n                                    <option key={index} value={shareholder._id}>{shareholder.firstName} {shareholder.lastName}</option>\n                                  ))\n                                }\n                              </Input>\n                            </Col>\n                          }\n                        </>\n                      }\n                      {\n                        docType === \"address\" &&\n                        (!authAddressUploaded ||\n                          !allShareholdersAddressesUploaded) &&\n\n                        <>\n                          <Col xs={12} lg={6}>\n                            <Label className=\"form-label\" for=\"personnel\">{props.t(\"Personnel\")}</Label>\n                            <Input\n                              className=\"form-select form-select-lg\"\n                              required={docType === \"ID\"}\n                              onChange={(e) => {\n                                setPersonnel(e.target.value);\n                                setFieldValue(\"personnel\", e.target.value);\n                              }}\n                              id=\"personnel\"\n                              type=\"select\"\n                              name=\"personnel\"\n                              value={personnel}\n                            >\n                              <option disabled value=\"\">\n                                {props.t(\"Select a Personnel\")}\n                              </option>\n                              {!authAddressUploaded && <option value=\"AUTHORIZED_PERSON\">{props.t(\"Authorized Person\")}</option>}\n                              <option value=\"SHAREHOLDER\">{props.t(\"Shareholder\")}</option>\n                            </Input>\n                            {\n                              errors?.personnel &&\n                              <label style={{ \"color\": \"red\" }}>{errors.personnel}</label>\n                            }\n                          </Col>\n                          {\n                            personnel === \"SHAREHOLDER\" &&\n                            <Col xs={12} lg={6}>\n                              <Label className=\"form-label\" for=\"shareholder\">{props.t(\"Shareholder\")}</Label>\n                              <Input\n                                className=\"form-select form-select-lg\"\n                                required={docType === \"address\"}\n                                onChange={(e) => {\n                                  setShareholderId(e.target.value);\n                                  setFieldValue(\"shareholder\", e.target.value);\n                                }\n                                }\n                                id=\"shareholder\"\n                                type=\"select\"\n                                name=\"shareholder\"\n                                value={shareholderId}\n                              >\n                                <option disabled value=\"\">\n                                  {props.t(\"Select a shareholder\")}\n                                </option>\n                                {\n                                  props.clientData?.corporateInfo?.shareholders?.map((shareholder, index) => (\n                                    !uploadedShareholderAddresses.includes(shareholder._id) &&\n                                    <option key={index} value={shareholder._id}>{shareholder.firstName} {shareholder.lastName}</option>\n                                  ))\n                                }\n                              </Input>\n                            </Col>\n                          }\n\n                          <Col xs={12} lg={6}>\n                            <div className=\"mb-3\">\n                              <Label className=\"form-label\" htmlFor=\"address\">\n                                {props.t(\"Corporate Address\")}\n                              </Label>\n                              <Input\n                                type=\"file\"\n                                className=\"form-control form-control-lg\"\n                                id=\"address\"\n                                onChange={(e) => {\n                                  addFile(\"ADDRESS\", e.target.files[0]);\n                                  setFieldValue(\"address\", e.target.files[0]);\n                                }}\n                                name=\"address\"\n                                innerRef={addressRef}\n                                invalid={errors.address && touched.address}\n                              />\n                              {\n                                errors?.address &&\n                                touched.address &&\n                                <label style={{ \"color\": \"red\" }}>{errors.address}</label>\n                              }\n                            </div>\n                          </Col>\n                        </>\n                      }\n                      {\n                        docType === \"Additional\" &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"Additional\">\n                              {props.t(\"Additional document\")}\n                            </Label>\n                            <Input\n\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"Additional\"\n                              onChange={(e) => {\n                                addFile(\"ADDITIONAL_DOCUMENTS\", e.target.files[0]);\n                                setFieldValue(\"Additional\", e.target.files[0]);\n                              }}\n                              name=\"Additional\"\n                              innerRef={additionalRef}\n                              invalid={errors.Additional && touched.Additional}\n                            />\n                            {\n                              errors?.Additional &&\n                              touched.Additional &&\n                              <label style={{ \"color\": \"red\" }}>{errors.Additional}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        <div className=\"mt-4\">\n                          {\n                            docType === \"ID\" &&\n                            secondSelect === \"ID\" &&\n                            // TODO: when all ids approved\n                            // !authIdUploaded &&\n                            <Row>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <FormGroup>\n                                    <Label className=\"form-label\" htmlFor=\"frontSideId\">{props.t(\"Proof of ID front side\")}</Label>\n                                    <Input\n\n                                      innerRef={frontSideRef}\n                                      type=\"file\"\n                                      className=\"form-control\"\n                                      id=\"frontSideId\"\n                                      onChange={(e) => {\n                                        addFile(\"ID1\", e.target.files[0]);\n                                        setFieldValue(\"frontSideId\", e.target.files[0]);\n                                      }}\n                                      name=\"frontSideId\"\n                                      invalid={errors.frontSideId && touched.frontSideId}\n                                    // disabled={authIdUploaded}\n                                    />\n                                    {\n                                      errors?.frontSideId &&\n                                      touched.frontSideId &&\n                                      <label style={{ \"color\": \"red\" }}>{errors.frontSideId}</label>\n                                    }\n                                  </FormGroup>\n                                </div>\n                              </Col>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <Label className=\"form-label\" htmlFor=\"backSideId\">{\n                                    props.t(\"Proof of ID back side\")}\n                                  </Label>\n                                  <Input\n\n                                    innerRef={backSideRef}\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    id=\"backSideId\"\n                                    onChange={(e) => {\n                                      addFile(\"ID2\", e.target.files[0]);\n                                      setFieldValue(\"backSideId\", e.target.files[0]);\n                                    }}\n                                    name=\"backSideId\"\n                                    invalid={errors.backSideId && touched.backSideId}\n                                  />\n                                  {\n                                    errors?.backSideId &&\n                                    touched.backSideId &&\n                                    <label style={{ \"color\": \"red\" }}>{errors.backSideId}</label>\n                                  }\n                                </div>\n                              </Col>\n                            </Row>\n                          }\n                          {\n                            docType === \"ID\" &&\n                            secondSelect === \"Passport\" &&\n                            !authIdUploaded &&\n                            <Row>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <FormGroup>\n                                    <Label className=\"form-label\" htmlFor=\"proofOfPassport\">\n                                      {props.t(\"Proof of Passport\")} ({props.t(\"Required\")})\n                                    </Label>\n                                    <Input\n\n                                      type=\"file\"\n                                      className=\"form-control\"\n                                      id=\"proofOfPassport\"\n                                      onChange={(e) => {\n                                        addFile(\"ID1\", e.target.files[0]);\n                                        setFieldValue(\"proofOfPassport\", e.target.files[0]);\n                                      }}\n                                      name=\"proofOfPassport\"\n                                      innerRef={requiredPassportRef}\n                                      invalid={errors.proofOfPassport && touched.proofOfPassport}\n                                    />\n                                    {\n                                      errors?.proofOfPassport &&\n                                      touched.proofOfPassport &&\n                                      <label\n                                        style={{ \"color\": \"red\" }}>{errors.proofOfPassport}</label>\n                                    }\n                                  </FormGroup>\n                                </div>\n                              </Col>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <Label className=\"form-label\" htmlFor=\"proofOfPassportOptional\">\n                                    {props.t(\"Proof of Passport\")} ({props.t(\"Optional\")})\n                                  </Label>\n                                  <Input\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    id=\"proofOfPassportOptional\"\n                                    onChange={(e) => {\n                                      addFile(\"ID2\", e.target.files[0]);\n                                      setFieldValue(\"proofOfPassportOptional\", e.target.files[0]);\n                                    }}\n                                    name=\"proofOfPassportOptional\"\n                                    innerRef={optionalPassportRef}\n                                    invalid={errors.proofOfPassportOptional && touched.proofOfPassportOptional}\n                                  />\n                                  {\n                                    errors?.proofOfPassportOptional &&\n                                    touched.proofOfPassportOptional &&\n                                    <label style={{ \"color\": \"red\" }}>{errors.proofOfPassportOptional}</label>\n                                  }\n                                </div>\n                              </Col>\n                            </Row>\n                          }\n                        </div>\n                      }\n                    </Row>\n                    <div>\n                    </div>\n                    <div className=\"text-end\">\n                      <Button\n                        className=\"border-0 color-bg-btn w-lg\"\n                        type=\"submit\"\n                        disabled={\n                          docType === \"memorandum\" &&\n                          !memorandum.current?.value\n                          ||\n                          docType === \"corpAddress\" &&\n                          !corpAddressRef.current?.value\n                          ||\n                          docType === \"certificate\" &&\n                          !certificateRef.current?.value\n                          ||\n                          docType === \"Additional\" &&\n                          !additionalRef.current?.value\n                          ||\n                          docType === \"ID\" &&\n                          secondSelect === \"ID\" &&\n                          !backSideRef.current?.value\n                          ||\n                          docType === \"ID\" &&\n                          secondSelect === \"Passport\" &&\n                          !requiredPassportRef.current?.value\n                          ||\n                          props.uploading\n                        }\n                      >\n                        {\n                          props.uploading && props.uploadClear === 0\n                            ? <Spinner />\n                            : props.t(\"Submit\")\n                        }\n                      </Button>\n                    </div>\n                    <div className=\"text-muted\">\n                      ({props.t(\"Maximum size of document 5MB\")}) {props.t(\"Allow File Formats\")} *jpg, *png, *pdf\n                    </div>\n                  </ReactStrapForm>\n                )}\n\n              </Formik>\n            </Container>\n          </CardWrapper>\n        </Col>\n        <Col lg={3}>\n          <CardWrapper className=\"h-100 glass-card shadow\">\n            <div className=\"kyc-requirements\">\n              <p className=\"fw-bold color-primary\">\n                {props.t(\"KYC Requirements\")}\n              </p>\n              <p className=\"mt-2 color-primary\">\n                {props.t(\"Corporate Status\")}\n              </p>\n              <div className=\"proofs-container w-100\">\n                <button\n                  className=\"btn text-start py-2 w-100 border mt-1\"\n                  disabled={props.documents?.find((x) => (x.type === \"MEMORANDUM\"))}\n                  onClick={() => (setDocType(\"memorandum\"))}\n                  style={{\n                    boxShadow: memorandumUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: memorandumUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Memoradum of Association\")}\n                </button>\n                <button\n                  className=\"btn text-start py-2 w-100 border mt-2\"\n                  disabled={props.documents?.find((x) => (x.type === \"CERTIFICATE_OF_INCORPORATION\"))}\n                  onClick={() => (setDocType(\"corpAddress\"))}\n                  style={{\n                    boxShadow: certificateUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: certificateUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Certificate of Incorporation\")}\n                </button>\n                <button\n                  className=\"btn text-start py-2 w-100 border mt-2\"\n                  disabled={props.documents?.find((x) => (x.type === \"CORPORATE_ADDRESS\"))}\n                  onClick={() => (setDocType(\"corpAddress\"))}\n                  style={{\n                    boxShadow: corpAddressUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: corpAddressUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Corporate Address\")}\n                </button>\n\n                <p className=\"mt-2 color-primary\">\n                  {props.t(\"Corporate Personnel Status\")}\n                </p>\n                <p className=\"mt-2 color-primary\">{props.t(\"Authorized Person\")}</p>\n                <p>\n                  {props.clientData.corporateInfo?.authorizedPerson?.firstName} {props.clientData.corporateInfo?.authorizedPerson?.lastName}\n                </p>\n                <button\n                  className=\"btn text-start py-2 border-bottom w-100 border mt-1\"\n                  style={{\n                    boxShadow: authIdUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: authIdUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                  disabled={props.documents?.find((x) => (x.type === \"ID\" && x.subType === \"AUTHORIZED_PERSON\"))}\n                  onClick={() => {\n                    setDocType(\"ID\");\n                    setPersonnel(\"AUTHORIZED_PERSON\");\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Proof of ID\")}\n                </button>\n                <button\n                  className=\"btn text-start py-2 border-bottom w-100 border mt-1\"\n                  style={{\n                    boxShadow: authIdUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: authIdUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                  disabled={props.documents?.find((x) => (x.type === \"ADDRESS\" && x.subType === \"AUTHORIZED_PERSON\"))}\n                  onClick={() => {\n                    setDocType(\"address\");\n                    setPersonnel(\"AUTHORIZED_PERSON\");\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Proof of Address\")}\n                </button>\n                <p className=\"mt-3 color-primary\">{props.t(\"Shareholders\")}</p>\n                {props.clientData.corporateInfo.shareholders &&\n                  props.clientData.corporateInfo.shareholders.map((shareholder, index) => (\n                    <Fragment key={index}>\n                      <p className=\"mt-1 mb-2\">\n                        {shareholder.firstName} {shareholder.lastName}\n                      </p>\n                      <button\n                        className=\"btn text-start py-2 border-bottom w-100 border\"\n                        style={{\n                          boxShadow: props.documents?.find((x) => (x.type === \"ID\" && x.subType === \"SHAREHOLDER\" && x.shareholderId === shareholder._id))\n                            ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\"\n                            : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                        }}\n                        disabled={props.documents?.find((x) => (x.type === \"ID\" && x.subType === \"SHAREHOLDER\" && x.shareholderId === shareholder._id))}\n                        onClick={() => {\n                          setDocType(\"ID\");\n                          setPersonnel(\"SHAREHOLDER\");\n                          setShareholderId(shareholder._id);\n                        }}\n                      >\n                        <i className=\"mdi mdi-file-document-multiple me-3\" />\n                        {props.t(\"Proof of ID\")}\n                      </button>\n                      <button\n                        className=\"btn text-start py-2 border-bottom w-100 border mt-1 mb-2\"\n                        style={{\n                          boxShadow: uploadedShareholderAddresses.includes(shareholder._id)\n                            ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\"\n                            : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                        }}\n                        disabled={props.documents?.find((x) => (x.type === \"ADDRESS\" && x.subType === \"SHAREHOLDER\" && x.shareholderId === shareholder._id))}\n                        onClick={() => {\n                          setDocType(\"address\");\n                          setPersonnel(\"SHAREHOLDER\");\n                          setShareholderId(shareholder._id);\n                        }}\n                      >\n                        <i className=\"mdi mdi-file-document-multiple me-3\" />\n                        {props.t(\"Proof of Address\")}\n                      </button>\n                    </Fragment>\n                  ))\n                }\n              </div>\n            </div>\n          </CardWrapper>\n        </Col>\n      </Row>\n    </Container >\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  uploadClear: state.documents.uploadClear,\n  documents: state.documents.documents,\n  clientData: state.Profile.clientData,\n  uploading: state.documents.uploading,\n  uploadError: state.documents.uploadError,\n  uploadSuccessMessage: state.documents.uploadSuccessMessage\n});\n\nexport default connect(mapStateToProps, null)(withTranslation()(DocumentCorpUpload)); ","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/DocumentsUpload.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/DocumnetsList.js",["2138","2139"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spinner } from \"reactstrap\";\n\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport CustomTable from \"../../components/Common/CustomTable\";\nimport * as content from \"content\";\nimport axios from \"axios\";\n\nfunction DocumentList(props) {\n  const imagesUrl = content.imagesUrl;\n\n  const docs = props.documents?.map((obj) => {\n    let arr = [obj.file1];\n    if (obj.file2) {\n      arr.push({ originalname: \" \" });\n      arr.push(obj.file2);\n    }\n    obj.files = arr;\n\n    return obj;\n  });\n\n  // const [deleteModal, setDeleteModal] = React.useState({\n  //   show: false,\n  //   documentId: null,\n  //   clientId: null,\n  // });\n\n  function titleCase(str) {\n    let tmpArr = str.toLowerCase().split(\"_\");\n\n    return tmpArr\n      .map((obj) => {\n        return obj[0].toUpperCase() + obj.slice(1);\n      })\n      .join(\" \");\n  }\n\n  function getFileLink(obj, index, id) {\n    if (!obj || !obj.url) return <></>;\n    const getSecureLink = () => {\n      axios.get(`${content.apiUrl}/api/v1/crm/documents/${id}/${index}`, {\n        headers: {\n          \"Authorization\": `Bearer ${JSON.parse(localStorage.getItem(\"authUser\"))?.token}`\n        }\n      }).then(res => {\n        window.open(res.data.result, \"_blank\");\n      }\n      ).catch(err => {\n        console.log(err);\n      });\n    };\n    return <div><a onClick={() => getSecureLink(obj.url)} style={{\n      color: \"#405189\",\n      cursor: \"pointer\"\n    }}  >{obj?.filename?.split(\"/\")?.pop() || obj?.fileName?.split(\"/\")?.pop() || index}</a></div>;\n  }\n\n  const getClientName = (id) => {\n    const client = props.clientData?.corporateInfo?.shareholders?.find((obj) => obj._id === id);\n    if (!id) {\n      const auth = props.clientData?.corporateInfo?.authorizedPerson;\n      return auth?.firstName + \" \" + auth?.lastName;\n    }\n    return client?.firstName + \" \" + client?.lastName;\n  };\n\n  const columns = [\n    {\n      dataField: \"createdAt\",\n      text: props.t(\"Created Date\"),\n      formatter: (val) => new Date(val.createdAt).toLocaleDateString(),\n    },\n    {\n      dataField: \"type\",\n      text: props.t(\"Type\"),\n      formatter: (val) => `${titleCase(val.type)} ${val.subType ? `- ${titleCase(val.subType)} (${titleCase(getClientName(val.shareholderId))})` : \"\"}`,\n    },\n    {\n      dataField: \"files\",\n      text: props.t(\"Files\"),\n      formatter: (val) => val.files.map((obj, index) => getFileLink(obj, index + 1, val?._id)),\n    },\n    {\n      dataField: \"status\",\n      text: props.t(\"Status\"),\n      formatter: (val) => titleCase(val.status),\n    },\n    {\n      dataField: \"status\",\n      text: \"\",\n      formatter: (val) => {\n        return val.rejectionReason ? val.rejectionReason : \"\";\n      },\n    },\n  ];\n  if (props.loading) {\n    return (\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <Spinner />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {props.documents?.length > 0 ? (\n        <CustomTable columns={columns} rows={docs} />\n      ) : (\n        <div className=\"d-flex align-items-center justify-content-center\" style={{ width: \"100%\" }}>\n          {props.t(\"No document uploaded\")}\n        </div>\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.documents.loading,\n  clearChangeStatus: state.documents.clearChangeStatus,\n  clearDelete: state.documents.clearDelete,\n  documents: state.documents.documents,\n  clientData: state.Profile.clientData,\n  error: state.documents.error,\n});\nexport default connect(mapStateToProps, null)(withTranslation()(DocumentList));\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/DeleteModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/hooks/useModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Forex/Common/Badge.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/tradingSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/feedSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/calenderSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/investorSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/CustomDropDown.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BankAccounts/ShowDetails.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/BankAccounts/EditBankAccountModal.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/masterSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/historySvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/documentSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/inventorySvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/ibTransferSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/profileSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/affiliateSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/IbPortal/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/reportSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/Silder.js",["2140"],"import React from \"react\";\nimport OwlCarousel from \"react-owl-carousel\";\nimport \"owl.carousel/dist/assets/owl.carousel.css\";\nimport \"owl.carousel/dist/assets/owl.theme.default.css\";\nimport { withTranslation } from \"react-i18next\";\n\nconst Slider = (props) => {\n  const options = {\n    items: 1,\n    loop: true,\n    autoplay: true,\n    autoplayTimeout: 3000,\n  };\n  return (\n    <div className='slider slider_home mb-3'>\n      <div className='slider__container'>\n        <OwlCarousel style={{ direction: \"ltr\" }} className=\"owl-theme\" {...options}>\n          <div className=\" justify-content-center align-items-center p-relative\">\n            <div className=\"\"  style={{\n              position: \"static\", \n              width: \"100%\"\n            }}>\n              <img src=\"img/banner.png\" alt=\"\" />\n            </div>\n          </div> \n          {/* <div className=\" justify-content-center align-items-center p-relative\">\n            <div className=\"\" style={{\n              position: \"static\", \n              width: \"100%\"\n            }}>\n              <img src=\"img/slider2.png\" alt=\"\" />\n            </div>            \n          </div> \n          <div className=\" justify-content-center align-items-center p-relative\">\n            <div className=\"\" style={{\n              position: \"static\", \n              width: \"100%\"\n            }}>\n              <img src=\"img/slider3.png\" alt=\"\" />\n            </div>            \n          </div>  */}\n        </OwlCarousel>\n      </div>\n    </div>\n  );\n};\nexport default withTranslation()(Slider); ","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/partnershipSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/webTraderSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/platformSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/transferSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/common/helpers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/Sumsub/index.js",["2141","2142","2143","2144","2145","2146","2147"],"import React, {\n  useEffect, useMemo, useState\n} from \"react\";\nimport SumsubWebSdk from \"@sumsub/websdk-react\";\nimport { useSelector } from \"react-redux\";\nimport { generateSDK } from \"apis/sumsub\";\n\nexport default function Sumsub() {\n  const [accessSDKToken, setAccessSDKToken] = useState(\"\");\n\n  const { email, language, _id } = useSelector(state => state.Profile.clientData);\n\n  const handler = () => Promise.resolve(\"\");\n\n  useEffect(() => {\n    _id && generateSDK(_id).then(({ token }) => setAccessSDKToken(token)).catch((error) => console.log(error));\n  }, [_id]);\n\n  useEffect(() => {\n    console.log(accessSDKToken, _id);\n  }, [accessSDKToken]);\n  \n  const config = useMemo(\n    () => ({\n      lang: language,\n      email: email,\n      i18n: {\n        document: {\n          subTitles: {\n            IDENTITY: \"Upload a document that proves your identity\",\n          },\n        },\n        status: {\n          pendingTitle:\n            \"Thank you. \\n\\n You have completed the identity verification process.\",\n          pendingText:\n            \" The verification status will update below automatically. You can now close this page. We will follow-up with you if we need anything else or have any questions.\",\n        },\n      },\n      onMessage: (type, payload) => {\n        console.log(\"WebSDK onMessage\", type, payload);\n      },\n      onError: (error) => {\n        console.error(\"WebSDK onError\", error);\n      },\n    }),\n    [email]\n  );\n\n  useEffect(() => {\n    config.email = email;\n  }, [email, config]);\n\n  const options = {\n    addViewportTag: false,\n    adaptIframeHeight: true\n  };\n\n  const messageHandler = (type, payload) => {\n    console.log(\"onMessage: \", type, payload);\n  };\n\n  const errorHandler = (data) => console.log(\"onError: \", data);\n\n  console.log(accessSDKToken);\n\n  return (\n    <div>\n      {accessSDKToken && <SumsubWebSdk\n        accessToken={accessSDKToken}\n        expirationHandler={handler}\n        config={config}\n        options={options}\n        onMessage={messageHandler}\n        onError={errorHandler}\n      />}\n    </div>\n  );\n}\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/depositSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/moneyBagSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/withdrawSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/walletSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/accountSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/dotSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/Sidebar/icons/dashboardSvg.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/reducers.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sockets/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ForexLayout/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ForexLayout/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/SplineArea.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/wallets.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/sagas.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/accounts/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Slider/DefaultSlider.js",["2148","2149"],"import React from \"react\";\r\n// import OwlCarousel from \"react-owl-carousel\";\r\n// import { Col } from \"reactstrap\";\r\n// import \"owl.carousel/dist/assets/owl.carousel.css\";\r\n// import \"owl.carousel/dist/assets/owl.theme.default.css\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport def from \"assets/img/095aeba3-4cc0-44b7-b786-c03832affe92.png\";\r\n\r\nconst Slider = (props) => {\r\n  return (\r\n    <div className='slider slider_home mb-3'>\r\n      <div className='slider__container rounded'>\r\n        {/* <OwlCarousel style={{ direction: \"ltr\" }} className=\"owl-theme\" loop items={1}>\r\n          <div className=\"rounded\">\r\n            <div className=\"w-100\">\r\n              <img src={def} alt=\"\" className=\"img-fluid rounded\" />\r\n            </div>\r\n          </div>\r\n        </OwlCarousel> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Slider);\r\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/IbPortal/LiveAndDemoClients.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Dashboard/IbPortal/Summary.js",["2150","2151","2152"],"import { getIbDashboardSummary, getIbWallet } from \"apis/forex/ib\";\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n// eslint-disable-next-line object-curly-newline\nimport { CardText, Col, Row, Spinner } from \"reactstrap\";\nimport Select, { components } from \"react-select\";\nimport { useSelector } from \"react-redux\";\nconst { SingleValue, Option } = components;\n\nconst PlatformSelect = (props) => {\n  const { layoutMode } = useSelector((state) => state.Layout);\n  const { t } = useTranslation();\n\n  const IconSingleValue = (props) => (\n    <SingleValue {...props}>\n      <div\n        className=\"color-primary font-weight-bold border-0\"\n        style={{ fontSize: \"12px\" }}\n      >\n        {t(\"Platform\")}\n      </div>\n      <div style={{ fontWeight: \"bold\" }}>{props.data.label}</div>\n    </SingleValue>\n  );\n\n  const IconOption = (props) => <Option {...props}>{props.data.label}</Option>;\n  const customStyles = {\n    dropdownIndicator: (provided) => ({\n      ...provided,\n      color: layoutMode === \"dark\" ? \"white\" : \"#495057\",\n      padding: 0,\n      backgroundColor: \"transparent\",\n      paddingRight: \"5px\",\n    }),\n    indicatorSeparator: (provided) => ({\n      ...provided,\n      display: \"none\",\n    }),\n    control: (provided) => {\n      if (layoutMode === \"dark\") {\n        return {\n          ...provided,\n          backgroundColor: \"#1A2A3E\",\n          boxShadow: \"0 0.125rem 0.25rem #0B182F\",\n          border: 0,\n          color: \"#adb5bd\",\n          height: \"100%\",\n          padding: \"10px\",\n        };\n      }\n      return {\n        ...provided,\n        borderRadius: \"10px\",\n        padding: \"10px\",\n        height: \"100%\",\n        border: \"0px\",\n        boxShadow: \"0 0.5rem 1rem rgb(0 0 0 / 10%)\",\n        cursor: \"pointer\",\n        background: \"transparent\",\n      };\n    },\n    menu: (provided) => ({\n      ...provided,\n      backgroundColor: layoutMode === \"dark\" ? \"#242632\" : \"white\",\n      color: layoutMode === \"dark\" ? \"#adb5bd\" : \"#495057\",\n      zIndex: 3,\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      display: state.isDisabled ? \"none\" : \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      color: layoutMode === \"dark\" ? \"#adb5bd\" : \"#495057\",\n      padding: \"10px\",\n    }),\n    singleValue: (provided) => {\n      return {\n        ...provided,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        color: layoutMode === \"dark\" ? \"#adb5bd\" : \"#495057\",\n      };\n    },\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: \"transparent\",\n        }}\n      >\n        <Select\n          {...props}\n          className={\"basic-single color-primary shadow border-0\"}\n          placeholder={t(\"Select Platform\")}\n          styles={customStyles}\n          onInputChange={(input) => {\n            if (input !== \"\") {\n              if (!/^-?\\d*\\.?\\d*$/.test(input)) {\n                return \"\";\n              }\n            }\n            return input;\n          }}\n          components={{\n            SingleValue: IconSingleValue,\n            Option: IconOption,\n          }}\n          options={props.options}\n        />\n      </div>\n    </>\n  );\n};\nfunction Summary() {\n  const { t } = useTranslation();\n  const { ibMT5Acc } = useSelector((state) => state.Profile.clientData.fx);\n  const [selectedPlatform, setSelectedPlatform] = useState({\n    label: `MT5${ibMT5Acc.length > 0 ? ` (${ibMT5Acc[0]})` : \"\"}`,\n    value: \"MT5\",\n  });\n  const [state, setState] = useState({\n    loading: false,\n  });\n  const [wallet, setWallet] = useState({\n    amount: 0,\n    frozenAmount: 0,\n  });\n  const [walletLoading, setWalletLoading] = useState(false);\n  const getSummary = async () => {\n    setState({\n      ...state,\n      loading: true,\n    });\n    const result = await getIbDashboardSummary({\n      platform: selectedPlatform.value,\n    });\n    if (result.status)\n      setState({\n        ...state,\n        loading: false,\n        ...result.result,\n      });\n    else\n      setState({\n        ...state,\n        loading: false,\n      });\n  };\n  useEffect(() => {\n    getSummary();\n  }, [selectedPlatform]);\n\n  useEffect(()=>{\n    setWalletLoading(true);\n    getIbWallet().then((res)=>{\n      if (res.isSuccess) {\n        setWallet({\n          ...res.result,\n        });\n      } else {\n        throw new Error(res.message);\n      }\n    }).catch((err)=>{\n      console.log(err);\n    }).finally(()=>{\n      setWalletLoading(false);\n    });\n  }, []);\n\n  return ( \n    <>\n      <CardWrapper className=\"accounts-tab shadow glass-card\">\n        <div className=\"d-flex justify-content-between pb-2\">\n          <h5 className=\"color-primary\">{t(\"Summary\")}</h5>\n        </div>\n        <CardText className=\"mb-0\">\n          {state.loading  || walletLoading ? <div className=\"d-flex align-items-center justify-conten-center\">\n            <Spinner></Spinner>\n          </div> : <Row>\n            <Row>\n              {/* <Col xs={4}>\n                <div className=\"mb-3\">\n                  {ibMT5Acc.length > 0 && <PlatformSelect\n                    options={[{\n                      label: `MT5${ibMT5Acc.length > 0 ? ` (${ibMT5Acc[0]})` : \"\"}`,\n                      value: \"MT5\",\n                    },\n                    {\n                      label: \"MT4\",\n                      value: \"MT4\"\n                    }]}\n                    value={selectedPlatform}\n                    onChange={(e)=>{\n                      setSelectedPlatform(e);\n                    }}\n                    defaultValue={{\n                      label: `MT5${ibMT5Acc.length > 0 ? ` (${ibMT5Acc[0]})` : \"\"}`,\n                      value: \"MT5\" \n                    }}\n                    type=\"number\"\n                  >\n                  </PlatformSelect>}\n                </div>\n              </Col> */}\n              <Col xs={4}>\n                <div  className=\"acc-tab-card mb-3 shadow-lg border-0\" >\n                  <div>\n                    <div className=\"acc-tab-card-title\" style={{ \"fontSize\": \"12px\" }}>\n                      {t(\"IB Equity\")}\n                    </div>\n                    <div className=\"acc-tab-card-desc\">\n                      {wallet.amount} $\n                    </div>\n                  </div>\n                </div>\n              </Col>\n              <Col xs={4}>\n                <div  className=\"acc-tab-card mb-3 shadow-lg border-0\" >\n                  <div>\n                    <div className=\"acc-tab-card-title\" style={{ \"fontSize\": \"12px\" }}>\n                      {t(\"IB Frozen Balance\")}\n                    </div>\n                    <div className=\"acc-tab-card-desc\">\n                      {wallet?.freezeAmount} $\n                    </div>\n                  </div>\n                  </div>\n                </Col>\n                <Col xs={12} lg={4}>\n                  <div className=\"acc-tab-card mb-3 shadow-lg border-0\">\n                    <div>\n                      <div\n                        className=\"acc-tab-card-title\"\n                        style={{ fontSize: \"12px\" }}\n                      >\n                        {t(\"Clients Current Equity\")}\n                      </div>\n                      <div className=\"acc-tab-card-desc\">\n                        {t(`${state.clientsEquity | \"-\"} $`)}\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col xs={12} lg={3}>\n                  <div className=\"acc-tab-card mb-3 shadow-lg border-0\">\n                    <div>\n                      <div\n                        className=\"acc-tab-card-title\"\n                        style={{ fontSize: \"12px\" }}\n                      >\n                        {t(\"Total Clients Deposit\")}\n                      </div>\n                      <div className=\"acc-tab-card-desc\">\n                        {t(`${state.deposit | \"-\"} $`)}\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n                <Col xs={12} lg={3}>\n                  <div className=\"acc-tab-card mb-3 shadow-lg border-0\">\n                    <div>\n                      <div\n                        className=\"acc-tab-card-title\"\n                        style={{ fontSize: \"12px\" }}\n                      >\n                        {t(\"Total Client Withdrawal\")}\n                      </div>\n                      <div className=\"acc-tab-card-desc color-yellow\">\n                        {t(`${state.withdraw | \"-\"} $`)}\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n                <Col xs={12} lg={3}>\n                  <div className=\"acc-tab-card mb-3 shadow-lg border-0\">\n                    <div>\n                      <div\n                        className=\"acc-tab-card-title\"\n                        style={{ fontSize: \"12px\" }}\n                      >\n                        {t(\"Total Live Clients\")}\n                      </div>\n                      <div className=\"acc-tab-card-desc text-success\">\n                        {t(state.live | \"-\")}\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n                <Col xs={12} lg={3}>\n                  <div className=\"acc-tab-card mb-3 shadow-lg border-0\">\n                    <div>\n                      <div\n                        className=\"acc-tab-card-title\"\n                        style={{ fontSize: \"12px\" }}\n                      >\n                        {t(\"Total Demo Clients\")}\n                      </div>\n                      <div className=\"acc-tab-card-desc text-warning\">\n                        {t(state.demo | \"-\")}\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </Row>}\n        </CardText>\n      </CardWrapper>\n    </>\n  );\n}\n\nexport default withTranslation()(Summary);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sockets/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ForexLayout/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/actions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/notifications/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/subscriptions/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/conversionRates/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Forex/Widget/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/IBJourney.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/logs/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/documents/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/assets/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/sockets/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/twoFactorAuth/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/checkEmail/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/accounts.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/profile/saga.js",["2153","2154"],"import {\n  takeEvery, fork, put, all, call, takeLatest\n} from \"redux-saga/effects\";\nimport {\n  fetchProfileAPI,\n  editProfileAPI,\n  submitProfileAPI,\n  convertProfileAPI,\n  uploadPorfileAvatarAPI,\n  editProfileSettingsAPI\n} from \"../../../../apis/profile\";\n// Login Redux States\nimport {\n  EDIT_PROFILE,\n  FETCH_PROFILE_START,\n  SUBMIT_IND_PROFILE_START,\n\n  CONVERT_PROFILE_REQUESTED,\n  UPLOAD_PROFILE_AVATAR_START,\n  DELETE_PROFILE_AVATAR_START,\n  UPDATE_PROFILE_SETTINGS\n} from \"./actionTypes\";\nimport {\n  profileSuccess,\n  profileError,\n  editProfileSuccess,\n  submitIndProfileDone,\n\n  convertProfileSuccess,\n  convertProfileFail,\n  uploadProfileAvatarEnd,\n  deleteAvatarImageEnd,\n  updateProfileSettingsSuccess,\n  updateProfileSettingsFail\n} from \"./actions\";\nimport { showErrorNotification, showSuccessNotification } from \"../../notifications/actions\";\nimport { logoutUser } from \"../login/actions\";\nimport { CUSTOMER_SUB_PORTALS } from \"common/constants\";\nimport { switchSubPortal } from \"store/actions\";\n\nfunction* editProfile({ payload: { user } }) {\n  try {\n    const result = yield call(editProfileAPI, user);\n    yield put(editProfileSuccess(result));\n  } catch (error) {\n    yield put(profileError(error.message));\n  }\n}\n\nfunction* fetchProfile({ payload }) {\n  try {\n    const data = yield call(fetchProfileAPI);\n    if (data.fx.isIb && !data.fx.isClient) yield put(switchSubPortal(CUSTOMER_SUB_PORTALS.IB));\n    yield put(profileSuccess(data));\n  }\n  catch (error) {\n    yield put(profileError(error.message));\n    yield put(logoutUser(payload.history));\n  }\n}\n\nfunction* submmitIndProfile({ payload }) {\n  try {\n\n    const data = yield call(submitProfileAPI, payload);\n    yield put(submitIndProfileDone({ stages: data }));\n    yield put(showSuccessNotification(\"Profile completed successfully\"));\n  }\n  catch (error) {\n    yield put(submitIndProfileDone({\n      error: error.message\n    }));\n  }\n}\n\nfunction* convertProfile() {\n  try {\n    const data = yield call(convertProfileAPI);\n    yield put(convertProfileSuccess(data));\n    yield put(showSuccessNotification(\"Profile converted successfully, Please log in again\"));\n  } catch (error) {\n    yield put(convertProfileFail({ error: error.message }));\n    yield put(showErrorNotification(error.message));\n  }\n}\n\nfunction* uploadProfileImage({ payload, callback }) {\n  try {\n    const imageFile = payload;\n    const formData = new FormData();\n    formData.append(\"type\", \"ProfileImage\");\n    formData.append(\"images\", imageFile);\n\n    const data = yield call(uploadPorfileAvatarAPI, formData);\n    yield put(uploadProfileAvatarEnd({ success: data }));\n    yield put(showSuccessNotification(\"Profile avatar uploaded successfully\"));\n    if (callback) {\n      callback();\n    }\n  } catch (error) {\n    yield put(uploadProfileAvatarEnd({ error: error.message }));\n    yield put(showErrorNotification(error.message));\n  }\n}\n\nfunction* deleteAvatarImage({ callback }) {\n  try {\n    const data = yield call(uploadPorfileAvatarAPI, { avatarImage: \"\" });\n    yield put(deleteAvatarImageEnd({ success: data }));\n    yield put(showSuccessNotification(\"Profile avatar deleted successfully\"));\n    if (callback) {\n      callback();\n    }\n  } catch (error) {\n    yield put(deleteAvatarImageEnd({ error: error.message }));\n    yield put(showErrorNotification(error.message));\n  }\n}\n\nfunction* updateProfileSettings({ payload }) {\n  try {\n    const data = yield call(editProfileSettingsAPI, payload);\n    console.log(\"testing\", data);\n    console.log(\"testing\", payload);\n    yield put(updateProfileSettingsSuccess(payload));\n    yield put(showSuccessNotification(\"Profile settings updated successfully\"));\n  } catch (error) {\n    yield put(updateProfileSettingsFail({ error: error.message }));\n    yield put(showErrorNotification(error.message));\n  }\n}\n\nexport function* watchProfile() {\n  yield takeEvery(EDIT_PROFILE, editProfile);\n  yield takeEvery(FETCH_PROFILE_START, fetchProfile);\n  yield takeEvery(SUBMIT_IND_PROFILE_START, submmitIndProfile);\n  yield takeEvery(CONVERT_PROFILE_REQUESTED, convertProfile);\n  yield takeLatest(UPLOAD_PROFILE_AVATAR_START, uploadProfileImage);\n  yield takeLatest(DELETE_PROFILE_AVATAR_START, deleteAvatarImage);\n  yield takeLatest(UPDATE_PROFILE_SETTINGS, updateProfileSettings);\n}\n\nfunction* ProfileSaga() {\n  yield all([fork(watchProfile)]);\n}\n\nexport default ProfileSaga;\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/login/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/layout/saga.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/withdrawal/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/transactions/deposit/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/bankAccount/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/resetPassword/actionsType.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/kline/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/deposit/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orders/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/orderBooks/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/sumsub.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/contacts/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/chat/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/requests.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/transactions/actionTypes.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/transactions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/fakebackend_helper.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/markets.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/orders.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/orderBooks.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/notifications.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/conversionRate.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/subscriptions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/dictionary.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/calendar/reducer.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/constants/layout.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/assets.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/register.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/profile.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/auth.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/documents.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/logs.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/convert.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/transactions.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/url_helper.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/api_helper.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/resetPassword.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/jwt-token-access/accessToken.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/Slider.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/RightContent/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/CryptoData.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/PortalEntryPoint.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/VerticalLayout/CryptoSidebarContent.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Journey/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/RightSidebar.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/Menus/LightDark.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js",["2155"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown, DropdownToggle, DropdownMenu, Row, Col\n} from \"reactstrap\";\nimport SimpleBar from \"simplebar-react\";\n\n//Import Icons\nimport FeatherIcon from \"feather-icons-react\";\n\n//i18n\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchNotifications, markNotificationRead } from \"store/general/notifications/actions\";\nimport NotificationDropdownItem from \"./NotificationDropdownItem\";\nimport TableLoader from \"components/Common/Loader\";\n\nconst NotificationDropdown = props => {\n  const { t } = useTranslation();\n  // Declare a new state variable, which we'll call \"menu\"\n  const [menu, setMenu] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    notifications,\n    totalUnreadNotifications,\n    loading,\n    layoutMode,\n  } = useSelector(state => ({\n    notifications: state.notificationsReducer?.unreadNotifications?.docs || [],\n    totalUnreadNotifications: state.notificationsReducer?.unreadNotifications?.totalDocs || 0,\n    loading: state.notificationsReducer?.loading || false,\n    layoutMode: state.Layout.layoutMode,\n  }));\n\n  useEffect(() => {\n    dispatch(fetchNotifications({\n      page: 1,\n      limit: 10,\n      read: false,\n    }));\n  }, []);\n\n  const markAsRead = () => {\n    dispatch(markNotificationRead({\n      all: true\n    }));\n  };\n\n  return (\n    <React.Fragment>\n      <Dropdown\n        isOpen={menu}\n        toggle={() => setMenu(!menu)}\n        className=\"dropdown d-inline-block\"\n        tag=\"li\"\n      >\n        <DropdownToggle\n          className=\"btn header-item noti-icon position-relative\"\n          tag=\"button\"\n          id=\"page-header-notifications-dropdown\"\n        >\n          <FeatherIcon\n            icon=\"bell\"\n            className=\"icon-lg\"\n            color={layoutMode === \"dark\" ? \"#F89622\" : \"\"}\n          />\n          {totalUnreadNotifications !== 0 && (\n            <span className=\"badge bg-danger rounded-pill\">{totalUnreadNotifications}</span>\n          )}\n        </DropdownToggle>\n\n        <DropdownMenu className=\"dropdown-menu-lg dropdown-menu-end p-0\">\n          <div className=\"p-3\">\n            <Row className=\"align-items-center\">\n              <Col>\n                <h6 className=\"m-0\"> {t(\"Notifications\")} </h6>\n              </Col>\n              {\n                !loading && totalUnreadNotifications !== 0 && (\n                  <div className=\"col-auto\">\n                    <Link\n                      to=\"#\"\n                      className=\"small\"\n                      onClick={markAsRead}\n                    >\n                      {\" \"}\n                      <i className=\"mdi mdi-read me-1\"></i>\n                      {\" \"}\n                      {t(\"Mark all as read\")}\n                    </Link>\n                  </div>\n                )\n              }\n            </Row>\n          </div>\n\n          <SimpleBar style={{ height: \"300px\" }}>\n            {\n              loading && <TableLoader />\n            }\n            {\n              !loading && totalUnreadNotifications === 0 && (\n                <div className=\"text-center w-100 mt-4\">\n                  {t(\"You have read all your notifications!\")}\n                </div>\n              )\n            }\n            {\n              !loading && notifications?.map((notification, key) => (\n                <NotificationDropdownItem key={key} notification={notification} />\n              ))\n            }\n          </SimpleBar>\n          <div className=\"p-2 border-top d-grid\">\n            <Link\n              className=\"btn btn-sm btn-link font-size-14 btn-block text-center\"\n              to=\"/notifications\"\n            >\n              <i className=\"mdi mdi-arrow-right-circle me-1\"></i>\n              {\" \"}\n              {t(\"View all\")}{\" \"}\n            </Link>\n          </div>\n        </DropdownMenu>\n      </Dropdown>\n    </React.Fragment>\n  );\n};\n\nexport default NotificationDropdown;\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Page404.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/ForgetPassword.js",["2156","2157","2158"],"/* eslint-disable object-property-newline */\nimport MetaTags from \"react-meta-tags\";\nimport React from \"react\";\nimport {\n  Row, Col, Alert, Container, Spinner \n} from \"reactstrap\";\n\n//redux\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { withRouter, Link } from \"react-router-dom\";\n\n// availity-reactstrap-validation\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\n\n// action\nimport { userForgetPassword } from \"../../store/actions\";\n\n// import images\nimport CarouselPage from \"./CarouselPage\";\nimport { withTranslation } from \"react-i18next\";\nimport * as content from \"content\";\nimport LanguageDropdown from \"components/CommonForBoth/TopbarDropdown/LanguageDropdown\";\n\nconst ForgetPasswordPage = props => {\n  const dispatch = useDispatch();\n\n  const { forgetError, forgetSuccessMsg, loading } = useSelector(state => ({\n    forgetError: state.ForgetPassword.forgetError,\n    forgetSuccessMsg: state.ForgetPassword.forgetSuccessMsg,\n    loading: state.ForgetPassword.loading\n  }));\n\n  function handleValidSubmit(event, values) {\n    dispatch(userForgetPassword(values.email.toLowerCase()));\n  }\n\n  return (\n    <React.Fragment>\n      <MetaTags>\n        <title>\n          {props.t(\"Forget Password\")} | {content.clientName}\n        </title>\n      </MetaTags>\n      <div className=\"auth-page\">\n        <Container style={{ maxWidth: \"1150px\", marginBottom: \"100px\", marginTop: \"100px\" }} className=\"p-0\">\n          <Row style={{ fontFamily: \"Poppins\", borderTop: \"1px solid rgba(0,0,0,0.2)\", borderRadius: \"30px\", boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\"}} className=\"g-0 overflow-hidden\">\n            <Col md={6} style={{ boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\", borderRadius: \"30px\" }} className=\"d-none d-md-flex flex-column justify-content-start align-items-start p-5\">\n                                  <h2 style={{ fontSize: 35, fontWeight: \"bold\", color: \"#057A25\" }}>Forgot Your <br /> Password?</h2>\n                                  <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                  No worries — we’ve got you covered.\n                                  </p>\n                                  <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                  Enter your registered email address to receive a password reset link and regain access to your account.\n                                  </p>\n                                  <p style={{ color: \"#E4B200\" }} className=\"fw-bold mt-3 mb-1 fs-4\">Start smarter trading today</p>\n                                  <p className=\"fs-6\">\n                                    Start your trading journey with confidence at Go Wize Markets.\n                                  </p>\n                                  <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                    Join thousands of traders who trust our platform to achieve their financial goals with ease and security.\n                                  </p>\n                                  <p className=\"mt-1 fs-6\">\n                                    Register now and access professional tools to support your investment decisions.\n                                  </p>\n                                  <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                    From real-time data to advanced analytics – everything you need to trade smarter is just a few clicks away.\n                                  </p>\n                                  <div className=\"mt-3\">\n                                    <img src={content.sign_logo} alt=\"logo\" height=\"50\" />\n                                  </div>\n                                </Col>\n            <Col lg={6} sm={12} className=\"col-xxl-3\">\n              <div className=\"auth-full-page-content d-flex p-sm-5 p-4\">\n                <div style={{\n                  position: \"absolute\",\n                  display: \"block\",\n                  top: -20,\n                  right: 0,\n                  zIndex: 999,\n                }}>\n                  <LanguageDropdown />\n                </div>\n                <div className=\"w-100\">\n                  <div className=\"d-flex flex-column h-100 justify-content-center \">\n                    {/* <div className=\"mb-4 mb-md-5 text-center\">\n                      <Link to=\"/dashboard\" className=\"d-block auth-logo\">\n                        <img src={content.mainLogo} alt=\"\" height=\"28\" /> <span className=\"logo-txt\">{props.t(content.clientName)}</span>\n                      </Link>\n                    </div> */}\n                    <div className=\"auth-content my-auto\">\n                      <div className=\"text-center\">\n                        <h5 className=\"mb-0\" style={{ fontSize: \"40px\", fontWeight: \"bold\", color: \"#E4B200\" }}>{props.t(\"Reset Password\")}</h5>\n                        {/* <p className=\"text-muted mt-2\">{props.t(`Reset Password with ${content.clientName}.`)}</p> */}\n                      </div>\n\n                      {forgetError && forgetError ? (\n                        <Alert color=\"danger\" style={{ marginTop: \"13px\" }}>\n                          {props.t(forgetError)} \n                        </Alert>\n                      ) : null}\n                      {forgetSuccessMsg ? (\n                        <Alert color=\"success\" style={{ marginTop: \"13px\" }}>\n                          {props.t(forgetSuccessMsg)}\n                        </Alert>\n                      ) : null}\n\n                      <AvForm className=\"custom-form mt-4\"\n                        onValidSubmit={(e, v) => handleValidSubmit(e, v)}\n                      >\n                        <div className=\"mb-3\">\n                          <AvField\n                            name=\"email\"\n                            // label={props.t(\"Email\")}\n                            className=\"form-control\"\n                            style={{ borderRadius: \"24px\" }}\n                            placeholder={props.t(\"Email\")}\n                            errorMessage={props.t(\"Enter valid email\")}\n                            validate={{\n                              required: {\n                                value: true,\n                              },\n                              email:{\n                                value:true,\n                              }\n                            }}\n                            type=\"email\"\n                          />\n                        </div>\n                        <div className=\"mb-3 mt-4\">\n                          <button style={{ borderRadius: \"24px\" }} disabled={loading} className=\"btn btn-primary w-100 waves-effect waves-light\" type=\"submit\">{loading ? <Spinner style={{\n                            width:\"1.5rem\",\n                            height:\"1.5rem\"  \n                          }} /> : props.t(\"Reset\")}</button>\n                        </div>\n                      </AvForm>\n\n                      <div className=\"mt-5 text-center\">\n                        <p className=\"text-muted mb-0\">{props.t(\"Remember It ?\")}  <a href=\"login\"\n                          className=\"text-primary fw-semibold\"> {props.t(\"Sign In\")} </a> </p>\n                      </div>\n                    </div>\n                    <div className=\"mt-4 mt-md-5 text-center\">\n                      <p className=\"mb-0\">© {new Date().getFullYear()}{props.t(` ${content.clientName}. Crafted with`)}     <i className=\"mdi mdi-heart text-danger\"></i> by {content.clientName}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Col>\n            {/* <CarouselPage /> */}\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(withTranslation()(ForgetPasswordPage));\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Logout.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Crypto/CryptoDemoRegister.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/RightContent/WalletCard.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Crypto/Dashboard/RightContent/LatestActivities.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/CommonForBoth/TopbarDropdown/NotificationDropdownItem.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/ResetPassword.js",["2159","2160"],"/* eslint-disable no-empty-pattern */\nimport React, { useEffect } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport {\n  Row, Col, Alert, Container, Form, FormGroup, Label, Button, Spinner, Card\n} from \"reactstrap\";\nimport { withTranslation } from \"react-i18next\";\n\nimport {  apiError } from \"../../store/actions\";\n\n//redux\nimport {\n  useSelector, useDispatch,\n} from \"react-redux\";\n\nimport { \n  Link, \n  useHistory, \n  useLocation, \n  withRouter,\n} from \"react-router-dom\";\n\nimport * as content from \"content\";\nimport {\n  Formik, Field as FormikField, Form as FormikForm \n} from \"formik\";\nimport { CustomInput } from \"../../components/Common/CustomInput\";\nimport * as Yup from \"yup\";\nimport { resetPasswordStart } from \"store/general/auth/resetPassword/actions\";\nimport LanguageDropdown from \"components/CommonForBoth/TopbarDropdown/LanguageDropdown\";\n\n// eslint-disable-next-line no-useless-escape\nconst passwordRegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z!@#$%^&*()_,.?\":{}|<>\\d]{8,20}$/;\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string(\"\")\n    .min(8, \"Password must contain atleast 8 characters\")\n    .max(20, \"Password should not be more than 20 characters long\")\n    .matches(\n      passwordRegExp,\n      \"Atleast one lower case, upper case and number required\")\n    .required(\"Enter your password\"),\n});\n\nconst ResetPassword = props => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const { loading, error, success, message } = useSelector(state => ({\n    loading: state.resetPasswordReducer.loading,\n    error: state.resetPasswordReducer.error,\n    message: state.resetPasswordReducer.message,\n    success: state.resetPasswordReducer.success,\n  }));\n  const token = new URLSearchParams(location.search).get(\"token\") || \"\";\n\n  useEffect(() => {\n    dispatch(apiError(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (success) {\n      console.log(\"success\");\n      history.push(\"/login\");\n    }\n  }, [success]);\n\n  console.log(\"success\", success);\n\n\n  return (\n    <React.Fragment>\n      <MetaTags>\n        <title>{props.t(\"Register\")} | {props.t(\"Go Wize Markets\")}</title>\n      </MetaTags>\n      <div className=\"auth-page\">\n        <Container fluid className=\"p-0\">\n          <Row className=\"g-0\">\n            <Col lg={3} md={5} className=\"mx-auto\" style={{ margin: \"5rem auto\" }}>\n              <div style={{\n                position: \"absolute\",\n                display: \"block\",\n                top: -20,\n                right: 0,\n                zIndex: 999,\n              }}>\n                <LanguageDropdown />\n              </div>\n              <Card className=\"d-flex  p-sm-5 p-4  card-shadow\">\n                <div className=\"w-100\">\n                  <div className=\"d-flex flex-column h-100\">\n                    <div className=\"mb-4 mb-md-2 text-center\">\n                      <Link to=\"/dashboard\" className=\"d-block auth-logo\">\n                        <img src={content.mainLogo} alt=\"\" height=\"28\" /> <span className=\"logo-txt\"></span>\n                      </Link>\n                    </div>\n                    <div className=\"auth-content my-auto\">\n                      <div className=\"text-center mb-4 mb-md-3\">\n                        <h5 className=\"mb-0\">{props.t(\"Reset Password\")}</h5>\n                      </div>\n\n                      <Formik\n                        initialValues={{\n                          password: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={(values) => {\n                          dispatch(resetPasswordStart({\n                            ...values, \n                            token,\n                          }));\n                        }}>\n                        {({  }) => (\n                          <Form tag={FormikForm}>\n                            <FormGroup row>\n                              <Col xs={12}>\n                                <div className=\"mb-3\">\n                                  <Label for=\"password\">{props.t(\"New Password\")}</Label>\n                                  <FormikField\n                                    component={CustomInput}\n                                    name=\"password\"\n                                    className={\"mb-2\"}\n                                    type={\"password\"}\n                                  >\n                                  </FormikField>\n                                </div>\n                              </Col>\n                              <div className=\"mb-4 text-center\">\n                                <p className=\"text-muted mb-0\">{props.t(\"Remember your Password?\")}  <a href=\"login\"\n                                  className=\"text-primary fw-semibold\"> {props.t(\"Sign In\")} </a> </p>\n                              </div>\n                            </FormGroup>\n                            { error && error ? (\n                              <Alert color=\"danger\">{message}</Alert>\n                            ) : null}\n                            <Row>\n                              <Col xs={12} className=\"text-right\">\n                                <span className=\"\">\n                                  {loading ? <Spinner className=\"ms-2 text-center\" color=\"primary\" /> : <Button className=\"text-center\" color=\"primary\" type=\"submit\">{props.t(\"Reset Password\")}</Button>}\n                                </span>\n                              </Col>\n                            </Row>\n                          </Form>\n                        )}\n                      </Formik>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(withTranslation()(ResetPassword));\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Crypto/CryptoLiveRegister.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/CorpRegisterIB.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/CorpRegister.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/ForexDemoRegister.js",["2161","2162","2163","2164"],"/* eslint-disable object-property-newline */\n/* eslint-disable quotes */\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport {\n  Row, Col, Alert, Container, InputGroupText, Form, FormGroup, Label, Button, Spinner, Card \n} from \"reactstrap\";\nimport { COUNTRIES } from \"../../../../helpers/countries\";\nimport { REGISTER } from \"declarations\";\n\nimport {\n  apiError, changePortal, registerForexDemoUser \n} from \"../../../../store/actions\";\n\n//redux\nimport {\n  useSelector, useDispatch, connect \n} from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\n\n// import images\nimport * as content from \"content\";\nimport {\n  Formik, Field as FormikField, Form as FormikForm \n} from \"formik\";\nimport { CustomInput, InlineInput } from \"../../../../components/Common/CustomInput\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport EmailPinField from \"components/Common/EmailPinField\";\nimport { PORTALS } from \"common/constants\";\nimport validateEmail from \"helpers/validateEmail\";\nimport LanguageDropdown from \"components/CommonForBoth/TopbarDropdown/LanguageDropdown\";\nimport _ from \"lodash\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  country: COUNTRIES[0].countryEn,\n  email: \"\",\n  phone: \"\",\n  gender: \"Male\",\n  password: \"\",\n};\n\nconst passwordRegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z!@#$%^&*()_,.?\":{}|<>\\d]{8,20}$/;\n// eslint-disable-next-line no-useless-escape\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst ForexDemoRegister = props => {\n  const searchParams = new URLSearchParams(props.location.search);\n  const agRef = searchParams.get(\"agRef\");\n  const parentRef = searchParams.get(\"parentRef\");\n  const salesRef = searchParams.get(\"salesRef\");\n  const ibRef = searchParams.get(\"ibRef\");\n  const ibId = searchParams.get(\"ibId\");\n  const refId = searchParams.get(\"refId\");\n  const { t } = useTranslation();\n\n  const utmCampaign = searchParams.get(\"utm-campaign\");\n  const ref = searchParams.get(\"ref\");\n  const dispatch = useDispatch();\n  const [countryCode, setCountryCode] = useState(COUNTRIES[0].calling_code);\n  const [isPinVerified, setIsPinVerified] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const { user, registrationError, loading, checkEmail, layoutMode } = useSelector(state => ({\n    user: state.Account.user,\n    registrationError: state.Account.registrationError,\n    loading: state.Account.loading,\n    checkEmail:state.checkUser.checkError,\n    layoutMode: state.Layout.layoutMode,\n  }));\n\n  useEffect(() => {\n    dispatch(apiError(\"\"));\n  }, [dispatch]);\n\n  const submitRegistration = (values, actions) => {\n    const phone = values.phone;\n    values.phone = `+${countryCode}${phone}`;\n    values.history = props.history;\n    actions.setSubmitting(true);\n    localStorage.setItem(\"PORTAL\", PORTALS.FOREX);\n    dispatch(changePortal(PORTALS.FOREX));\n    if (agRef) values.agRef = agRef;\n    if (parentRef) values.parentRef = parentRef;\n    if (salesRef) values.salesRef = salesRef;\n    if (ibRef) values.ibRef = ibRef;\n    if (ibId) values.ibId = ibId;\n    if (refId) values.refId = refId;\n    dispatch(registerForexDemoUser({\n      ...values,\n      declarations: [REGISTER],\n      utmCampaign,\n      ref\n    }));\n    // dispatch(checkUser(values));\n    actions.setSubmitting(false);\n    // actions.resetForm(initialValues);\n  };\n\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(15, \"Too Long!\")\n      .required(\"Required\"),\n    lastName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(15, \"Too Long!\")\n      .required(\"Required\"),\n    phone: Yup.string(\"Enter your Phone\")\n      .matches(/^\\d+$/, \"Phone is not valid\")\n      .min(5, \"Phone is not valid\")\n      .max(20, \"Phone is not valid\")\n      .required(\"Phone is required\"),\n    password: Yup.string(\"\")\n      .min(8, \"Password must contain atleast 8 characters\")\n      .max(20, \"Password should not be more than 20 characters long\")\n      .matches(\n        passwordRegExp,\n        \"Atleast one lower case, upper case and number required\")\n      .required(\"Enter your password\"),\n    country: Yup.string(\"Select your country of residence\").required(\"Country of residence is required\"),\n    email: Yup.string(\"should be valid email\").matches(emailRegex, \"Email is not valid\").required(\"Email is required\"),\n    emailPin: Yup.string(\"\").required(\"PIN must be entered\").length(4, \"Pin should be 4 characters exact\"),\n    declarations: Yup.boolean().oneOf([true], \"Please check the agreement\"),\n  });\n\n\n  return (\n    <React.Fragment>\n    \n      <MetaTags>\n        <title>Register Forex Demo | {content.clientName}</title>\n      </MetaTags>\n      <div className=\"auth-page\">\n        <Container style={{ maxWidth: \"1150px\", marginBottom: \"100px\", marginTop: \"100px\" }} className=\"p-0\">\n                  <Row style={{ fontFamily: \"Poppins\", borderTop: \"1px solid rgba(0,0,0,0.2)\", borderRadius: \"30px\", boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\"}} className=\"g-0 overflow-hidden\">\n                     <Col md={6} style={{ boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\", borderRadius: \"30px\" }} className=\"d-none d-md-flex flex-column justify-content-start align-items-start p-5\">\n                              <h2 style={{ fontSize: 35, fontWeight: \"bold\", color: \"#057A25\" }}>Let’s Get <br /> You Started</h2>\n                              <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                Log in to explore insights, execute trades, and stay ahead in the financial markets.\n                              </p>\n                              <p style={{ color: \"#E4B200\" }} className=\"fw-bold mt-3 mb-1 fs-4\">Start smarter trading today</p>\n                              <p className=\"fs-6\">\n                                Start your trading journey with confidence at Go Wize Markets.\n                              </p>\n                              <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                Join thousands of traders who trust our platform to achieve their financial goals with ease and security.\n                              </p>\n                              <p className=\"mt-1 fs-6\">\n                                Register now and access professional tools to support your investment decisions.\n                              </p>\n                              <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                From real-time data to advanced analytics – everything you need to trade smarter is just a few clicks away.\n                              </p>\n                              <div className=\"mt-3\">\n                                <img src={layoutMode === \"dark\" ? content.sign_logo : content.sign_logo} alt=\"logo\" height=\"50\" />\n                              </div>\n                            </Col>\n            <Col lg={6} md={6} className=\"mx-auto\">\n              <div style={{\n                position: \"absolute\",\n                display: \"block\",\n                top: -20,\n                right: 0,\n                zIndex: 999,\n              }}>\n                <LanguageDropdown />\n              </div>\n              <Card className=\"auth-full-page-content d-flex p-sm-5 p-4 bg-transparent border-0\">\n                <div className=\"w-100\">\n                  <div className=\"d-flex flex-column h-100\">\n                    <div className=\"mb-4 mb-md-2 text-center\">\n                      {/* <Link to=\"/dashboard\" className=\"d-block auth-logo\">\n                        <img src={\n                          layoutMode === \"dark\" ? content.mainLogo : content.darkLogo\n                        } alt=\"\" height=\"100\" />\n                      </Link> */}\n                    </div>\n                    <div className=\"auth-content my-auto\">\n                      {/* <div className=\"text-center mb-4 mb-md-3\">\n                        <h5 className=\"mb-0\">{t(\"Register Forex Demo Account\")}</h5>\n                      </div> */}\n\n                      <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        validateOnBlur={false}\n\n                        onSubmit={submitRegistration}>\n                        {({ values, setFieldValue, errors, setFieldTouched, handleChange, setFieldError, touched }) => {\n                          const handleEmailChange = (e) => {\n                            handleChange(e);\n                            validateEmail(e.target.value, setFieldError);           \n                          };\n                          return (\n                            <Form tag={FormikForm} autoComplete=\"off\">\n                              <FormGroup row>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"firstName\">{t(\"First Name\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"firstName\"\n                                      placeholder={t(\"First Name\")}\n                                      className={\"mb-2\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"lastName\">{t(\"Last Name\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"lastName\"\n                                      placeholder={t(\"Last Name\")}\n                                      className={\"mb-2\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"country\">{t(\"Select Country\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"country\"\n                                      placeholder={t(\"Select Country\")}\n                                      className={\"mb-2 form-select\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"select\"}\n                                      value={values.countryEn}\n                                      onChange={(e) => {\n                                        const value = JSON.parse(e.target.value);\n                                        setFieldValue(\"country\", value.countryEn);\n                                        setCountryCode(value.calling_code);\n                                      }}\n                                    >\n                                      {COUNTRIES.map((c, key) => {\n                                        return <option key={key} value={JSON.stringify(c)}>{c.countryEn}</option>;\n                                      })}\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"phone\">{t(\"Phone\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"phone\"\n                                      className={\"form-control border-start-0\"}\n                                      style={{ borderTopRightRadius: '24px', borderBottomRightRadius: '24px' }}\n                                      type={\"string\"}\n                                      onKeyPress={(e) => {\n                                        if (!/[0-9]/.test(e.key))\n                                          e.preventDefault();\n                                      }}\n                                      inputgrouptext={<InputGroupText style={{ border: \"1px solid #E4B200\", borderTopLeftRadius: '24px', borderBottomLeftRadius: '24px', backgroundColor: \"#E4B200\", color: \"#fff\" }} className=\"custom-input-group-text border-end-0\">+{countryCode}</InputGroupText>}\n                                      placeholder={t(\"Enter Phone\")}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                            \n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"email\">{t(\"Email\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"email\"\n                                      className={\"form-control\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                      onChange={handleEmailChange}\n                                      placeholder={t(\"Enter Email\")}\n                                    >\n                                    </FormikField>\n                                    { checkEmail ? (\n                                      <span className=\"text-danger\">{checkEmail}</span>\n                                    ) : null}\n                                  </div>\n                                </Col>\n                                <EmailPinField \n                                  values={values}\n                                  errors={errors}\n                                  isPinVerified={isPinVerified}\n                                  setFieldTouched={setFieldTouched} \n                                  setFieldValue={setFieldValue}\n                                  setIsPinVerified={setIsPinVerified}\n                                  setFieldError={setFieldError}\n                                  touched={touched}\n                                ></EmailPinField>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    <Label for=\"password\">{t(\"Password\")}</Label>\n                                    <Row>\n                                      <Col xs={12} >\n                                        <FormikField\n                                          component={CustomInput}\n                                          name=\"password\"\n                                          className={\"mb-2 \"}\n                                          style={{ borderRadius: '24px' }}\n                                          type=\"password\"\n                                          placeholder={t(\"Enter Password\")}\n                                        >\n                                        </FormikField>\n                                      </Col>\n                                      {/* <Col xs={1}\n                                        style={{\n                                          display: \"flex\",\n                                          alignItems: \"center\",\n                                          justifyContent: \"center\",\n                                          backgroundColor: \"#E9ECEF\",\n                                          borderTopRightRadius: \"0.25rem\",\n                                          borderBottomRightRadius: \"0.25rem\",\n                                          boxShadow: \" 0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n                                          maxHeight: \"38px\",\n                                        }}\n                                      >\n                                        <button className=\"btn\" type=\"button\" onClick={()=>{ setShowPassword(!showPassword) }}>\n                                          <i className=\"mdi mdi-eye-outline\"></i>\n                                        </button>\n                                      </Col> */}\n                                    </Row>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <label>\n                                    <FormikField\n                                      component={InlineInput}\n                                      name=\"declarations\"\n                                      type=\"checkbox\"\n                                      style={{ marginRight: \"10px\" }}\n                                    >\n                                    </FormikField>\n                                    <span dangerouslySetInnerHTML={{ __html: REGISTER }} />\n                                  </label>\n                                </Col>\n\n                              </FormGroup>\n                              <div className=\"mb-3 text-center\">\n                                {loading ? <Spinner className=\"ms-2 text-center\" color=\"primary\" /> : \n                                  <Button disabled={!isPinVerified} className=\"text-center\" color=\"primary\" type=\"submit\">Register</Button>}\n                              </div>\n                              {user && user ? (\n                                <Alert color=\"success\">\n                                  {t(\"Register User Successfully\")}\n                                </Alert>\n                              ) : null}\n\n                              {registrationError && registrationError ? (\n                                <Alert color=\"danger\">{registrationError}</Alert>\n                              ) : null}\n                            </Form>\n                          );}}\n                      </Formik>\n                      <div className=\"mt-2 text-left\">\n                        <p className=\"text-muted mb-0\">{t(\"Already have an account ? \")}<Link to=\"/login\"\n                          className=\"text-primary fw-semibold\"> {t(\"Login\")} </Link> </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n          \n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\nconst mapStateTpProps = (state) => {\n  return {\n    loading: state.Account.loading\n  };\n};\n\nexport default connect(mapStateTpProps, null)(ForexDemoRegister);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/ForexIbRegister.js",["2165","2166","2167","2168","2169"],"/* eslint-disable react/jsx-indent-props */\n/* eslint-disable quotes */\n/* eslint-disable object-property-newline */\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport {\n  Row, Col, Alert, Container, InputGroupText, Form, FormGroup, Label, Button, Spinner, Card \n} from \"reactstrap\";\nimport { COUNTRIES } from \"../../../../helpers/countries\";\nimport { REGISTER } from \"declarations\";\n\nimport {\n  apiError, changePortal, registerForexIbUser \n} from \"../../../../store/actions\";\n\n//redux\nimport {\n  useSelector, useDispatch, connect \n} from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\n// import images\nimport * as content from \"content\";\nimport {\n  Formik, Field as FormikField, Form as FormikForm \n} from \"formik\";\nimport { CustomInput, InlineInput } from \"../../../../components/Common/CustomInput\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport EmailPinField from \"components/Common/EmailPinField\";\nimport { PORTALS } from \"common/constants\";\nimport validateEmail from \"helpers/validateEmail\";\nimport LanguageDropdown from \"components/CommonForBoth/TopbarDropdown/LanguageDropdown\";\nimport _ from \"lodash\";\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  country: COUNTRIES[0].countryEn,\n  email: \"\",\n  phone: \"\",\n  gender: \"Male\",\n  password: \"\",\n};\n\nconst passwordRegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z!@#$%^&*()_,.?\":{}|<>\\d]{8,20}$/;\n// eslint-disable-next-line no-useless-escape\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst ForexIbRegister = props => {\n  const searchParams = new URLSearchParams(props.location.search);\n  const agRef = searchParams.get(\"agRef\");\n  const parentRef = searchParams.get(\"parentRef\");\n  const salesRef = searchParams.get(\"salesRef\");\n  const ibRef = searchParams.get(\"ibRef\");\n  const ibId = searchParams.get(\"ibId\");\n  const refId = searchParams.get(\"refId\");\n  const utmCampaign = searchParams.get(\"utm-campaign\");\n  const ref = searchParams.get(\"ref\");\n\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [countryCode, setCountryCode] = useState(COUNTRIES[0].calling_code);\n  const [isPinVerified, setIsPinVerified] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const { user, registrationError, loading, checkEmail, layoutMode } = useSelector(state => ({\n    user: state.Account.user,\n    registrationError: state.Account.registrationError,\n    loading: state.Account.loading,\n    checkEmail:state.checkUser.checkError,\n    layoutMode: state.Layout.mode,\n  }));\n\n  useEffect(() => {\n    dispatch(apiError(\"\"));\n  }, [dispatch]);\n  \n  const submitRegistration = (values, actions) => {\n    const phone = values.phone;\n    values.phone = `+${countryCode}${phone}`;\n    values.history = props.history;\n    actions.setSubmitting(true);\n    localStorage.setItem(\"PORTAL\", PORTALS.FOREX);\n    dispatch(changePortal(PORTALS.FOREX));\n    if (agRef) values.agRef = agRef;\n    if (parentRef) values.parentRef = parentRef;\n    if (salesRef) values.salesRef = salesRef;\n    if (ibRef) values.ibRef = ibRef;\n    if (ibId) values.ibId = ibId;\n    if (refId) values.refId = refId;\n    dispatch(registerForexIbUser({\n      ...values,\n      declarations: [REGISTER],\n      utmCampaign,\n      ref,\n    }));\n    // dispatch(checkUser(values));\n    actions.setSubmitting(false);\n    // actions.resetForm(initialValues);\n  };\n\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(15, \"Too Long!\")\n      .required(\"Required\"),\n    lastName: Yup.string()\n      .min(2, \"Too Short!\").max(15, \"Too Long!\").required(\"Required\"),\n    phone: Yup.string(\"Enter your Phone\")\n      .matches(/^\\d+$/, \"Phone is not valid\")\n      .min(5, \"Phone is not valid\")\n      .max(20, \"Phone is not valid\")\n      .required(\"Phone is required\"),\n    password: Yup.string(\"\")\n      .min(8, \"Password must contain atleast 8 characters\")\n      .max(20, \"Password should not be more than 20 characters long\")\n      .matches(\n        passwordRegExp,\n        \"Atleast one lower case, upper case and number required\")\n      .required(\"Enter your password\"),\n    country: Yup.string(\"Select your country of residence\").required(\"Country of residence is required\"),\n    email: Yup.string(\"should be valid email\").matches(emailRegex, \"Email is not valid\").required(\"Email is required\"),\n    emailPin: Yup.string(\"\").required(\"PIN must be entered\").length(4, \"Pin should be 4 characters exact\")\n  });\n\n  return (\n    <React.Fragment>\n    \n      <MetaTags>\n        <title>{t(\"Register Forex IB\")} | {content.clientName}</title>\n      </MetaTags>\n      <div className=\"auth-page\">\n        <Container style={{ maxWidth: \"1150px\", marginBottom: \"100px\", marginTop: \"100px\" }} className=\"p-0\">\n                  <Row style={{ fontFamily: \"Poppins\", borderTop: \"1px solid rgba(0,0,0,0.2)\", borderRadius: \"30px\", boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\"}} className=\"g-0 overflow-hidden\">\n                     <Col md={6} style={{ boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\", borderRadius: \"30px\" }} className=\"d-none d-md-flex flex-column justify-content-start align-items-start p-5\">\n                              <h2 style={{ fontSize: 35, fontWeight: \"bold\", color: \"#057A25\" }}>Let’s Get <br /> You Started</h2>\n                              <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                Log in to explore insights, execute trades, and stay ahead in the financial markets.\n                              </p>\n                              <p style={{ color: \"#E4B200\" }} className=\"fw-bold mt-3 mb-1 fs-4\">Start smarter trading today</p>\n                              <p className=\"fs-6\">\n                                Start your trading journey with confidence at Go Wize Markets.\n                              </p>\n                              <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                Join thousands of traders who trust our platform to achieve their financial goals with ease and security.\n                              </p>\n                              <p className=\"mt-1 fs-6\">\n                                Register now and access professional tools to support your investment decisions.\n                              </p>\n                              <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                                From real-time data to advanced analytics – everything you need to trade smarter is just a few clicks away.\n                              </p>\n                              <div className=\"mt-3\">\n                                <img src={layoutMode === \"dark\" ? content.sign_logo : content.sign_logo} alt=\"logo\" height=\"50\" />\n                              </div>\n                            </Col>\n            <Col lg={6} md={6} className=\"mx-auto\">\n              <div style={{\n                position: \"absolute\",\n                display: \"block\",\n                top: -20,\n                right: 0,\n                zIndex: 999,\n              }}>\n                <LanguageDropdown />\n              </div>\n              <Card className=\"auth-full-page-content d-flex p-sm-5 p-4 bg-transparent border-0\">\n                <div className=\"w-100\">\n                  <div className=\"d-flex flex-column h-100\">\n                    <div className=\"mb-4 mb-md-2 text-center\">\n                      {/* <Link to=\"/dashboard\" className=\"d-block auth-logo\">\n                        <img src={\n                          layoutMode === \"light\" ? content.mainLogo : content.darkLogo\n                        }  alt=\"\" height=\"100\" />\n                      </Link> */}\n                    </div>\n                    <div className=\"auth-content my-auto\">\n                      {/* <div className=\"text-center mb-4 mb-md-3\">\n                        <h5 className=\"mb-0\">{t(\"Register Forex IB Account\")}</h5>\n                      </div> */}\n\n                      <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        validateOnBlur={false}\n\n                        onSubmit={submitRegistration}>\n                        {({ values, setFieldValue, errors, setFieldTouched, handleChange, setFieldError, touched }) => {\n                          const handleEmailChange = (e) => {\n                            handleChange(e);\n                            validateEmail(e.target.value, setFieldError);           \n                          };                          \n                          return (\n                            <Form tag={FormikForm} autoComplete=\"off\">\n                              <FormGroup row>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"firstName\">{t(\"First Name\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"firstName\"\n                                      placeholder={t(\"First Name\")}\n                                      className={\"mb-2\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"lastName\">{t(\"Last Name\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"lastName\"\n                                      placeholder={t(\"Last Name\")}\n                                      className={\"mb-2\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"country\">{t(\"Select Country\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"country\"\n                                      placeholder={t(\"Select Country\")}\n                                      className={\"mb-2 form-select\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"select\"}\n                                      value={values.countryEn}\n                                      onChange={(e) => {\n                                        const value = JSON.parse(e.target.value);\n                                        setFieldValue(\"country\", value.countryEn);\n                                        setCountryCode(value.calling_code);\n                                      }}\n                                    >\n                                      {COUNTRIES.map((c, key) => {\n                                        return <option key={key} value={JSON.stringify(c)}>{c.countryEn}</option>;\n                                      })}\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"phone\">{t(\"Phone\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"phone\"\n                                      className={\"form-control border-start-0\"}\n                                      style={{ borderTopRightRadius: '24px', borderBottomRightRadius: '24px' }}\n                                      type={\"string\"}\n                                      onKeyPress={(e) => {\n                                        if (!/[0-9]/.test(e.key))\n                                          e.preventDefault();\n                                      }}\n                                      inputgrouptext={<InputGroupText style={{ border: \"1px solid #E4B200\", borderTopLeftRadius: '24px', borderBottomLeftRadius: '24px', backgroundColor: \"#E4B200\", color: \"#fff\" }} className=\"custom-input-group-text border-end-0\">+{countryCode}</InputGroupText>}\n                                      placeholder={t(\"Enter Phone\")}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                            \n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"email\">{t(\"Email\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"email\"\n                                      className={\"form-control\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                      onChange={handleEmailChange}\n                                      placeholder={t(\"Enter Email\")}\n                                    >\n                                    </FormikField>\n                                    { checkEmail ? (\n                                      <span className=\"text-danger\">{checkEmail}</span>\n                                    ) : null}\n                                  </div>\n                                </Col>\n                                <EmailPinField \n                                  values={values}\n                                  errors={errors}\n                                  isPinVerified={isPinVerified}\n                                  setFieldTouched={setFieldTouched} \n                                  setFieldValue={setFieldValue}\n                                  setIsPinVerified={setIsPinVerified}\n                                  setFieldError={setFieldError}\n                                  touched={touched}\n                                ></EmailPinField>\n\n                                <Col xs={12}>\n                                  <FormikField\n                                    component={CustomInput}\n                                    name=\"password\"\n                                    className={\"mb-2 \"}\n                                    style={{ borderRadius: '24px' }}\n                                    type=\"password\"\n                                    placeholder={t(\"Enter Password\")}\n                                  >\n                                  </FormikField>\n                                </Col>\n\n                                {/* <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    <Row>\n                                      <Label for=\"password\">{t(\"Password\")}</Label>\n                                      <Col xs={11} \n                                        style={{\n                                          paddingRight: \"0px\",\n                                        }}>\n                                        <FormikField\n                                          component={CustomInput}\n                                          name=\"password\"\n                                          className={\"mb-2 \"}\n                                          type={showPassword ? \"text\" : \"password\"}\n                                        >\n                                        </FormikField>\n                                      </Col>\n                                      <Col xs={1}\n                                        style={{\n                                          display: \"flex\",\n                                          alignItems: \"center\",\n                                          justifyContent: \"center\",\n                                          backgroundColor: \"#E9ECEF\",\n                                          borderTopRightRadius: \"0.25rem\",\n                                          borderBottomRightRadius: \"0.25rem\",\n                                          boxShadow: \" 0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n                                          maxHeight: \"38px\",\n                                        }}\n                                      >\n                                        <button className=\"btn\" type=\"button\" onClick={()=>{ setShowPassword(!showPassword) }}>\n                                          <i className=\"mdi mdi-eye-outline\"></i>\n                                        </button>\n                                      </Col>\n                                    </Row>\n                                  </div>\n                                </Col> */}\n                                <Col xs={12}>\n                                <label>\n                                  <FormikField\n                                      component={InlineInput}\n                                      name=\"declarations\"\n                                      type=\"checkbox\"\n                                      style={{ marginRight: \"10px\" }}\n                                    >\n                                    </FormikField>\n                                    <span dangerouslySetInnerHTML={{ __html: REGISTER }} />\n                                  </label>\n                                </Col>\n\n                              </FormGroup>\n                              <div className=\"mb-3 text-center\">\n                                {loading ? <Spinner className=\"ms-2 text-center\" color=\"primary\" /> : \n                                  <Button disabled={!isPinVerified} className=\"text-center\" color=\"primary\" type=\"submit\">Register</Button>}\n                              </div>\n                              {user && user ? (\n                                <Alert color=\"success\">\n                                  {t(\"Register User Successfully\")}\n                                </Alert>\n                              ) : null}\n\n                              {registrationError && registrationError ? (\n                                <Alert color=\"danger\">{registrationError}</Alert>\n                              ) : null}\n                            </Form>\n                          );}}\n                      </Formik>\n                      <div className=\"mt-2 text-left\">\n                        <p className=\"text-muted mb-0\">{t(\"Already have an account ? \")}<Link to=\"/login\"\n                          className=\"text-primary fw-semibold\"> {t(\"Login\")} </Link> </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n          \n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\nconst mapStateTpProps = (state) => {\n  return {\n    loading: state.Account.loading\n  };\n};\n\nexport default connect(mapStateTpProps, null)(ForexIbRegister);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/Register/Forex/ForexLiveRegister.js",["2170","2171","2172","2173","2174"],"/* eslint-disable quotes */\n/* eslint-disable object-property-newline */\nimport React, { useEffect, useState } from \"react\";\nimport MetaTags from \"react-meta-tags\";\nimport {\n  Row, Col, Alert, Container, InputGroupText, Form, FormGroup, Label, Button, Spinner, Card \n} from \"reactstrap\";\nimport { COUNTRIES } from \"../../../../helpers/countries\";\nimport { REGISTER } from \"declarations\";\n\nimport {\n  apiError, changePortal, registerForexLiveUser \n} from \"../../../../store/actions\";\n\n//redux\nimport {\n  useSelector, useDispatch, connect \n} from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\n\nimport * as content from \"content\";\nimport {\n  Formik, Field as FormikField, Form as FormikForm \n} from \"formik\";\nimport { CustomInput, InlineInput } from \"../../../../components/Common/CustomInput\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport EmailPinField from \"components/Common/EmailPinField\";\nimport { PORTALS } from \"common/constants\";\nimport validateEmail from \"helpers/validateEmail\";\nimport LanguageDropdown from \"components/CommonForBoth/TopbarDropdown/LanguageDropdown\";\nimport _ from \"lodash\";\n\n\nconst initialValues = {\n  firstName: \"\",\n  lastName: \"\",\n  country: COUNTRIES[0].countryEn,\n  email: \"\",\n  phone: \"\",\n  gender: \"Male\",\n  password: \"\",\n  declarations: false,\n};\n\nconst passwordRegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z!@#$%^&*()_,.?\":{}|<>\\d]{8,20}$/;\n// eslint-disable-next-line no-useless-escape\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst ForexLiveRegister = props => {\n  const searchParams = new URLSearchParams(props.location.search);\n  const agRef = searchParams.get(\"agRef\");\n  const parentRef = searchParams.get(\"parentRef\");\n  const ibRef = searchParams.get(\"ibRef\");\n  const ibId = searchParams.get(\"ibId\");\n  const salesRef = searchParams.get(\"salesRef\");\n  const refId = searchParams.get(\"refId\");\n  const utmCampaign = searchParams.get(\"utm-campaign\");\n  const ref = searchParams.get(\"ref\");\n  \n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [countryCode, setCountryCode] = useState(COUNTRIES[0].calling_code);\n  const [isPinVerified, setIsPinVerified] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const { user, registrationError, loading, checkEmail, layoutMode } = useSelector(state => ({\n    user: state.Account.user,\n    registrationError: state.Account.registrationError,\n    loading: state.Account.loading,\n    checkEmail:state.checkUser.checkError,\n    layoutMode: state.Layout.layoutMode,\n  }));\n\n  useEffect(() => {\n    dispatch(apiError(\"\"));\n  }, [dispatch]);\n\n  const submitRegistration = (values, actions) => {\n    const phone = values.phone;\n    values.history = props.history;\n    values.search = props.location.search;\n    actions.setSubmitting(true);\n    localStorage.setItem(\"PORTAL\", PORTALS.FOREX);\n    dispatch(changePortal(PORTALS.FOREX));\n    if (agRef) values.agRef = agRef;\n    if (parentRef) values.parentRef = parentRef;\n    if (salesRef) values.salesRef = salesRef;\n    if (ibRef) values.ibRef = ibRef;\n    if (ibId) values.ibId = ibId;\n    if (refId) values.refId = refId;\n    dispatch(registerForexLiveUser({\n      ...values,\n      phone: `+${countryCode}${phone}`,\n      declarations: [REGISTER],\n      utmCampaign,\n      ref,\n    }));\n    actions.setSubmitting(false);\n  };\n\n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(15, \"Too Long!\")\n      .required(\"Required\"),\n    lastName: Yup.string()\n      .min(2, \"Too Short!\")\n      .max(15, \"Too Long!\")\n      .required(\"Required\"),\n    phone: Yup.string(\"Enter your Phone\")\n      .matches(/^\\d+$/, \"Phone is not valid\")\n      .min(5, \"Phone is not valid\")\n      .max(20, \"Phone is not valid\")\n      .required(\"Phone is required\"),\n    password: Yup.string(\"\")\n      .min(8, \"Password must contain atleast 8 characters\")\n      .max(20, \"Password should not be more than 20 characters long\")\n      .matches(\n        passwordRegExp,\n        \"Atleast one lower case, upper case and number required\")\n      .required(\"Enter your password\"),\n    country: Yup.string(\"Select your country of residence\").required(\"Country of residence is required\"),\n    email: Yup.string(\"should be valid email\").matches(emailRegex, \"Email is not valid\").required(\"Email is required\"),\n    emailPin: Yup.string(\"\").required(\"PIN must be entered\").length(4, \"Pin should be 4 characters exact\"),\n    declarations: Yup.boolean().oneOf([true], \"Please check the agreement\"),\n  });\n\n  return (\n    <React.Fragment>\n    \n      <MetaTags>\n        <title>{t(\"Register Forex Live\")} | {content.clientName}</title>\n      </MetaTags>\n      <div className=\"auth-page\">\n        <Container style={{ maxWidth: \"1150px\", marginBottom: \"100px\", marginTop: \"100px\" }} className=\"p-0\">\n          <Row style={{ fontFamily: \"Poppins\", borderTop: \"1px solid rgba(0,0,0,0.2)\", borderRadius: \"30px\", boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\"}} className=\"g-0 overflow-hidden\">\n             <Col md={6} style={{ boxShadow: \"0 4px 4px 0 rgba(0,0,0,0.25)\", borderRadius: \"30px\" }} className=\"d-none d-md-flex flex-column justify-content-start align-items-start p-5\">\n                      <h2 style={{ fontSize: 35, fontWeight: \"bold\", color: \"#057A25\" }}>Let’s Get <br /> You Started</h2>\n                      <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                        Log in to explore insights, execute trades, and stay ahead in the financial markets.\n                      </p>\n                      <p style={{ color: \"#E4B200\" }} className=\"fw-bold mt-3 mb-1 fs-4\">Start smarter trading today</p>\n                      <p className=\"fs-6\">\n                        Start your trading journey with confidence at Go Wize Markets.\n                      </p>\n                      <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                        Join thousands of traders who trust our platform to achieve their financial goals with ease and security.\n                      </p>\n                      <p className=\"mt-1 fs-6\">\n                        Register now and access professional tools to support your investment decisions.\n                      </p>\n                      <p style={{ fontSize: \"12px\" }} className=\"text-muted\">\n                        From real-time data to advanced analytics – everything you need to trade smarter is just a few clicks away.\n                      </p>\n                      <div className=\"mt-3\">\n                        <img src={layoutMode === \"dark\" ? content.sign_logo : content.sign_logo} alt=\"logo\" height=\"50\" />\n                      </div>\n                    </Col>\n            <Col lg={6} md={5} className=\"mx-auto\">\n              <div style={{\n                position: \"absolute\",\n                display: \"block\",\n                top: -20,\n                right: 0,\n                zIndex: 999,\n              }}>\n                <LanguageDropdown />\n              </div>\n              <Card className=\"auth-full-page-content d-flex p-sm-5 p-4 bg-transparent border-0\">\n                <div className=\"w-100\">\n                  <div className=\"d-flex flex-column h-100\">\n                    <div className=\"mb-4 mb-md-2 text-center\">\n                      {/* <Link to=\"/dashboard\" className=\"d-block auth-logo\">\n                        <img src={\n                          layoutMode === \"dark\" ? content.mainLogo : content.darkLogo\n                        } alt=\"\" height=\"100\" />\n                      </Link> */}\n                    </div>\n                    <div className=\"auth-content my-auto\">\n                      {/* <div className=\"text-center mb-4 mb-md-3\">\n                        <h5 className=\"mb-0\">{t(\"Register Live Account\")}</h5>\n                      </div> */}\n\n                      <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        validateOnBlur={false}\n                        onSubmit={submitRegistration}>\n                        {({ values, setFieldValue, errors, setFieldTouched, handleChange, setFieldError, touched }) => {\n                          const handleEmailChange = (e) => {\n                            handleChange(e);\n                            validateEmail(e.target.value, setFieldError);           \n                          };\n                          return (\n                            <Form tag={FormikForm} autoComplete=\"off\">\n                              <FormGroup row>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"firstName\">{t(\"First Name\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"firstName\"\n                                      placeholder={t(\"First Name\")}\n                                      className={\"mb-2\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"lastName\">{t(\"Last Name\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"lastName\"\n                                      placeholder={t(\"Last Name\")}\n                                      className={\"mb-2\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"country\">{t(\"Select Country\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"country\"\n                                      placeholder={t(\"Select Country\")}\n                                      className={\"mb-2 form-select\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"select\"}\n                                      value={values.countryEn}\n                                      onChange={(e) => {\n                                        const value = JSON.parse(e.target.value);\n                                        setFieldValue(\"country\", value.countryEn);\n                                        setCountryCode(value.calling_code);\n                                      }}\n                                    >\n                                      {COUNTRIES.map((c, key) => {\n                                        return <option key={key} value={JSON.stringify(c)}>{c.countryEn}</option>;\n                                      }\n                                      )}\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"phone\">{t(\"Phone\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"phone\"\n                                      className={\"form-control border-start-0\"}\n                                      style={{ borderTopRightRadius: '24px', borderBottomRightRadius: '24px' }}\n                                      type={\"string\"}\n                                      onKeyPress={(e) => {\n                                        if (!/[0-9]/.test(e.key))\n                                          e.preventDefault();\n                                      }}\n                                      inputgrouptext={<InputGroupText style={{ border: \"1px solid #E4B200\", borderTopLeftRadius: '24px', borderBottomLeftRadius: '24px', backgroundColor: \"#E4B200\", color: \"#fff\" }} className=\"custom-input-group-text border-end-0\">+{countryCode}</InputGroupText>}\n                                      placeholder={t(\"Enter Phone\")}\n                                    >\n                                    </FormikField>\n                                  </div>\n                                </Col>\n                            \n                                <Col xs={12}>\n                                  <div className=\"mb-3\">\n                                    {/* <Label for=\"email\">{t(\"Email\")}</Label> */}\n                                    <FormikField\n                                      component={CustomInput}\n                                      name=\"email\"\n                                      className={\"form-control\"}\n                                      style={{ borderRadius: '24px' }}\n                                      type={\"text\"}\n                                      onChange={handleEmailChange}\n                                      placeholder={t(\"Enter Email\")}\n                                    >\n                                    </FormikField>\n                                    { checkEmail ? (\n                                      <span className=\"text-danger\">{checkEmail}</span>\n                                    ) : null}\n                                  </div>\n                                </Col>\n                                <EmailPinField \n                                  values={values}\n                                  errors={errors}\n                                  isPinVerified={isPinVerified}\n                                  setFieldTouched={setFieldTouched} \n                                  setFieldValue={setFieldValue}\n                                  setIsPinVerified={setIsPinVerified}\n                                  setFieldError={setFieldError}\n                                  touched={touched}\n                                ></EmailPinField>\n                                      <Col xs={12} \n                                        \n                                        >\n                                        <FormikField\n                                          component={CustomInput}\n                                          name=\"password\"\n                                          className={\"mb-2 \"}\n                                          style={{ borderRadius: '24px' }}\n                                          type=\"password\"\n                                          placeholder={t(\"Enter Password\")}\n                                        >\n                                        </FormikField>\n                                      </Col>\n                                      {/* <Col xs={1}\n                                        style={{\n                                          display: \"flex\",\n                                          alignItems: \"center\",\n                                          justifyContent: \"center\",\n                                          backgroundColor: \"#E9ECEF\",\n                                          borderTopRightRadius: \"0.25rem\",\n                                          borderBottomRightRadius: \"0.25rem\",\n                                          boxShadow: \" 0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n                                          maxHeight: \"38px\",\n                                        }}\n                                      >\n                                        <button style={{ border: \"1px solid #E4B200\", backgroundColor: \"#E4B200\", color: \"#fff\" }} className=\"btn\" type=\"\" onClick={()=>{ setShowPassword(!showPassword) }}>\n                                          <i className=\"mdi mdi-eye-outline\"></i>\n                                        </button>\n                                      </Col> */}\n                                    {/* </Row>\n                                  </div>\n                                </Col> */}\n                                <Col xs={12}>\n                                  <label>\n                                    <FormikField\n                                      component={InlineInput}\n                                      name=\"declarations\"\n                                      type=\"checkbox\"\n                                      style={{ marginRight: \"10px\" }}\n                                    >\n                                    </FormikField>\n                                    <span dangerouslySetInnerHTML={{ __html: REGISTER }} />\n                                  </label>\n                                </Col>\n\n                              </FormGroup>\n                              <div className=\"mb-3 text-center w-100\">\n                                {loading ? <Spinner className=\"ms-2 text-center\" color=\"primary\" /> : \n                                  <Button disabled={!isPinVerified} className=\"text-center\" color=\"primary\" type=\"submit\">Register</Button>}\n                              </div>\n                              {user && user ? (\n                                <Alert color=\"success\">\n                                  {t(\"Register User Successfully\")}\n                                </Alert>\n                              ) : null}\n\n                              {registrationError && registrationError ? (\n                                <Alert color=\"danger\">{registrationError}</Alert>\n                              ) : null}\n                            </Form>\n                          );}}\n                      </Formik>\n                      <div className=\"mt-2 text-left\">\n                        <p className=\"text-muted mb-0\">{t(\"Already have an account ?\")} <Link to=\"/login\"\n                          className=\"text-primary fw-semibold\"> {t(\"Login\")} </Link> </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </Col>\n          \n          </Row>\n        </Container>\n      </div>\n    </React.Fragment>\n  );\n};\nconst mapStateTpProps = (state) => {\n  return {\n    loading: state.Account.loading\n  };\n};\n\nexport default connect(mapStateTpProps, null)(ForexLiveRegister);\n","/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Authentication/CarouselPage.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/campaignUnsubscribe/index.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/ApexCharts/RadialChart.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/helpers/validateEmail.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Common/EmailPinField.js",[],"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/campaign.js",[],{"ruleId":"2175","severity":1,"message":"2176","line":20,"column":8,"nodeType":"2177","messageId":"2178","endLine":20,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2179","line":27,"column":3,"nodeType":"2177","messageId":"2178","endLine":27,"endColumn":15},{"ruleId":"2175","severity":1,"message":"2180","line":23,"column":8,"nodeType":"2177","messageId":"2178","endLine":23,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2181","line":38,"column":5,"nodeType":"2177","messageId":"2178","endLine":38,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2182","line":139,"column":9,"nodeType":"2177","messageId":"2178","endLine":139,"endColumn":24},{"ruleId":"2175","severity":1,"message":"2183","line":141,"column":27,"nodeType":"2177","messageId":"2178","endLine":141,"endColumn":32},{"ruleId":"2175","severity":1,"message":"2184","line":6,"column":8,"nodeType":"2177","messageId":"2178","endLine":6,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2185","line":7,"column":8,"nodeType":"2177","messageId":"2178","endLine":7,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2186","line":15,"column":8,"nodeType":"2177","messageId":"2178","endLine":15,"endColumn":17},{"ruleId":"2175","severity":1,"message":"2187","line":30,"column":10,"nodeType":"2177","messageId":"2178","endLine":30,"endColumn":17},{"ruleId":"2175","severity":1,"message":"2188","line":34,"column":3,"nodeType":"2177","messageId":"2178","endLine":34,"endColumn":19},{"ruleId":"2175","severity":1,"message":"2187","line":9,"column":10,"nodeType":"2177","messageId":"2178","endLine":9,"endColumn":17},{"ruleId":"2175","severity":1,"message":"2189","line":10,"column":8,"nodeType":"2177","messageId":"2178","endLine":10,"endColumn":28},{"ruleId":"2175","severity":1,"message":"2190","line":13,"column":17,"nodeType":"2177","messageId":"2178","endLine":13,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2191","line":17,"column":8,"nodeType":"2177","messageId":"2178","endLine":17,"endColumn":19},{"ruleId":"2175","severity":1,"message":"2192","line":18,"column":8,"nodeType":"2177","messageId":"2178","endLine":18,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2193","line":54,"column":9,"nodeType":"2177","messageId":"2178","endLine":54,"endColumn":28},{"ruleId":"2175","severity":1,"message":"2194","line":60,"column":9,"nodeType":"2177","messageId":"2178","endLine":60,"endColumn":30},{"ruleId":"2175","severity":1,"message":"2195","line":115,"column":28,"nodeType":"2177","messageId":"2178","endLine":115,"endColumn":47},{"ruleId":"2196","severity":1,"message":"2197","line":173,"column":33,"nodeType":"2198","messageId":"2199","endLine":173,"endColumn":34,"fix":"2200"},{"ruleId":"2196","severity":1,"message":"2201","line":173,"column":47,"nodeType":"2198","messageId":"2202","endLine":173,"endColumn":48,"fix":"2203"},{"ruleId":"2175","severity":1,"message":"2204","line":3,"column":10,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2205","line":11,"column":9,"nodeType":"2177","messageId":"2178","endLine":11,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2206","line":22,"column":22,"nodeType":"2177","messageId":"2178","endLine":22,"endColumn":28},{"ruleId":"2175","severity":1,"message":"2195","line":27,"column":28,"nodeType":"2177","messageId":"2178","endLine":27,"endColumn":47},{"ruleId":"2175","severity":1,"message":"2207","line":16,"column":3,"nodeType":"2177","messageId":"2178","endLine":16,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2208","line":35,"column":11,"nodeType":"2177","messageId":"2178","endLine":35,"endColumn":19},{"ruleId":"2209","severity":1,"message":"2210","line":57,"column":7,"nodeType":"2211","messageId":"2212","endLine":57,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":82,"column":7,"nodeType":"2211","messageId":"2212","endLine":82,"endColumn":18},{"ruleId":"2175","severity":1,"message":"2213","line":16,"column":3,"nodeType":"2177","messageId":"2178","endLine":16,"endColumn":5},{"ruleId":"2175","severity":1,"message":"2214","line":2,"column":17,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2190","line":5,"column":18,"nodeType":"2177","messageId":"2178","endLine":5,"endColumn":23},{"ruleId":"2175","severity":1,"message":"2190","line":4,"column":22,"nodeType":"2177","messageId":"2178","endLine":4,"endColumn":27},{"ruleId":"2175","severity":1,"message":"2215","line":5,"column":10,"nodeType":"2177","messageId":"2178","endLine":5,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2216","line":6,"column":9,"nodeType":"2177","messageId":"2178","endLine":6,"endColumn":24},{"ruleId":"2209","severity":1,"message":"2210","line":7,"column":5,"nodeType":"2211","messageId":"2212","endLine":7,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2217","line":10,"column":9,"nodeType":"2177","messageId":"2178","endLine":10,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2218","line":19,"column":10,"nodeType":"2177","messageId":"2178","endLine":19,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2214","line":1,"column":17,"nodeType":"2177","messageId":"2178","endLine":1,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2190","line":4,"column":41,"nodeType":"2177","messageId":"2178","endLine":4,"endColumn":46},{"ruleId":"2175","severity":1,"message":"2219","line":28,"column":10,"nodeType":"2177","messageId":"2178","endLine":28,"endColumn":20},{"ruleId":"2209","severity":1,"message":"2210","line":180,"column":7,"nodeType":"2211","messageId":"2212","endLine":180,"endColumn":18},{"ruleId":"2175","severity":1,"message":"2220","line":14,"column":8,"nodeType":"2177","messageId":"2178","endLine":14,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2221","line":32,"column":10,"nodeType":"2177","messageId":"2178","endLine":32,"endColumn":22},{"ruleId":"2196","severity":1,"message":"2197","line":447,"column":33,"nodeType":"2198","messageId":"2199","endLine":447,"endColumn":34,"fix":"2222"},{"ruleId":"2196","severity":1,"message":"2201","line":447,"column":43,"nodeType":"2198","messageId":"2202","endLine":447,"endColumn":44,"fix":"2223"},{"ruleId":"2209","severity":1,"message":"2210","line":79,"column":5,"nodeType":"2211","messageId":"2212","endLine":79,"endColumn":16},{"ruleId":"2209","severity":1,"message":"2210","line":195,"column":19,"nodeType":"2211","messageId":"2212","endLine":195,"endColumn":30},{"ruleId":"2175","severity":1,"message":"2205","line":10,"column":9,"nodeType":"2177","messageId":"2178","endLine":10,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2224","line":1,"column":8,"nodeType":"2177","messageId":"2178","endLine":1,"endColumn":20},{"ruleId":"2209","severity":1,"message":"2210","line":12,"column":3,"nodeType":"2211","messageId":"2212","endLine":12,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":21,"column":3,"nodeType":"2211","messageId":"2212","endLine":21,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":32,"column":3,"nodeType":"2211","messageId":"2212","endLine":32,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2225","line":33,"column":25,"nodeType":"2177","messageId":"2178","endLine":33,"endColumn":35},{"ruleId":"2175","severity":1,"message":"2226","line":52,"column":27,"nodeType":"2177","messageId":"2178","endLine":52,"endColumn":45},{"ruleId":"2175","severity":1,"message":"2227","line":53,"column":10,"nodeType":"2177","messageId":"2178","endLine":53,"endColumn":19},{"ruleId":"2175","severity":1,"message":"2228","line":53,"column":21,"nodeType":"2177","messageId":"2178","endLine":53,"endColumn":33},{"ruleId":"2175","severity":1,"message":"2229","line":56,"column":10,"nodeType":"2177","messageId":"2178","endLine":56,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2230","line":58,"column":10,"nodeType":"2177","messageId":"2178","endLine":58,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2231","line":58,"column":23,"nodeType":"2177","messageId":"2178","endLine":58,"endColumn":37},{"ruleId":"2209","severity":1,"message":"2210","line":120,"column":11,"nodeType":"2211","messageId":"2212","endLine":120,"endColumn":22},{"ruleId":"2209","severity":1,"message":"2210","line":148,"column":17,"nodeType":"2211","messageId":"2212","endLine":148,"endColumn":28},{"ruleId":"2175","severity":1,"message":"2232","line":152,"column":21,"nodeType":"2177","messageId":"2178","endLine":152,"endColumn":28},{"ruleId":"2175","severity":1,"message":"2233","line":170,"column":46,"nodeType":"2177","messageId":"2178","endLine":170,"endColumn":54},{"ruleId":"2209","severity":1,"message":"2210","line":298,"column":13,"nodeType":"2211","messageId":"2212","endLine":298,"endColumn":24},{"ruleId":"2209","severity":1,"message":"2210","line":362,"column":7,"nodeType":"2211","messageId":"2212","endLine":362,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":62,"column":7,"nodeType":"2211","messageId":"2212","endLine":62,"endColumn":18},{"ruleId":"2175","severity":1,"message":"2221","line":24,"column":10,"nodeType":"2177","messageId":"2178","endLine":24,"endColumn":22},{"ruleId":"2209","severity":1,"message":"2210","line":90,"column":5,"nodeType":"2211","messageId":"2212","endLine":90,"endColumn":16},{"ruleId":"2209","severity":1,"message":"2210","line":146,"column":7,"nodeType":"2211","messageId":"2212","endLine":146,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":175,"column":9,"nodeType":"2211","messageId":"2212","endLine":175,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2234","line":4,"column":52,"nodeType":"2177","messageId":"2178","endLine":4,"endColumn":62},{"ruleId":"2175","severity":1,"message":"2235","line":55,"column":9,"nodeType":"2177","messageId":"2178","endLine":55,"endColumn":24},{"ruleId":"2175","severity":1,"message":"2214","line":2,"column":25,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":34},{"ruleId":"2175","severity":1,"message":"2220","line":6,"column":8,"nodeType":"2177","messageId":"2178","endLine":6,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2236","line":2,"column":8,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":13},{"ruleId":"2175","severity":1,"message":"2237","line":3,"column":8,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":15},{"ruleId":"2175","severity":1,"message":"2238","line":4,"column":8,"nodeType":"2177","messageId":"2178","endLine":4,"endColumn":13},{"ruleId":"2175","severity":1,"message":"2239","line":5,"column":8,"nodeType":"2177","messageId":"2178","endLine":5,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":21,"column":5,"nodeType":"2211","messageId":"2212","endLine":21,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":76,"column":5,"nodeType":"2211","messageId":"2212","endLine":76,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":58,"column":3,"nodeType":"2211","messageId":"2212","endLine":58,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":65,"column":3,"nodeType":"2211","messageId":"2212","endLine":65,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":79,"column":2,"nodeType":"2211","messageId":"2212","endLine":79,"endColumn":13},{"ruleId":"2209","severity":1,"message":"2210","line":83,"column":2,"nodeType":"2211","messageId":"2212","endLine":83,"endColumn":13},{"ruleId":"2175","severity":1,"message":"2240","line":95,"column":92,"nodeType":"2177","messageId":"2178","endLine":95,"endColumn":101},{"ruleId":"2209","severity":1,"message":"2210","line":96,"column":2,"nodeType":"2211","messageId":"2212","endLine":96,"endColumn":13},{"ruleId":"2209","severity":1,"message":"2210","line":100,"column":3,"nodeType":"2211","messageId":"2212","endLine":100,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":123,"column":2,"nodeType":"2211","messageId":"2212","endLine":123,"endColumn":13},{"ruleId":"2209","severity":1,"message":"2210","line":128,"column":2,"nodeType":"2211","messageId":"2212","endLine":128,"endColumn":13},{"ruleId":"2175","severity":1,"message":"2241","line":129,"column":20,"nodeType":"2177","messageId":"2178","endLine":129,"endColumn":36},{"ruleId":"2209","severity":1,"message":"2210","line":130,"column":2,"nodeType":"2211","messageId":"2212","endLine":130,"endColumn":13},{"ruleId":"2209","severity":1,"message":"2210","line":133,"column":3,"nodeType":"2211","messageId":"2212","endLine":133,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":136,"column":4,"nodeType":"2211","messageId":"2212","endLine":136,"endColumn":15},{"ruleId":"2209","severity":1,"message":"2210","line":141,"column":3,"nodeType":"2211","messageId":"2212","endLine":141,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2242","line":145,"column":83,"nodeType":"2177","messageId":"2178","endLine":145,"endColumn":109},{"ruleId":"2209","severity":1,"message":"2210","line":146,"column":2,"nodeType":"2211","messageId":"2212","endLine":146,"endColumn":13},{"ruleId":"2209","severity":1,"message":"2210","line":149,"column":2,"nodeType":"2211","messageId":"2212","endLine":149,"endColumn":13},{"ruleId":"2175","severity":1,"message":"2243","line":14,"column":10,"nodeType":"2177","messageId":"2178","endLine":14,"endColumn":24},{"ruleId":"2175","severity":1,"message":"2244","line":37,"column":10,"nodeType":"2177","messageId":"2178","endLine":37,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2245","line":41,"column":10,"nodeType":"2177","messageId":"2178","endLine":41,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2246","line":132,"column":9,"nodeType":"2177","messageId":"2178","endLine":132,"endColumn":28},{"ruleId":"2209","severity":1,"message":"2210","line":136,"column":7,"nodeType":"2211","messageId":"2212","endLine":136,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":138,"column":9,"nodeType":"2211","messageId":"2212","endLine":138,"endColumn":20},{"ruleId":"2209","severity":1,"message":"2210","line":154,"column":11,"nodeType":"2211","messageId":"2212","endLine":154,"endColumn":22},{"ruleId":"2209","severity":1,"message":"2210","line":164,"column":11,"nodeType":"2211","messageId":"2212","endLine":164,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2247","line":3,"column":3,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":9},{"ruleId":"2175","severity":1,"message":"2248","line":3,"column":23,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":29},{"ruleId":"2175","severity":1,"message":"2249","line":3,"column":31,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":40},{"ruleId":"2175","severity":1,"message":"2250","line":16,"column":9,"nodeType":"2177","messageId":"2178","endLine":16,"endColumn":24},{"ruleId":"2209","severity":1,"message":"2210","line":18,"column":7,"nodeType":"2211","messageId":"2212","endLine":18,"endColumn":18},{"ruleId":"2175","severity":1,"message":"2251","line":1,"column":10,"nodeType":"2177","messageId":"2178","endLine":1,"endColumn":34},{"ruleId":"2175","severity":1,"message":"2252","line":2,"column":10,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":17},{"ruleId":"2175","severity":1,"message":"2253","line":2,"column":19,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":25},{"ruleId":"2175","severity":1,"message":"2254","line":3,"column":28,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":36},{"ruleId":"2175","severity":1,"message":"2255","line":4,"column":10,"nodeType":"2177","messageId":"2178","endLine":4,"endColumn":15},{"ruleId":"2175","severity":1,"message":"2256","line":5,"column":8,"nodeType":"2177","messageId":"2178","endLine":5,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2257","line":6,"column":10,"nodeType":"2177","messageId":"2178","endLine":6,"endColumn":13},{"ruleId":"2175","severity":1,"message":"2258","line":6,"column":15,"nodeType":"2177","messageId":"2178","endLine":6,"endColumn":18},{"ruleId":"2175","severity":1,"message":"2259","line":7,"column":10,"nodeType":"2177","messageId":"2178","endLine":7,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2251","line":1,"column":10,"nodeType":"2177","messageId":"2178","endLine":1,"endColumn":34},{"ruleId":"2175","severity":1,"message":"2252","line":2,"column":10,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":17},{"ruleId":"2175","severity":1,"message":"2253","line":2,"column":19,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":25},{"ruleId":"2175","severity":1,"message":"2220","line":3,"column":8,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2255","line":5,"column":10,"nodeType":"2177","messageId":"2178","endLine":5,"endColumn":15},{"ruleId":"2175","severity":1,"message":"2260","line":9,"column":5,"nodeType":"2177","messageId":"2178","endLine":9,"endColumn":6},{"ruleId":"2175","severity":1,"message":"2261","line":13,"column":21,"nodeType":"2177","messageId":"2178","endLine":13,"endColumn":33},{"ruleId":"2175","severity":1,"message":"2262","line":22,"column":9,"nodeType":"2177","messageId":"2178","endLine":22,"endColumn":19},{"ruleId":"2263","severity":1,"message":"2264","line":10,"column":1,"nodeType":"2265","messageId":"2266","endLine":10,"endColumn":35},{"ruleId":"2175","severity":1,"message":"2267","line":23,"column":5,"nodeType":"2177","messageId":"2178","endLine":23,"endColumn":24},{"ruleId":"2175","severity":1,"message":"2268","line":26,"column":5,"nodeType":"2177","messageId":"2178","endLine":26,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2269","line":15,"column":10,"nodeType":"2177","messageId":"2178","endLine":15,"endColumn":13},{"ruleId":"2175","severity":1,"message":"2268","line":28,"column":5,"nodeType":"2177","messageId":"2178","endLine":28,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2270","line":32,"column":21,"nodeType":"2177","messageId":"2178","endLine":32,"endColumn":33},{"ruleId":"2209","severity":1,"message":"2210","line":19,"column":3,"nodeType":"2211","messageId":"2212","endLine":19,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2271","line":3,"column":3,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":20},{"ruleId":"2209","severity":1,"message":"2210","line":52,"column":7,"nodeType":"2211","messageId":"2212","endLine":52,"endColumn":20},{"ruleId":"2209","severity":1,"message":"2210","line":97,"column":7,"nodeType":"2211","messageId":"2212","endLine":97,"endColumn":18},{"ruleId":"2175","severity":1,"message":"2272","line":19,"column":17,"nodeType":"2177","messageId":"2178","endLine":19,"endColumn":25},{"ruleId":"2175","severity":1,"message":"2273","line":20,"column":21,"nodeType":"2177","messageId":"2178","endLine":20,"endColumn":33},{"ruleId":"2209","severity":1,"message":"2210","line":59,"column":5,"nodeType":"2211","messageId":"2212","endLine":59,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2274","line":145,"column":9,"nodeType":"2177","messageId":"2178","endLine":145,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2275","line":45,"column":48,"nodeType":"2177","messageId":"2178","endLine":45,"endColumn":56},{"ruleId":"2175","severity":1,"message":"2276","line":5,"column":31,"nodeType":"2177","messageId":"2178","endLine":5,"endColumn":35},{"ruleId":"2175","severity":1,"message":"2277","line":21,"column":10,"nodeType":"2177","messageId":"2178","endLine":21,"endColumn":33},{"ruleId":"2175","severity":1,"message":"2278","line":21,"column":35,"nodeType":"2177","messageId":"2178","endLine":21,"endColumn":61},{"ruleId":"2175","severity":1,"message":"2279","line":11,"column":8,"nodeType":"2177","messageId":"2178","endLine":11,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2280","line":14,"column":8,"nodeType":"2177","messageId":"2178","endLine":14,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2281","line":29,"column":45,"nodeType":"2177","messageId":"2178","endLine":29,"endColumn":63},{"ruleId":"2175","severity":1,"message":"2282","line":30,"column":3,"nodeType":"2177","messageId":"2178","endLine":30,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2283","line":3,"column":8,"nodeType":"2177","messageId":"2178","endLine":3,"endColumn":14},{"ruleId":"2209","severity":1,"message":"2210","line":48,"column":10,"nodeType":"2211","messageId":"2212","endLine":48,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2284","line":2,"column":8,"nodeType":"2177","messageId":"2178","endLine":2,"endColumn":19},{"ruleId":"2175","severity":1,"message":"2285","line":20,"column":9,"nodeType":"2177","messageId":"2178","endLine":20,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2286","line":372,"column":38,"nodeType":"2177","messageId":"2178","endLine":372,"endColumn":44},{"ruleId":"2175","severity":1,"message":"2287","line":12,"column":9,"nodeType":"2177","messageId":"2178","endLine":12,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":52,"column":9,"nodeType":"2211","messageId":"2212","endLine":52,"endColumn":20},{"ruleId":"2175","severity":1,"message":"2190","line":7,"column":17,"nodeType":"2177","messageId":"2178","endLine":7,"endColumn":22},{"ruleId":"2209","severity":1,"message":"2210","line":16,"column":92,"nodeType":"2211","messageId":"2212","endLine":16,"endColumn":103},{"ruleId":"2209","severity":1,"message":"2210","line":20,"column":5,"nodeType":"2211","messageId":"2212","endLine":20,"endColumn":16},{"ruleId":"2209","severity":1,"message":"2210","line":41,"column":9,"nodeType":"2211","messageId":"2212","endLine":41,"endColumn":20},{"ruleId":"2209","severity":1,"message":"2210","line":44,"column":9,"nodeType":"2211","messageId":"2212","endLine":44,"endColumn":22},{"ruleId":"2209","severity":1,"message":"2210","line":60,"column":5,"nodeType":"2211","messageId":"2212","endLine":60,"endColumn":16},{"ruleId":"2209","severity":1,"message":"2210","line":63,"column":34,"nodeType":"2211","messageId":"2212","endLine":63,"endColumn":45},{"ruleId":"2209","severity":1,"message":"2210","line":65,"column":3,"nodeType":"2211","messageId":"2212","endLine":65,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2288","line":7,"column":8,"nodeType":"2177","messageId":"2178","endLine":7,"endColumn":11},{"ruleId":"2175","severity":1,"message":"2190","line":9,"column":17,"nodeType":"2177","messageId":"2178","endLine":9,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2289","line":11,"column":7,"nodeType":"2177","messageId":"2178","endLine":11,"endColumn":21},{"ruleId":"2175","severity":1,"message":"2195","line":120,"column":28,"nodeType":"2177","messageId":"2178","endLine":120,"endColumn":47},{"ruleId":"2209","severity":1,"message":"2210","line":167,"column":7,"nodeType":"2211","messageId":"2212","endLine":167,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":123,"column":5,"nodeType":"2211","messageId":"2212","endLine":123,"endColumn":16},{"ruleId":"2209","severity":1,"message":"2210","line":124,"column":5,"nodeType":"2211","messageId":"2212","endLine":124,"endColumn":16},{"ruleId":"2175","severity":1,"message":"2190","line":18,"column":30,"nodeType":"2177","messageId":"2178","endLine":18,"endColumn":35},{"ruleId":"2175","severity":1,"message":"2290","line":11,"column":22,"nodeType":"2177","messageId":"2178","endLine":11,"endColumn":26},{"ruleId":"2175","severity":1,"message":"2291","line":20,"column":8,"nodeType":"2177","messageId":"2178","endLine":20,"endColumn":20},{"ruleId":"2196","severity":1,"message":"2201","line":47,"column":151,"nodeType":"2198","messageId":"2202","endLine":47,"endColumn":152,"fix":"2292"},{"ruleId":"2209","severity":1,"message":"2210","line":63,"column":7,"nodeType":"2211","messageId":"2212","endLine":63,"endColumn":18},{"ruleId":"2209","severity":1,"message":"2210","line":68,"column":3,"nodeType":"2211","messageId":"2212","endLine":68,"endColumn":14},{"ruleId":"2175","severity":1,"message":"2293","line":34,"column":8,"nodeType":"2177","messageId":"2178","endLine":34,"endColumn":9},{"ruleId":"2175","severity":1,"message":"2294","line":65,"column":10,"nodeType":"2177","messageId":"2178","endLine":65,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2295","line":65,"column":24,"nodeType":"2177","messageId":"2178","endLine":65,"endColumn":39},{"ruleId":"2196","severity":1,"message":"2201","line":138,"column":159,"nodeType":"2198","messageId":"2202","endLine":138,"endColumn":160,"fix":"2296"},{"ruleId":"2175","severity":1,"message":"2255","line":7,"column":64,"nodeType":"2177","messageId":"2178","endLine":7,"endColumn":69},{"ruleId":"2175","severity":1,"message":"2293","line":34,"column":8,"nodeType":"2177","messageId":"2178","endLine":34,"endColumn":9},{"ruleId":"2175","severity":1,"message":"2294","line":65,"column":10,"nodeType":"2177","messageId":"2178","endLine":65,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2295","line":65,"column":24,"nodeType":"2177","messageId":"2178","endLine":65,"endColumn":39},{"ruleId":"2196","severity":1,"message":"2201","line":134,"column":159,"nodeType":"2198","messageId":"2202","endLine":134,"endColumn":160,"fix":"2297"},{"ruleId":"2175","severity":1,"message":"2255","line":6,"column":64,"nodeType":"2177","messageId":"2178","endLine":6,"endColumn":69},{"ruleId":"2175","severity":1,"message":"2293","line":33,"column":8,"nodeType":"2177","messageId":"2178","endLine":33,"endColumn":9},{"ruleId":"2175","severity":1,"message":"2294","line":66,"column":10,"nodeType":"2177","messageId":"2178","endLine":66,"endColumn":22},{"ruleId":"2175","severity":1,"message":"2295","line":66,"column":24,"nodeType":"2177","messageId":"2178","endLine":66,"endColumn":39},{"ruleId":"2196","severity":1,"message":"2201","line":137,"column":151,"nodeType":"2198","messageId":"2202","endLine":137,"endColumn":152,"fix":"2298"},"no-unused-vars","'cryptoRoutes' is defined but never used.","Identifier","unusedVar","'enableCrypto' is defined but never used.","'CryptoFooter' is defined but never used.","'leftSidebarTypes' is assigned a value but never used.","'backgroundImage' is assigned a value but never used.","'value' is defined but never used.","'CryptoDemoRegister' is defined but never used.","'CryptoLiveRegister' is defined but never used.","'LightDark' is defined but never used.","'PORTALS' is defined but never used.","'ENABLE_DARK_MODE' is defined but never used.","'CryptoSidebarContent' is defined but never used.","'props' is defined but never used.","'OrderFilter' is defined but never used.","'ConvertFilters' is defined but never used.","'ordersFilterHandler' is assigned a value but never used.","'convertsFilterHandler' is assigned a value but never used.","'setSelectedPlatform' is assigned a value but never used.","object-curly-spacing","A space is required after '{'.","ObjectExpression","requireSpaceAfter",{"range":"2299","text":"2300"},"A space is required before '}'.","requireSpaceBefore",{"range":"2301","text":"2300"},"'fetchProfile' is defined but never used.","'history' is assigned a value but never used.","'portal' is assigned a value but never used.","'addWithdrawal' is defined but never used.","'accounts' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'Td' is defined but never used.","'useEffect' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'height' is assigned a value but never used.","'ibAccounts' is assigned a value but never used.","'Select' is defined but never used.","'validateFile' is defined but never used.",{"range":"2302","text":"2300"},{"range":"2303","text":"2300"},"'PerfectMoney' is defined but never used.","'submitting' is assigned a value but never used.","'setSelectedAccount' is assigned a value but never used.","'resAmount' is assigned a value but never used.","'setResAmount' is assigned a value but never used.","'baseCurrency' is assigned a value but never used.","'epaymeState' is assigned a value but never used.","'setEpaymeState' is assigned a value but never used.","'success' is assigned a value but never used.","'response' is defined but never used.","'AvFeedback' is defined but never used.","'confirmPassword' is assigned a value but never used.","'spain' is defined but never used.","'germany' is defined but never used.","'italy' is defined but never used.","'russia' is defined but never used.","'extension' is defined but never used.","'firstDataRequest' is assigned a value but never used.","'onResetCacheNeededCallback' is defined but never used.","'finiticPayFees' is defined but never used.","'payeeAccount' is assigned a value but never used.","'feesLoading' is assigned a value but never used.","'handleOnValidSubmit' is assigned a value but never used.","'Button' is defined but never used.","'result' is defined but never used.","'setResult' is defined but never used.","'initiateEPaySDK' is assigned a value but never used.","'fetchCompanyBankAccounts' is defined but never used.","'AvField' is defined but never used.","'AvForm' is defined but never used.","'useState' is defined but never used.","'Label' is defined but never used.","'CustomSelect' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'useSelector' is defined but never used.","'t' is assigned a value but never used.","'setA3tmadBox' is assigned a value but never used.","'a3tmadList' is assigned a value but never used.","no-duplicate-imports","'react' import is duplicated.","ImportDeclaration","import","'setAmountValidation' is assigned a value but never used.","'minDepositAmount' is assigned a value but never used.","'max' is defined but never used.","'setMinAmount' is assigned a value but never used.","'privacyPolicyLink' is defined but never used.","'setColor' is assigned a value but never used.","'setBrushSize' is assigned a value but never used.","'downloadSignature' is assigned a value but never used.","'platform' is defined but never used.","'logo' is defined but never used.","'isCheckAllNotifications' is assigned a value but never used.","'setIsCheckAllNotifications' is assigned a value but never used.","'webTraderSvg' is defined but never used.","'affiliateSvg' is defined but never used.","'ibAllowtranscation' is assigned a value but never used.","'partnershipStatus' is defined but never used.","'Slider' is defined but never used.","'CustomTable' is defined but never used.","'columns' is assigned a value but never used.","'values' is defined but never used.","'imagesUrl' is assigned a value but never used.","'def' is defined but never used.","'PlatformSelect' is assigned a value but never used.","'Link' is defined but never used.","'CarouselPage' is defined but never used.",{"range":"2304","text":"2300"},"'_' is defined but never used.","'showPassword' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.",{"range":"2305","text":"2300"},{"range":"2306","text":"2300"},{"range":"2307","text":"2300"},[5188,5188]," ",[5201,5201],[16047,16047],[16056,16056],[1587,1587],[5160,5160],[5106,5106],[5128,5128]]