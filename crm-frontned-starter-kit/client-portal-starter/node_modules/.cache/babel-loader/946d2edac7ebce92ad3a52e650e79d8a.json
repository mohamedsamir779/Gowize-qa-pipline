{"ast":null,"code":"import{call,put,takeEvery}from\"redux-saga/effects\";import*as historyApi from\"../../../apis/transactions\";import{apiError,getDepositsSuccess,getWithdrawalsSuccess,getConvertsSuccess,fetchDepositGateWaySuccess,fetchDepositGateWayFail,fetchWithdrawalGateWaySuccess,fetchWithdrawalGateWayFail}from\"./actions\";import{GET_DEPOSITS_START,GET_WITHDRAWALS_START,GET_CONVERT_START,FETCH_DEPOSIT_GATEWAY_REQUESTED,FETCH_WITHDRAWAL_GATEWAY_REQUESTED}from\"./actionTypes\";function fetchWithdrawals(_ref){let{payload}=_ref;return function*(){try{const data=yield call(historyApi.getWithdrawals,payload);const{result,status}=data;if(status){yield put(getWithdrawalsSuccess(result));}}catch(error){yield put(apiError(error));}}();}function fetchDeposits(_ref2){let{payload}=_ref2;return function*(){try{const data=yield call(historyApi.getDeposits,payload);const{result,status}=data;if(status){yield put(getDepositsSuccess(result));}}catch(error){yield put(apiError(error));}}();}function fetchConverts(_ref3){let{payload}=_ref3;return function*(){try{const data=yield call(historyApi.getConverts,payload);const{result,status}=data;if(status){yield put(getConvertsSuccess(result));}}catch(error){yield put(apiError(error));}}();}function*getDepositGateWays(){try{const data=yield call(historyApi.getDepositGateWays);yield put(fetchDepositGateWaySuccess(data));}catch(error){yield put(fetchDepositGateWayFail({error:error.message}));}}function*getWithdrawalGateWays(){try{const data=yield call(historyApi.getWithdrawalGateWays);yield put(fetchWithdrawalGateWaySuccess(data));}catch(error){yield put(fetchWithdrawalGateWayFail({error:error.message}));}}function*historySaga(){yield takeEvery(GET_DEPOSITS_START,fetchDeposits);yield takeEvery(GET_WITHDRAWALS_START,fetchWithdrawals);yield takeEvery(GET_CONVERT_START,fetchConverts);yield takeEvery(FETCH_DEPOSIT_GATEWAY_REQUESTED,getDepositGateWays);yield takeEvery(FETCH_WITHDRAWAL_GATEWAY_REQUESTED,getWithdrawalGateWays);}export default historySaga;","map":{"version":3,"names":["call","put","takeEvery","historyApi","apiError","getDepositsSuccess","getWithdrawalsSuccess","getConvertsSuccess","fetchDepositGateWaySuccess","fetchDepositGateWayFail","fetchWithdrawalGateWaySuccess","fetchWithdrawalGateWayFail","GET_DEPOSITS_START","GET_WITHDRAWALS_START","GET_CONVERT_START","FETCH_DEPOSIT_GATEWAY_REQUESTED","FETCH_WITHDRAWAL_GATEWAY_REQUESTED","fetchWithdrawals","_ref","payload","data","getWithdrawals","result","status","error","fetchDeposits","_ref2","getDeposits","fetchConverts","_ref3","getConverts","getDepositGateWays","message","getWithdrawalGateWays","historySaga"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/history/saga.js"],"sourcesContent":["import {\n  call,\n  put,\n  takeEvery\n} from \"redux-saga/effects\";\nimport * as historyApi from \"../../../apis/transactions\";\nimport {\n  apiError, \n  getDepositsSuccess, \n  getWithdrawalsSuccess, \n  getConvertsSuccess,\n\n  fetchDepositGateWaySuccess,\n  fetchDepositGateWayFail,\n\n  fetchWithdrawalGateWaySuccess,\n  fetchWithdrawalGateWayFail\n} from \"./actions\";\nimport { \n  GET_DEPOSITS_START, \n  GET_WITHDRAWALS_START,\n  GET_CONVERT_START,\n\n  FETCH_DEPOSIT_GATEWAY_REQUESTED,\n\n  FETCH_WITHDRAWAL_GATEWAY_REQUESTED\n} from \"./actionTypes\";\n\nfunction * fetchWithdrawals({ payload }){\n  try {\n    const data = yield call(historyApi.getWithdrawals, payload);\n    const { result, status } = data;\n    if (status){\n      yield put(getWithdrawalsSuccess(result));\n    }\n  } catch (error){\n    yield put(apiError(error));\n  }\n}\n\nfunction * fetchDeposits ({ payload }){\n  try {\n    const data = yield call(historyApi.getDeposits, payload);\n    const { result, status } = data;\n    if (status){\n      yield put(getDepositsSuccess(result));\n    }\n      \n  } catch (error){\n    yield put(apiError(error));\n  }\n}\n\nfunction * fetchConverts({ payload }){\n  try {\n    const data = yield call(historyApi.getConverts, payload);\n    const { result, status } = data;\n    if (status){\n      yield put(getConvertsSuccess(result));\n    }\n  } catch (error){\n    yield put(apiError(error));\n  }\n}\n\nfunction * getDepositGateWays(){\n  try {\n    const data = yield call(historyApi.getDepositGateWays);\n    yield put(fetchDepositGateWaySuccess(data));\n  } catch (error){\n    yield put(fetchDepositGateWayFail({ error: error.message }));\n  }\n}\n\nfunction * getWithdrawalGateWays(){\n  try {\n    const data = yield call(historyApi.getWithdrawalGateWays);\n    yield put(fetchWithdrawalGateWaySuccess(data));\n  } catch (error){\n    yield put(fetchWithdrawalGateWayFail({ error: error.message }));\n  }\n}\n\nfunction * historySaga(){\n  yield takeEvery(GET_DEPOSITS_START, fetchDeposits);\n  yield takeEvery(GET_WITHDRAWALS_START, fetchWithdrawals);\n  yield takeEvery(GET_CONVERT_START, fetchConverts);\n  yield takeEvery(FETCH_DEPOSIT_GATEWAY_REQUESTED, getDepositGateWays);\n  yield takeEvery(FETCH_WITHDRAWAL_GATEWAY_REQUESTED, getWithdrawalGateWays);\n}\n\nexport default historySaga;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}