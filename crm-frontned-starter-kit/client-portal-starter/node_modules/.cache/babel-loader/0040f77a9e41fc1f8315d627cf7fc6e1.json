{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _copy = _interopRequireDefault(require(\"../rect/copy\"));\nvar _crop = _interopRequireDefault(require(\"../rect/crop\"));\nvar _slice = _interopRequireDefault(require(\"../block/slice\"));\nvar _height = _interopRequireDefault(require(\"../block/height\"));\nvar _truncate = _interopRequireDefault(require(\"../block/truncate\"));\nvar _layoutParagraph = _interopRequireDefault(require(\"./layoutParagraph\"));\nvar _sliceAtHeight = _interopRequireDefault(require(\"../block/sliceAtHeight\"));\n\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  container rect\n * @param  {Object}  attributed strings (paragraphs)\n * @return {Array} paragraph blocks\n */\nvar typesetter = function typesetter(engines, options, container, attributedStrings) {\n  var blocks = [];\n  var paragraphs = [].concat(attributedStrings);\n  var maxLines = R.propOr(Infinity, 'maxLines', container);\n  var truncateEllipsis = container.truncateMode === 'ellipsis';\n  var linesCount = maxLines;\n  var paragraphRect = (0, _copy[\"default\"])(container);\n  var nextParagraph = paragraphs.shift();\n  while (linesCount > 0 && nextParagraph) {\n    var block = (0, _layoutParagraph[\"default\"])(engines, options)(paragraphRect, nextParagraph);\n    var slicedBlock = (0, _slice[\"default\"])(linesCount, block);\n    var linesHeight = (0, _height[\"default\"])(slicedBlock);\n    var shouldTruncate = truncateEllipsis && block.length !== slicedBlock.length;\n    linesCount -= slicedBlock.length;\n    if (paragraphRect.height >= linesHeight) {\n      blocks.push(R.when(R.always(shouldTruncate), _truncate[\"default\"])(slicedBlock));\n      paragraphRect = (0, _crop[\"default\"])(linesHeight, paragraphRect);\n      nextParagraph = paragraphs.shift();\n    } else {\n      blocks.push(R.compose(_truncate[\"default\"], (0, _sliceAtHeight[\"default\"])(paragraphRect.height))(slicedBlock));\n      break;\n    }\n  }\n  return blocks;\n};\nvar _default = R.curryN(4, typesetter);\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_copy","_crop","_slice","_height","_truncate","_layoutParagraph","_sliceAtHeight","typesetter","engines","options","container","attributedStrings","blocks","paragraphs","concat","maxLines","propOr","Infinity","truncateEllipsis","truncateMode","linesCount","paragraphRect","nextParagraph","shift","block","slicedBlock","linesHeight","shouldTruncate","length","height","push","when","always","compose","_default","curryN"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@react-pdf/textkit/layout/typesetter.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _copy = _interopRequireDefault(require(\"../rect/copy\"));\n\nvar _crop = _interopRequireDefault(require(\"../rect/crop\"));\n\nvar _slice = _interopRequireDefault(require(\"../block/slice\"));\n\nvar _height = _interopRequireDefault(require(\"../block/height\"));\n\nvar _truncate = _interopRequireDefault(require(\"../block/truncate\"));\n\nvar _layoutParagraph = _interopRequireDefault(require(\"./layoutParagraph\"));\n\nvar _sliceAtHeight = _interopRequireDefault(require(\"../block/sliceAtHeight\"));\n\n/**\n * Layout paragraphs inside container until it does not\n * fit anymore, performing line wrapping in the process.\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  container rect\n * @param  {Object}  attributed strings (paragraphs)\n * @return {Array} paragraph blocks\n */\nvar typesetter = function typesetter(engines, options, container, attributedStrings) {\n  var blocks = [];\n  var paragraphs = [].concat(attributedStrings);\n  var maxLines = R.propOr(Infinity, 'maxLines', container);\n  var truncateEllipsis = container.truncateMode === 'ellipsis';\n  var linesCount = maxLines;\n  var paragraphRect = (0, _copy[\"default\"])(container);\n  var nextParagraph = paragraphs.shift();\n\n  while (linesCount > 0 && nextParagraph) {\n    var block = (0, _layoutParagraph[\"default\"])(engines, options)(paragraphRect, nextParagraph);\n    var slicedBlock = (0, _slice[\"default\"])(linesCount, block);\n    var linesHeight = (0, _height[\"default\"])(slicedBlock);\n    var shouldTruncate = truncateEllipsis && block.length !== slicedBlock.length;\n    linesCount -= slicedBlock.length;\n\n    if (paragraphRect.height >= linesHeight) {\n      blocks.push(R.when(R.always(shouldTruncate), _truncate[\"default\"])(slicedBlock));\n      paragraphRect = (0, _crop[\"default\"])(linesHeight, paragraphRect);\n      nextParagraph = paragraphs.shift();\n    } else {\n      blocks.push(R.compose(_truncate[\"default\"], (0, _sliceAtHeight[\"default\"])(paragraphRect.height))(slicedBlock));\n      break;\n    }\n  }\n\n  return blocks;\n};\n\nvar _default = R.curryN(4, typesetter);\n\nexports[\"default\"] = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}