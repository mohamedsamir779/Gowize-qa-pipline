{"ast":null,"code":"import{call,put,takeEvery}from\"redux-saga/effects\";import{FETCH_DICTIONARY_START}from\"./actionTypes\";import{fetchDictEnd}from\"./actions\";import*as dictApi from\"../../../apis/dictionary\";function*fetchDict(){try{const data=yield call(dictApi.getDictionary);yield put(fetchDictEnd(data.result));}catch(error){yield put(fetchDictEnd({error:error.message}));}}function*authSaga(){yield takeEvery(FETCH_DICTIONARY_START,fetchDict);}export default authSaga;","map":{"version":3,"names":["call","put","takeEvery","FETCH_DICTIONARY_START","fetchDictEnd","dictApi","fetchDict","data","getDictionary","result","error","message","authSaga"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/dictionary/saga.js"],"sourcesContent":["import {\n  call, put, takeEvery\n} from \"redux-saga/effects\";\n\nimport {\n  FETCH_DICTIONARY_START,\n} from \"./actionTypes\";\nimport {\n  fetchDictEnd,\n} from \"./actions\";\n  \nimport * as dictApi from \"../../../apis/dictionary\";\n  \n  \nfunction * fetchDict(){\n  try {\n    const data = yield call(dictApi.getDictionary);\n    yield put(fetchDictEnd(data.result));\n  }\n  catch (error){\n    yield put(fetchDictEnd({\n      error: error.message,\n    }));\n  }  \n}\n\nfunction* authSaga() {\n  yield takeEvery(FETCH_DICTIONARY_START, fetchDict);\n\n}\n\nexport default authSaga;\n"],"mappings":"AAAA,OACEA,IAAI,CAAEC,GAAG,CAAEC,SAAS,KACf,oBAAoB,CAE3B,OACEC,sBAAsB,KACjB,eAAe,CACtB,OACEC,YAAY,KACP,WAAW,CAElB,MAAO,GAAK,CAAAC,OAAO,KAAM,0BAA0B,CAGnD,SAAWC,SAASA,CAAA,CAAE,CACpB,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,IAAI,CAACK,OAAO,CAACG,aAAa,CAAC,CAC9C,KAAM,CAAAP,GAAG,CAACG,YAAY,CAACG,IAAI,CAACE,MAAM,CAAC,CAAC,CACtC,CACA,MAAOC,KAAK,CAAC,CACX,KAAM,CAAAT,GAAG,CAACG,YAAY,CAAC,CACrBM,KAAK,CAAEA,KAAK,CAACC,OACf,CAAC,CAAC,CAAC,CACL,CACF,CAEA,SAAUC,QAAQA,CAAA,CAAG,CACnB,KAAM,CAAAV,SAAS,CAACC,sBAAsB,CAAEG,SAAS,CAAC,CAEpD,CAEA,cAAe,CAAAM,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}