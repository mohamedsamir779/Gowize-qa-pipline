{"ast":null,"code":"import{takeEvery,fork,put,all,call}from\"redux-saga/effects\";// Login Redux States\nimport{FORGET_PASSWORD}from\"./actionTypes\";import{userForgetPasswordSuccess,userForgetPasswordError}from\"./actions\";import{forgotPassword}from\"../../../../apis/auth\";//If user is send successfully send mail link then dispatch redux action's are directly from here.\nfunction forgetUser(_ref){let{payload}=_ref;return function*(){try{const response=yield call(forgotPassword,payload);if(response){yield put(userForgetPasswordSuccess(\"Reset link are sent to your mailbox, check there first\"));}}catch(error){yield put(userForgetPasswordError(error.message));}}();}export function*watchUserPasswordForget(){yield takeEvery(FORGET_PASSWORD,forgetUser);}function*forgetPasswordSaga(){yield all([fork(watchUserPasswordForget)]);}export default forgetPasswordSaga;","map":{"version":3,"names":["takeEvery","fork","put","all","call","FORGET_PASSWORD","userForgetPasswordSuccess","userForgetPasswordError","forgotPassword","forgetUser","_ref","payload","response","error","message","watchUserPasswordForget","forgetPasswordSaga"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/forgetpwd/saga.js"],"sourcesContent":["import {\n  takeEvery, fork, put, all, call \n} from \"redux-saga/effects\";\n\n// Login Redux States\nimport { FORGET_PASSWORD } from \"./actionTypes\";\nimport { userForgetPasswordSuccess, userForgetPasswordError } from \"./actions\";\n\nimport { forgotPassword } from \"../../../../apis/auth\";\n\n//If user is send successfully send mail link then dispatch redux action's are directly from here.\nfunction* forgetUser({ payload }) {\n  try {\n    const response = yield call(forgotPassword, payload);\n    if (response) {\n      yield put(\n        userForgetPasswordSuccess(\n          \"Reset link are sent to your mailbox, check there first\"\n        )\n      );\n    }\n  } catch (error) {\n    yield put(userForgetPasswordError(error.message));\n  }\n}\n\nexport function* watchUserPasswordForget() {\n  yield takeEvery(FORGET_PASSWORD, forgetUser);\n}\n\nfunction* forgetPasswordSaga() {\n  yield all([fork(watchUserPasswordForget)]);\n}\n\nexport default forgetPasswordSaga;\n"],"mappings":"AAAA,OACEA,SAAS,CAAEC,IAAI,CAAEC,GAAG,CAAEC,GAAG,CAAEC,IAAI,KAC1B,oBAAoB,CAE3B;AACA,OAASC,eAAe,KAAQ,eAAe,CAC/C,OAASC,yBAAyB,CAAEC,uBAAuB,KAAQ,WAAW,CAE9E,OAASC,cAAc,KAAQ,uBAAuB,CAEtD;AACA,QAAU,CAAAC,UAAUA,CAAAC,IAAA,KAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,mBAAE,CAChC,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAR,IAAI,CAACI,cAAc,CAAEG,OAAO,CAAC,CACpD,GAAIC,QAAQ,CAAE,CACZ,KAAM,CAAAV,GAAG,CACPI,yBAAyB,CACvB,wDACF,CACF,CAAC,CACH,CACF,CAAE,MAAOO,KAAK,CAAE,CACd,KAAM,CAAAX,GAAG,CAACK,uBAAuB,CAACM,KAAK,CAACC,OAAO,CAAC,CAAC,CACnD,CACF,CAAC,IAED,MAAO,UAAUC,uBAAuBA,CAAA,CAAG,CACzC,KAAM,CAAAf,SAAS,CAACK,eAAe,CAAEI,UAAU,CAAC,CAC9C,CAEA,SAAUO,kBAAkBA,CAAA,CAAG,CAC7B,KAAM,CAAAb,GAAG,CAAC,CAACF,IAAI,CAACc,uBAAuB,CAAC,CAAC,CAAC,CAC5C,CAEA,cAAe,CAAAC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}