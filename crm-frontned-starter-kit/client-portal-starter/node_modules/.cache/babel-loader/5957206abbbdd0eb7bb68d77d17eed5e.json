{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _isWhiteSpace = _interopRequireDefault(require(\"../glyph/isWhiteSpace\"));\n\n/**\n * Get white space leading positions\n *\n * @param  {Object}  run\n * @return {Array} white space leading positions\n */\nvar leadingPositions = R.converge(R.slice(0), [R.compose(R.length, R.takeWhile(_isWhiteSpace[\"default\"]), R.propOr([], 'glyphs')), R.propOr([], 'positions')]);\n/**\n * Get run leading white space offset\n *\n * @param  {Object}  run\n * @return {number} leading white space offset\n */\n\nvar leadingOffset = R.compose(R.ifElse(R.isEmpty, R.always(0), R.compose(R.sum, R.map(R.propOr(0, 'xAdvance')))), leadingPositions);\nvar _default = leadingOffset;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_isWhiteSpace","leadingPositions","converge","slice","compose","length","takeWhile","propOr","leadingOffset","ifElse","isEmpty","always","sum","map","_default"],"sources":["/home/ubuntu/king/portal/client-portal-starter/node_modules/@react-pdf/textkit/run/leadingOffset.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _isWhiteSpace = _interopRequireDefault(require(\"../glyph/isWhiteSpace\"));\n\n/**\n * Get white space leading positions\n *\n * @param  {Object}  run\n * @return {Array} white space leading positions\n */\nvar leadingPositions = R.converge(R.slice(0), [R.compose(R.length, R.takeWhile(_isWhiteSpace[\"default\"]), R.propOr([], 'glyphs')), R.propOr([], 'positions')]);\n/**\n * Get run leading white space offset\n *\n * @param  {Object}  run\n * @return {number} leading white space offset\n */\n\nvar leadingOffset = R.compose(R.ifElse(R.isEmpty, R.always(0), R.compose(R.sum, R.map(R.propOr(0, 'xAdvance')))), leadingPositions);\nvar _default = leadingOffset;\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpF,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAA+C,CAAC;AAEtFE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,IAAIE,CAAC,GAAGH,uBAAuB,CAACD,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIK,aAAa,GAAGN,sBAAsB,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAC;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,gBAAgB,GAAGF,CAAC,CAACG,QAAQ,CAACH,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,EAAE,CAACJ,CAAC,CAACK,OAAO,CAACL,CAAC,CAACM,MAAM,EAAEN,CAAC,CAACO,SAAS,CAACN,aAAa,CAAC,SAAS,CAAC,CAAC,EAAED,CAAC,CAACQ,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,EAAER,CAAC,CAACQ,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;AAC9J;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,aAAa,GAAGT,CAAC,CAACK,OAAO,CAACL,CAAC,CAACU,MAAM,CAACV,CAAC,CAACW,OAAO,EAAEX,CAAC,CAACY,MAAM,CAAC,CAAC,CAAC,EAAEZ,CAAC,CAACK,OAAO,CAACL,CAAC,CAACa,GAAG,EAAEb,CAAC,CAACc,GAAG,CAACd,CAAC,CAACQ,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,EAAEN,gBAAgB,CAAC;AACnI,IAAIa,QAAQ,GAAGN,aAAa;AAC5BX,OAAO,CAAC,SAAS,CAAC,GAAGiB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}