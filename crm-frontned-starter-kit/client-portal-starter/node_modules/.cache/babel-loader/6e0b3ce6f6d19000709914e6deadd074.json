{"ast":null,"code":"import{call,put,takeLatest}from\"redux-saga/effects\";import{addWithdraw}from\"../../../apis/withdraw\";import{postWithdrawSuccess,postWithdrawFail}from\"./actions\";import{POST_Withdraw_START}from\"./actionTypes\";function makeWithdraw(_ref){let{payload}=_ref;return function*(){try{const result=yield call(addWithdraw,payload);if(result.status){yield put(postWithdrawSuccess(result.message));}}catch(error){yield put(postWithdrawFail(error.message));}}();}// function * fetchWithdraws ({payload}){\n//     try{\n//      const data = yield call(getWithdraws, payload)\n//      const {result, status} = data\n//      if(status){\n//        yield put(getWithdrawsSuccess(result))\n//      }\n//     } catch(error){\n//     }\n//  }\nfunction*withdrawsSaga(){yield takeLatest(POST_Withdraw_START,makeWithdraw);// yield takeEvery(GET_WithdrawS_START, fetchWithdraws)\n}export default withdrawsSaga;","map":{"version":3,"names":["call","put","takeLatest","addWithdraw","postWithdrawSuccess","postWithdrawFail","POST_Withdraw_START","makeWithdraw","_ref","payload","result","status","message","error","withdrawsSaga"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/withdraw/saga.js"],"sourcesContent":["import { \n  call, \n  put, \n  takeLatest\n} from \"redux-saga/effects\";\nimport { addWithdraw } from \"../../../apis/withdraw\";\nimport {\n  postWithdrawSuccess,\n  postWithdrawFail, \n} from \"./actions\";\n\nimport { POST_Withdraw_START } from \"./actionTypes\";\n\nfunction* makeWithdraw({ payload }) {\n  try {\n    const result = yield call(addWithdraw, payload);\n    if (result.status) {\n      yield put(postWithdrawSuccess(result.message));\n    }\n  } catch (error) {\n    yield put(postWithdrawFail(error.message));\n  }\n}\n// function * fetchWithdraws ({payload}){\n//     try{\n//      const data = yield call(getWithdraws, payload)\n//      const {result, status} = data\n//      if(status){\n//        yield put(getWithdrawsSuccess(result))\n//      }\n//     } catch(error){\n\n//     }\n//  }\n\nfunction* withdrawsSaga() {\n  yield takeLatest(POST_Withdraw_START, makeWithdraw);\n  // yield takeEvery(GET_WithdrawS_START, fetchWithdraws)\n}\n\nexport default withdrawsSaga;\n"],"mappings":"AAAA,OACEA,IAAI,CACJC,GAAG,CACHC,UAAU,KACL,oBAAoB,CAC3B,OAASC,WAAW,KAAQ,wBAAwB,CACpD,OACEC,mBAAmB,CACnBC,gBAAgB,KACX,WAAW,CAElB,OAASC,mBAAmB,KAAQ,eAAe,CAEnD,QAAU,CAAAC,YAAYA,CAAAC,IAAA,KAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,mBAAE,CAClC,GAAI,CACF,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAV,IAAI,CAACG,WAAW,CAAEM,OAAO,CAAC,CAC/C,GAAIC,MAAM,CAACC,MAAM,CAAE,CACjB,KAAM,CAAAV,GAAG,CAACG,mBAAmB,CAACM,MAAM,CAACE,OAAO,CAAC,CAAC,CAChD,CACF,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAZ,GAAG,CAACI,gBAAgB,CAACQ,KAAK,CAACD,OAAO,CAAC,CAAC,CAC5C,CACF,CAAC,IACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,SAAUE,aAAaA,CAAA,CAAG,CACxB,KAAM,CAAAZ,UAAU,CAACI,mBAAmB,CAAEC,YAAY,CAAC,CACnD;AACF,CAEA,cAAe,CAAAO,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}