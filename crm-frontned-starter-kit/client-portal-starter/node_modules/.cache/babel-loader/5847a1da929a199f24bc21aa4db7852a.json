{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\n(function () {\n  var Struct, utils;\n  utils = require('./utils');\n  Struct = function () {\n    function Struct(fields) {\n      this.fields = fields != null ? fields : {};\n    }\n    Struct.prototype.decode = function (stream, parent, length) {\n      var res, _ref;\n      if (length == null) {\n        length = 0;\n      }\n      res = this._setup(stream, parent, length);\n      this._parseFields(stream, res, this.fields);\n      if ((_ref = this.process) != null) {\n        _ref.call(res, stream);\n      }\n      return res;\n    };\n    Struct.prototype._setup = function (stream, parent, length) {\n      var res;\n      res = {};\n      Object.defineProperties(res, {\n        parent: {\n          value: parent\n        },\n        _startOffset: {\n          value: stream.pos\n        },\n        _currentOffset: {\n          value: 0,\n          writable: true\n        },\n        _length: {\n          value: length\n        }\n      });\n      return res;\n    };\n    Struct.prototype._parseFields = function (stream, res, fields) {\n      var key, type, val;\n      for (key in fields) {\n        type = fields[key];\n        if (typeof type === 'function') {\n          val = type.call(res, res);\n        } else {\n          val = type.decode(stream, res);\n        }\n        if (val !== void 0) {\n          if (val instanceof utils.PropertyDescriptor) {\n            Object.defineProperty(res, key, val);\n          } else {\n            res[key] = val;\n          }\n        }\n        res._currentOffset = stream.pos - res._startOffset;\n      }\n    };\n    Struct.prototype.size = function (val, parent, includePointers) {\n      var ctx, key, size, type, _ref;\n      if (val == null) {\n        val = {};\n      }\n      if (includePointers == null) {\n        includePointers = true;\n      }\n      ctx = {\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      size = 0;\n      _ref = this.fields;\n      for (key in _ref) {\n        type = _ref[key];\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n      if (includePointers) {\n        size += ctx.pointerSize;\n      }\n      return size;\n    };\n    Struct.prototype.encode = function (stream, val, parent) {\n      var ctx, i, key, ptr, type, _ref, _ref1;\n      if ((_ref = this.preEncode) != null) {\n        _ref.call(val, stream);\n      }\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n      _ref1 = this.fields;\n      for (key in _ref1) {\n        type = _ref1[key];\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n      i = 0;\n      while (i < ctx.pointers.length) {\n        ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    };\n    return Struct;\n  }();\n  module.exports = Struct;\n}).call(this);","map":{"version":3,"names":["Struct","utils","require","fields","prototype","decode","stream","parent","length","res","_ref","_setup","_parseFields","process","call","Object","defineProperties","value","_startOffset","pos","_currentOffset","writable","_length","key","type","val","PropertyDescriptor","defineProperty","size","includePointers","ctx","pointerSize","encode","i","ptr","_ref1","preEncode","pointers","startOffset","pointerOffset","module","exports"],"sources":["/home/ubuntu/king/portal/client-portal-starter/node_modules/restructure/src/Struct.js"],"sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var Struct, utils;\n\n  utils = require('./utils');\n\n  Struct = (function() {\n    function Struct(fields) {\n      this.fields = fields != null ? fields : {};\n    }\n\n    Struct.prototype.decode = function(stream, parent, length) {\n      var res, _ref;\n      if (length == null) {\n        length = 0;\n      }\n      res = this._setup(stream, parent, length);\n      this._parseFields(stream, res, this.fields);\n      if ((_ref = this.process) != null) {\n        _ref.call(res, stream);\n      }\n      return res;\n    };\n\n    Struct.prototype._setup = function(stream, parent, length) {\n      var res;\n      res = {};\n      Object.defineProperties(res, {\n        parent: {\n          value: parent\n        },\n        _startOffset: {\n          value: stream.pos\n        },\n        _currentOffset: {\n          value: 0,\n          writable: true\n        },\n        _length: {\n          value: length\n        }\n      });\n      return res;\n    };\n\n    Struct.prototype._parseFields = function(stream, res, fields) {\n      var key, type, val;\n      for (key in fields) {\n        type = fields[key];\n        if (typeof type === 'function') {\n          val = type.call(res, res);\n        } else {\n          val = type.decode(stream, res);\n        }\n        if (val !== void 0) {\n          if (val instanceof utils.PropertyDescriptor) {\n            Object.defineProperty(res, key, val);\n          } else {\n            res[key] = val;\n          }\n        }\n        res._currentOffset = stream.pos - res._startOffset;\n      }\n    };\n\n    Struct.prototype.size = function(val, parent, includePointers) {\n      var ctx, key, size, type, _ref;\n      if (val == null) {\n        val = {};\n      }\n      if (includePointers == null) {\n        includePointers = true;\n      }\n      ctx = {\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      size = 0;\n      _ref = this.fields;\n      for (key in _ref) {\n        type = _ref[key];\n        if (type.size != null) {\n          size += type.size(val[key], ctx);\n        }\n      }\n      if (includePointers) {\n        size += ctx.pointerSize;\n      }\n      return size;\n    };\n\n    Struct.prototype.encode = function(stream, val, parent) {\n      var ctx, i, key, ptr, type, _ref, _ref1;\n      if ((_ref = this.preEncode) != null) {\n        _ref.call(val, stream);\n      }\n      ctx = {\n        pointers: [],\n        startOffset: stream.pos,\n        parent: parent,\n        val: val,\n        pointerSize: 0\n      };\n      ctx.pointerOffset = stream.pos + this.size(val, ctx, false);\n      _ref1 = this.fields;\n      for (key in _ref1) {\n        type = _ref1[key];\n        if (type.encode != null) {\n          type.encode(stream, val[key], ctx);\n        }\n      }\n      i = 0;\n      while (i < ctx.pointers.length) {\n        ptr = ctx.pointers[i++];\n        ptr.type.encode(stream, ptr.val, ptr.parent);\n      }\n    };\n\n    return Struct;\n\n  })();\n\n  module.exports = Struct;\n\n}).call(this);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}