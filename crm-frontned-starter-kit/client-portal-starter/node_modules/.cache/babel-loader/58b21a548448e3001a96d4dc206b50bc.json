{"ast":null,"code":"import{call,put,takeEvery,takeLatest}from\"redux-saga/effects\";import{postOrderAPI,getOrders}from\"../../../apis/orders\";import{postOrderSuccess,postOrderFail,getOrdersSuccess}from\"./actions\";import{POST_ORDER_START,GET_ORDERS_START}from\"./actionTypes\";import{showErrorNotification}from\"../../general/notifications/actions\";import{toggleCurrentModal}from\"store/actions\";function makeOrder(_ref){let{payload}=_ref;return function*(){try{const result=yield call(postOrderAPI,payload);if(result.status){yield put(postOrderSuccess(result));yield put(toggleCurrentModal(\"sellBuyDetail\",payload));// yield put(showSuccessNotification(result.message));\n// yield delay(3000);\n// yield put(toggleCurrentModal(\"\"));\n}}catch(error){yield put(postOrderFail(error.message));yield put(showErrorNotification(error.message));}}();}function fetchOrders(_ref2){let{payload}=_ref2;return function*(){try{const data=yield call(getOrders,payload);const{result,status}=data;if(status){yield put(getOrdersSuccess(result));}}catch(error){}}();}function*ordersSaga(){yield takeLatest(POST_ORDER_START,makeOrder);yield takeEvery(GET_ORDERS_START,fetchOrders);}export default ordersSaga;","map":{"version":3,"names":["call","put","takeEvery","takeLatest","postOrderAPI","getOrders","postOrderSuccess","postOrderFail","getOrdersSuccess","POST_ORDER_START","GET_ORDERS_START","showErrorNotification","toggleCurrentModal","makeOrder","_ref","payload","result","status","error","message","fetchOrders","_ref2","data","ordersSaga"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/store/crypto/orders/saga.js"],"sourcesContent":["import {\n  call, put, takeEvery, takeLatest\n} from \"redux-saga/effects\";\nimport { postOrderAPI, getOrders } from \"../../../apis/orders\";\nimport {\n  postOrderSuccess, postOrderFail, getOrdersSuccess \n} from \"./actions\";\n\nimport { POST_ORDER_START, GET_ORDERS_START } from \"./actionTypes\";\nimport { showErrorNotification } from \"../../general/notifications/actions\";\nimport { toggleCurrentModal } from \"store/actions\";\n\n\nfunction* makeOrder({ payload }) {\n  try {\n    const result = yield call(postOrderAPI, payload);\n    if (result.status) {\n      yield put(postOrderSuccess(result));\n      yield put(toggleCurrentModal(\"sellBuyDetail\", payload));\n      // yield put(showSuccessNotification(result.message));\n      // yield delay(3000);\n      // yield put(toggleCurrentModal(\"\"));\n    }\n  }\n  catch (error) {\n    yield put(postOrderFail(error.message));\n    yield put(showErrorNotification(error.message));\n  }\n}\nfunction * fetchOrders ({ payload }){\n  try {\n    const data = yield call(getOrders, payload);\n    const { result, status } = data;\n    if (status){\n      yield put(getOrdersSuccess(result));\n    }\n  } catch (error){\n      \n  }\n}\n\nfunction* ordersSaga() {\n  yield takeLatest(POST_ORDER_START, makeOrder);\n  yield takeEvery(GET_ORDERS_START, fetchOrders);\n}\n\nexport default ordersSaga;"],"mappings":"AAAA,OACEA,IAAI,CAAEC,GAAG,CAAEC,SAAS,CAAEC,UAAU,KAC3B,oBAAoB,CAC3B,OAASC,YAAY,CAAEC,SAAS,KAAQ,sBAAsB,CAC9D,OACEC,gBAAgB,CAAEC,aAAa,CAAEC,gBAAgB,KAC5C,WAAW,CAElB,OAASC,gBAAgB,CAAEC,gBAAgB,KAAQ,eAAe,CAClE,OAASC,qBAAqB,KAAQ,qCAAqC,CAC3E,OAASC,kBAAkB,KAAQ,eAAe,CAGlD,QAAU,CAAAC,SAASA,CAAAC,IAAA,KAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,mBAAE,CAC/B,GAAI,CACF,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAhB,IAAI,CAACI,YAAY,CAAEW,OAAO,CAAC,CAChD,GAAIC,MAAM,CAACC,MAAM,CAAE,CACjB,KAAM,CAAAhB,GAAG,CAACK,gBAAgB,CAACU,MAAM,CAAC,CAAC,CACnC,KAAM,CAAAf,GAAG,CAACW,kBAAkB,CAAC,eAAe,CAAEG,OAAO,CAAC,CAAC,CACvD;AACA;AACA;AACF,CACF,CACA,MAAOG,KAAK,CAAE,CACZ,KAAM,CAAAjB,GAAG,CAACM,aAAa,CAACW,KAAK,CAACC,OAAO,CAAC,CAAC,CACvC,KAAM,CAAAlB,GAAG,CAACU,qBAAqB,CAACO,KAAK,CAACC,OAAO,CAAC,CAAC,CACjD,CACF,CAAC,IACD,QAAW,CAAAC,WAAWA,CAAAC,KAAA,KAAE,CAAEN,OAAQ,CAAC,CAAAM,KAAA,mBAAC,CAClC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAtB,IAAI,CAACK,SAAS,CAAEU,OAAO,CAAC,CAC3C,KAAM,CAAEC,MAAM,CAAEC,MAAO,CAAC,CAAGK,IAAI,CAC/B,GAAIL,MAAM,CAAC,CACT,KAAM,CAAAhB,GAAG,CAACO,gBAAgB,CAACQ,MAAM,CAAC,CAAC,CACrC,CACF,CAAE,MAAOE,KAAK,CAAC,CAEf,CACF,CAAC,IAED,SAAUK,UAAUA,CAAA,CAAG,CACrB,KAAM,CAAApB,UAAU,CAACM,gBAAgB,CAAEI,SAAS,CAAC,CAC7C,KAAM,CAAAX,SAAS,CAACQ,gBAAgB,CAAEU,WAAW,CAAC,CAChD,CAEA,cAAe,CAAAG,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}