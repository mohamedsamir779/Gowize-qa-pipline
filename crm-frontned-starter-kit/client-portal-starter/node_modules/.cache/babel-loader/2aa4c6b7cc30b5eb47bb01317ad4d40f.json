{"ast":null,"code":"import{takeEvery,call,put,all,fork}from\"redux-saga/effects\";import{resetpassword}from\"apis/resetPassword\";import{showErrorNotification,showSuccessNotification}from\"store/general/notifications/actions\";import{CHANGE_PASSWORD_START,RESET_PASSWORD_START}from\"./actionsType\";import{resetPasswordError,resetPasswordSuccess}from\"./actions\";import{changePasswordWithOldPassword}from\"apis/auth\";function resetClientPassword(_ref){let{payload}=_ref;return function*(){try{const data=yield call(resetpassword,payload);const{status,message}=data;if(status){yield put(resetPasswordSuccess());yield put(showSuccessNotification(\"Password Changed Successfully\"));}else{yield put(resetPasswordError({message}));// yield call(showErrorNotification(message));\n}}catch(error){yield put(showErrorNotification(\"Error happened while reseting password\"));}}();}function changePassword(_ref2){let{payload}=_ref2;return function*(){try{const data=yield call(changePasswordWithOldPassword,payload);const{status,message}=data;if(status){yield put(resetPasswordSuccess());yield put(showSuccessNotification(\"Password Changed Successfully\"));}else{yield put(showErrorNotification(\"Error: \".concat(message)));}}catch(error){yield put(showErrorNotification(error.message||\"Error happened while changing password\"));}}();}function*WatchResetPassword(){yield takeEvery(RESET_PASSWORD_START,resetClientPassword);yield takeEvery(CHANGE_PASSWORD_START,changePassword);}function*resetPasswordSaga(){yield all([fork(WatchResetPassword)]);}export default resetPasswordSaga;","map":{"version":3,"names":["takeEvery","call","put","all","fork","resetpassword","showErrorNotification","showSuccessNotification","CHANGE_PASSWORD_START","RESET_PASSWORD_START","resetPasswordError","resetPasswordSuccess","changePasswordWithOldPassword","resetClientPassword","_ref","payload","data","status","message","error","changePassword","_ref2","concat","WatchResetPassword","resetPasswordSaga"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/store/general/auth/resetPassword/saga.js"],"sourcesContent":["import {\n  takeEvery, call, put, all, fork,\n} from \"redux-saga/effects\";\nimport { resetpassword } from \"apis/resetPassword\";\nimport { showErrorNotification, showSuccessNotification } from \"store/general/notifications/actions\";\nimport { CHANGE_PASSWORD_START, RESET_PASSWORD_START } from \"./actionsType\";\nimport { resetPasswordError, resetPasswordSuccess } from \"./actions\";\nimport { changePasswordWithOldPassword } from \"apis/auth\";\n\nfunction * resetClientPassword ({ payload }){\n  try {\n    const data = yield call(resetpassword, payload);\n    const { status, message  } = data;\n    if (status){\n      yield put(resetPasswordSuccess());\n      yield put(showSuccessNotification(\"Password Changed Successfully\"));\n    } else {\n      yield put(resetPasswordError({\n        message,\n      }));\n      // yield call(showErrorNotification(message));\n    }\n  } catch (error){\n    yield put(showErrorNotification(\"Error happened while reseting password\"));\n  }\n}\n\nfunction* changePassword({ payload }){\n  try {\n    const data = yield call(changePasswordWithOldPassword, payload);\n    const { status, message  } = data;\n    if (status){\n      yield put(resetPasswordSuccess());\n      yield put(showSuccessNotification(\"Password Changed Successfully\"));\n    } else {\n      yield put(showErrorNotification(`Error: ${message}`));\n    }\n  } catch (error){\n    yield put(showErrorNotification(error.message || \"Error happened while changing password\"));\n  }\n}\n\n\nfunction * WatchResetPassword(){\n  yield takeEvery(RESET_PASSWORD_START, resetClientPassword);\n  yield takeEvery(CHANGE_PASSWORD_START, changePassword);\n}\n\nfunction* resetPasswordSaga() {\n  yield all([fork(WatchResetPassword)]);\n}\n\n\nexport default resetPasswordSaga;"],"mappings":"AAAA,OACEA,SAAS,CAAEC,IAAI,CAAEC,GAAG,CAAEC,GAAG,CAAEC,IAAI,KAC1B,oBAAoB,CAC3B,OAASC,aAAa,KAAQ,oBAAoB,CAClD,OAASC,qBAAqB,CAAEC,uBAAuB,KAAQ,qCAAqC,CACpG,OAASC,qBAAqB,CAAEC,oBAAoB,KAAQ,eAAe,CAC3E,OAASC,kBAAkB,CAAEC,oBAAoB,KAAQ,WAAW,CACpE,OAASC,6BAA6B,KAAQ,WAAW,CAEzD,QAAW,CAAAC,mBAAmBA,CAAAC,IAAA,KAAE,CAAEC,OAAQ,CAAC,CAAAD,IAAA,mBAAC,CAC1C,GAAI,CACF,KAAM,CAAAE,IAAI,CAAG,KAAM,CAAAf,IAAI,CAACI,aAAa,CAAEU,OAAO,CAAC,CAC/C,KAAM,CAAEE,MAAM,CAAEC,OAAS,CAAC,CAAGF,IAAI,CACjC,GAAIC,MAAM,CAAC,CACT,KAAM,CAAAf,GAAG,CAACS,oBAAoB,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAT,GAAG,CAACK,uBAAuB,CAAC,+BAA+B,CAAC,CAAC,CACrE,CAAC,IAAM,CACL,KAAM,CAAAL,GAAG,CAACQ,kBAAkB,CAAC,CAC3BQ,OACF,CAAC,CAAC,CAAC,CACH;AACF,CACF,CAAE,MAAOC,KAAK,CAAC,CACb,KAAM,CAAAjB,GAAG,CAACI,qBAAqB,CAAC,wCAAwC,CAAC,CAAC,CAC5E,CACF,CAAC,IAED,QAAU,CAAAc,cAAcA,CAAAC,KAAA,KAAC,CAAEN,OAAQ,CAAC,CAAAM,KAAA,mBAAC,CACnC,GAAI,CACF,KAAM,CAAAL,IAAI,CAAG,KAAM,CAAAf,IAAI,CAACW,6BAA6B,CAAEG,OAAO,CAAC,CAC/D,KAAM,CAAEE,MAAM,CAAEC,OAAS,CAAC,CAAGF,IAAI,CACjC,GAAIC,MAAM,CAAC,CACT,KAAM,CAAAf,GAAG,CAACS,oBAAoB,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAT,GAAG,CAACK,uBAAuB,CAAC,+BAA+B,CAAC,CAAC,CACrE,CAAC,IAAM,CACL,KAAM,CAAAL,GAAG,CAACI,qBAAqB,WAAAgB,MAAA,CAAWJ,OAAO,CAAE,CAAC,CAAC,CACvD,CACF,CAAE,MAAOC,KAAK,CAAC,CACb,KAAM,CAAAjB,GAAG,CAACI,qBAAqB,CAACa,KAAK,CAACD,OAAO,EAAI,wCAAwC,CAAC,CAAC,CAC7F,CACF,CAAC,IAGD,SAAWK,kBAAkBA,CAAA,CAAE,CAC7B,KAAM,CAAAvB,SAAS,CAACS,oBAAoB,CAAEI,mBAAmB,CAAC,CAC1D,KAAM,CAAAb,SAAS,CAACQ,qBAAqB,CAAEY,cAAc,CAAC,CACxD,CAEA,SAAUI,iBAAiBA,CAAA,CAAG,CAC5B,KAAM,CAAArB,GAAG,CAAC,CAACC,IAAI,CAACmB,kBAAkB,CAAC,CAAC,CAAC,CACvC,CAGA,cAAe,CAAAC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}