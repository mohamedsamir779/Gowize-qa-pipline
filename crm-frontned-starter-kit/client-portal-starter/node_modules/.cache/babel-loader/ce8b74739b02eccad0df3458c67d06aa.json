{"ast":null,"code":"import*as axiosHelper from\"../api_helper\";export const requestPartnershipAPI=async()=>{try{const result=await axiosHelper.post(\"/requests/ib\");if(result.status)return result;else throw new Error(result.message);}catch(error){throw new Error(error.message);}};export const getRequestTypeAPI=async()=>{try{return await axiosHelper.get(\"/requests/ib\");}catch(error){}};export const postChangeLeverageReq=async payload=>{const result=await axiosHelper.post(\"/requests/change-leverage\",payload);if(result.status){return result;}else{throw new Error(result.message);}};export const createAccountRequestAPI=async params=>{try{return await axiosHelper.post(\"/requests/account\",params);}catch(error){throw new Error(\"Error while sending new account Request\");}};","map":{"version":3,"names":["axiosHelper","requestPartnershipAPI","result","post","status","Error","message","error","getRequestTypeAPI","get","postChangeLeverageReq","payload","createAccountRequestAPI","params"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/forex/requests.js"],"sourcesContent":["import * as axiosHelper from \"../api_helper\";\n\nexport const requestPartnershipAPI = async () => {\n  try {\n    const result = await axiosHelper.post(\"/requests/ib\");\n    if (result.status) return result;\n    else throw new Error(result.message);\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const getRequestTypeAPI = async () => {\n  try {\n    return await axiosHelper.get(\"/requests/ib\");\n  } catch (error) {}\n};\n\nexport const postChangeLeverageReq = async (payload) => {\n  const result = await axiosHelper.post(\"/requests/change-leverage\", payload);\n  if (result.status) {\n    return result;\n  } else {\n    throw new Error(result.message);\n  }\n};\n\nexport const createAccountRequestAPI = async (params) => {\n  try {\n    return await axiosHelper.post(\"/requests/account\", params);\n  } catch (error) {\n    throw new Error(\"Error while sending new account Request\");\n  }\n};"],"mappings":"AAAA,MAAO,GAAK,CAAAA,WAAW,KAAM,eAAe,CAE5C,MAAO,MAAM,CAAAC,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CAC/C,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAF,WAAW,CAACG,IAAI,CAAC,cAAc,CAAC,CACrD,GAAID,MAAM,CAACE,MAAM,CAAE,MAAO,CAAAF,MAAM,CAAC,IAC5B,MAAM,IAAI,CAAAG,KAAK,CAACH,MAAM,CAACI,OAAO,CAAC,CACtC,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAF,KAAK,CAACE,KAAK,CAACD,OAAO,CAAC,CAChC,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACF,MAAO,MAAM,CAAAR,WAAW,CAACS,GAAG,CAAC,cAAc,CAAC,CAC9C,CAAE,MAAOF,KAAK,CAAE,CAAC,CACnB,CAAC,CAED,MAAO,MAAM,CAAAG,qBAAqB,CAAG,KAAO,CAAAC,OAAO,EAAK,CACtD,KAAM,CAAAT,MAAM,CAAG,KAAM,CAAAF,WAAW,CAACG,IAAI,CAAC,2BAA2B,CAAEQ,OAAO,CAAC,CAC3E,GAAIT,MAAM,CAACE,MAAM,CAAE,CACjB,MAAO,CAAAF,MAAM,CACf,CAAC,IAAM,CACL,KAAM,IAAI,CAAAG,KAAK,CAACH,MAAM,CAACI,OAAO,CAAC,CACjC,CACF,CAAC,CAED,MAAO,MAAM,CAAAM,uBAAuB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACvD,GAAI,CACF,MAAO,MAAM,CAAAb,WAAW,CAACG,IAAI,CAAC,mBAAmB,CAAEU,MAAM,CAAC,CAC5D,CAAE,MAAON,KAAK,CAAE,CACd,KAAM,IAAI,CAAAF,KAAK,CAAC,yCAAyC,CAAC,CAC5D,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}