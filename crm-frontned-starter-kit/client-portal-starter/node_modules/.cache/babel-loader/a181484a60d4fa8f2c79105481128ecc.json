{"ast":null,"code":"import{CONVERT_START,PREVIEW_CONVERSION_START}from\"./actionTypes\";import{takeEvery,call,fork,all,put,delay}from\"redux-saga/effects\";import{convertAPI,previewConversionAPI}from\"apis/convert\";import{convertFailure,convertSuccess,previewConversionSuccess}from\"./actions\";import{showErrorNotification,showSuccessNotification}from\"store/general/notifications/actions\";import{toggleCurrentModal}from\"store/actions\";function ConvertStart(_ref){let{payload}=_ref;return function*(){try{const result=yield call(convertAPI,{payload});yield put(convertSuccess(result.message));yield put(showSuccessNotification(\"Converted from \".concat(payload.fromAsset,\" to \").concat(payload.toAsset,\" successfully\")));yield delay(1000);yield put(toggleCurrentModal(\"\"));}catch(error){yield put(showErrorNotification(error.message));yield put(convertFailure(error.message));}}();}function PreviewConversionStart(_ref2){let{payload}=_ref2;return function*(){try{const result=yield call(previewConversionAPI,payload);yield put(previewConversionSuccess(result));}catch(error){yield put(showErrorNotification(error.message));}}();}function*watchConvert(){yield takeEvery(CONVERT_START,ConvertStart);yield takeEvery(PREVIEW_CONVERSION_START,PreviewConversionStart);}function*convertSaga(){yield all([fork(watchConvert)]);}export default convertSaga;","map":{"version":3,"names":["CONVERT_START","PREVIEW_CONVERSION_START","takeEvery","call","fork","all","put","delay","convertAPI","previewConversionAPI","convertFailure","convertSuccess","previewConversionSuccess","showErrorNotification","showSuccessNotification","toggleCurrentModal","ConvertStart","_ref","payload","result","message","concat","fromAsset","toAsset","error","PreviewConversionStart","_ref2","watchConvert","convertSaga"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/store/crypto/convert/saga.js"],"sourcesContent":["import { CONVERT_START, PREVIEW_CONVERSION_START } from \"./actionTypes\";\nimport {\n  takeEvery, call, fork, all, put, delay \n} from \"redux-saga/effects\";\nimport { convertAPI, previewConversionAPI } from \"apis/convert\";\nimport {\n  convertFailure, convertSuccess, previewConversionSuccess \n} from \"./actions\";\nimport { showErrorNotification, showSuccessNotification } from \"store/general/notifications/actions\";\nimport { toggleCurrentModal } from \"store/actions\";\n\nfunction* ConvertStart({ payload }) {\n  try {\n    const result = yield call(convertAPI, { payload });\n    yield put(convertSuccess(result.message));\n    yield put(showSuccessNotification(`Converted from ${payload.fromAsset} to ${payload.toAsset} successfully`));\n    yield delay(1000);\n    yield put(toggleCurrentModal(\"\"));\n  } catch (error) {\n    yield put(showErrorNotification(error.message));\n    yield put(convertFailure(error.message));\n  }\n}\nfunction* PreviewConversionStart({ payload }) {\n  try {\n    const result = yield call(previewConversionAPI,  payload );\n    yield put(previewConversionSuccess(result));\n  } catch (error) {\n    yield put(showErrorNotification(error.message));\n  }\n}\nfunction* watchConvert() {\n  yield takeEvery(CONVERT_START, ConvertStart);\n  yield takeEvery(PREVIEW_CONVERSION_START, PreviewConversionStart);\n}\n\nfunction* convertSaga() {\n  yield all([fork(watchConvert)]);\n}\n\nexport default convertSaga;"],"mappings":"AAAA,OAASA,aAAa,CAAEC,wBAAwB,KAAQ,eAAe,CACvE,OACEC,SAAS,CAAEC,IAAI,CAAEC,IAAI,CAAEC,GAAG,CAAEC,GAAG,CAAEC,KAAK,KACjC,oBAAoB,CAC3B,OAASC,UAAU,CAAEC,oBAAoB,KAAQ,cAAc,CAC/D,OACEC,cAAc,CAAEC,cAAc,CAAEC,wBAAwB,KACnD,WAAW,CAClB,OAASC,qBAAqB,CAAEC,uBAAuB,KAAQ,qCAAqC,CACpG,OAASC,kBAAkB,KAAQ,eAAe,CAElD,QAAU,CAAAC,YAAYA,CAAAC,IAAA,KAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,mBAAE,CAClC,GAAI,CACF,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAhB,IAAI,CAACK,UAAU,CAAE,CAAEU,OAAQ,CAAC,CAAC,CAClD,KAAM,CAAAZ,GAAG,CAACK,cAAc,CAACQ,MAAM,CAACC,OAAO,CAAC,CAAC,CACzC,KAAM,CAAAd,GAAG,CAACQ,uBAAuB,mBAAAO,MAAA,CAAmBH,OAAO,CAACI,SAAS,SAAAD,MAAA,CAAOH,OAAO,CAACK,OAAO,iBAAe,CAAC,CAAC,CAC5G,KAAM,CAAAhB,KAAK,CAAC,IAAI,CAAC,CACjB,KAAM,CAAAD,GAAG,CAACS,kBAAkB,CAAC,EAAE,CAAC,CAAC,CACnC,CAAE,MAAOS,KAAK,CAAE,CACd,KAAM,CAAAlB,GAAG,CAACO,qBAAqB,CAACW,KAAK,CAACJ,OAAO,CAAC,CAAC,CAC/C,KAAM,CAAAd,GAAG,CAACI,cAAc,CAACc,KAAK,CAACJ,OAAO,CAAC,CAAC,CAC1C,CACF,CAAC,IACD,QAAU,CAAAK,sBAAsBA,CAAAC,KAAA,KAAC,CAAER,OAAQ,CAAC,CAAAQ,KAAA,mBAAE,CAC5C,GAAI,CACF,KAAM,CAAAP,MAAM,CAAG,KAAM,CAAAhB,IAAI,CAACM,oBAAoB,CAAGS,OAAQ,CAAC,CAC1D,KAAM,CAAAZ,GAAG,CAACM,wBAAwB,CAACO,MAAM,CAAC,CAAC,CAC7C,CAAE,MAAOK,KAAK,CAAE,CACd,KAAM,CAAAlB,GAAG,CAACO,qBAAqB,CAACW,KAAK,CAACJ,OAAO,CAAC,CAAC,CACjD,CACF,CAAC,IACD,SAAUO,YAAYA,CAAA,CAAG,CACvB,KAAM,CAAAzB,SAAS,CAACF,aAAa,CAAEgB,YAAY,CAAC,CAC5C,KAAM,CAAAd,SAAS,CAACD,wBAAwB,CAAEwB,sBAAsB,CAAC,CACnE,CAEA,SAAUG,WAAWA,CAAA,CAAG,CACtB,KAAM,CAAAvB,GAAG,CAAC,CAACD,IAAI,CAACuB,YAAY,CAAC,CAAC,CAAC,CACjC,CAEA,cAAe,CAAAC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}