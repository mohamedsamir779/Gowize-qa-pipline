{"ast":null,"code":"import{fetchCompanyBankAccounts}from\"apis/bankAccounts\";import{AvField,AvForm}from\"availity-reactstrap-validation\";import React,{useEffect,useState}from\"react\";import{Label}from\"reactstrap\";import CustomSelect from\"components/Common/CustomSelect\";import{Col,Row}from\"react-bootstrap\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";export const payeeAccounts=[{currency:\"USD\",name:\"U23447061\"}];export default function PerfectMoney(props){const{// t,\nsetIsFirstStepValid}=props;// const [accountNumbers, setaccountNumbers] = useState([]);\n// const [selectedAccNo, setSelectedAccNo] = useState();\n// const [selectedCurrency, setSelectedCurrency] = useState();\n// const [selectedPayeeName, setSelectedPayeeName] = useState();\n// const [notes, setNotes] = useState();\n// const [amount, setAmount] = useState();\n// useEffect(() => {\n//   if (selectedAccNo && selectedCurrency === \"USD\" && selectedPayeeName && notes && amount) {\n//     setIsFirstStepValid(true);\n//   } else {\n//     setIsFirstStepValid(false);\n//   }\n// }, [selectedAccNo, selectedCurrency, selectedPayeeName, notes, amount]);\n// const { fx: { liveAcc } } = useSelector((state) => state.Profile.clientData);\n// useEffect(() => {\n//   if (liveAcc) setaccountNumbers([...liveAcc]);\n// }, [liveAcc]);\nuseEffect(()=>{setIsFirstStepValid(true);},[]);// useEffect(() => {\n//   return () => {\n//     setNotes(null);\n//     setAmount(null);\n//     setSelectedPayeeName(null);\n//     setSelectedCurrency(null);\n//     setSelectedAccNo(null);\n//   };\n// }, []);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"my-3\"});}","map":{"version":3,"names":["fetchCompanyBankAccounts","AvField","AvForm","React","useEffect","useState","Label","CustomSelect","Col","Row","useSelector","jsx","_jsx","payeeAccounts","currency","name","PerfectMoney","props","setIsFirstStepValid","className"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/components/Deposit/Methods/PerfectMoney.js"],"sourcesContent":["import { fetchCompanyBankAccounts } from \"apis/bankAccounts\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport React, { useEffect, useState } from \"react\";\nimport { Label } from \"reactstrap\";\nimport CustomSelect from \"components/Common/CustomSelect\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\n\nexport const payeeAccounts = [\n  {\n    currency: \"USD\",\n    name: \"U23447061\"\n  },\n];\n\nexport default function PerfectMoney(props) {\n  const {\n    // t,\n    setIsFirstStepValid\n  } = props;\n  // const [accountNumbers, setaccountNumbers] = useState([]);\n  // const [selectedAccNo, setSelectedAccNo] = useState();\n  // const [selectedCurrency, setSelectedCurrency] = useState();\n  // const [selectedPayeeName, setSelectedPayeeName] = useState();\n  // const [notes, setNotes] = useState();\n  // const [amount, setAmount] = useState();\n  // useEffect(() => {\n  //   if (selectedAccNo && selectedCurrency === \"USD\" && selectedPayeeName && notes && amount) {\n  //     setIsFirstStepValid(true);\n  //   } else {\n  //     setIsFirstStepValid(false);\n  //   }\n  // }, [selectedAccNo, selectedCurrency, selectedPayeeName, notes, amount]);\n  // const { fx: { liveAcc } } = useSelector((state) => state.Profile.clientData);\n\n  // useEffect(() => {\n  //   if (liveAcc) setaccountNumbers([...liveAcc]);\n  // }, [liveAcc]);\n\n  useEffect(() => {\n    setIsFirstStepValid(true);\n  }, []);\n\n  // useEffect(() => {\n  //   return () => {\n  //     setNotes(null);\n  //     setAmount(null);\n  //     setSelectedPayeeName(null);\n  //     setSelectedCurrency(null);\n  //     setSelectedAccNo(null);\n  //   };\n  // }, []);\n\n  return (\n    <div className=\"my-3\">\n      {/* <AvForm className=\"mt-4\" onValid={() => setIsFirstStepValid(true)}>\n        <h5 className=\"mb-4\">{t(\"Payment details\")}</h5>\n        <Row>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n              <Label>{t(\"Payee Account\")}</Label>\n              <CustomSelect\n                name=\"accountName\"\n                required\n                options={payeeAccounts?.map(({ name }) => {\n                  return {\n                    label: name,\n                    value: name\n                  };\n                })}\n                onChange={(e) => {\n                  setSelectedPayeeName(e.value);\n                }}\n              >\n              </CustomSelect>\n            </div>\n\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n              <Label>{t(\"Currency\")}</Label>\n              <CustomSelect\n                name=\"currency\"\n                required\n                options={payeeAccounts?.map(({ currency }) => {\n                  return {\n                    label: currency,\n                    value: currency\n                  };\n                })}\n                onChange={(e) => {\n                  setSelectedCurrency(e.value);\n                }}\n              >\n              </CustomSelect>\n            </div>\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n\n              <Label>{t(\"Account No\")}</Label>\n              <CustomSelect\n                options={accountNumbers?.map(acc => {\n                  return {\n                    label: acc,\n                    value: acc\n                  };\n                })}\n                name=\"accountNumber\"\n                required\n                onChange={(e) => {\n                  setSelectedAccNo(e.value);\n                }}\n              // disabled={true}\n              >\n              </CustomSelect>\n            </div>\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n\n              <Label>{t(\"Amount\")} (USD)</Label>\n              <AvField\n                type=\"number\"\n                name=\"amount\"\n                validate={{\n                  required: {\n                    value: true,\n                    errorMessage: \"Amount is required\"\n                  },\n                  min: {\n                    value: 1,\n                    errorMessage: \"Amount should be at least 1$\"\n                  }\n                }}\n                onChange={(e) => {\n                  setAmount(e.target.value);\n                }}\n              // disabled={true}\n              >\n              </AvField>\n              <p className=\"text-danger fst-italic\">\n                {t(\"* We only accept Payments in USD\")}\n              </p>\n            </div>\n\n          </Col>\n          <Col xs={12} lg={6} className=\"mb-3\">\n            <div>\n              <Label>{t(\"Notes\")}</Label>\n              <AvField\n                type=\"text\"\n                name=\"notes\"\n                validate={{ required: true }}\n                onChange={(e) => {\n                  setNotes(e.target.value);\n                }}\n              // disabled={true}\n              >\n              </AvField>\n            </div>\n          </Col>\n        </Row>\n      </AvForm> */}\n    </div>\n  );\n}\n"],"mappings":"AAAA,OAASA,wBAAwB,KAAQ,mBAAmB,CAC5D,OAASC,OAAO,CAAEC,MAAM,KAAQ,gCAAgC,CAChE,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,KAAK,KAAQ,YAAY,CAClC,MAAO,CAAAC,YAAY,KAAM,gCAAgC,CACzD,OAASC,GAAG,CAAEC,GAAG,KAAQ,iBAAiB,CAC1C,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,MAAO,MAAM,CAAAC,aAAa,CAAG,CAC3B,CACEC,QAAQ,CAAE,KAAK,CACfC,IAAI,CAAE,WACR,CAAC,CACF,CAED,cAAe,SAAS,CAAAC,YAAYA,CAACC,KAAK,CAAE,CAC1C,KAAM,CACJ;AACAC,mBACF,CAAC,CAAGD,KAAK,CACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEAb,SAAS,CAAC,IAAM,CACdc,mBAAmB,CAAC,IAAI,CAAC,CAC3B,CAAC,CAAE,EAAE,CAAC,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACEN,IAAA,QAAKO,SAAS,CAAC,MAAM,CA8GhB,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}