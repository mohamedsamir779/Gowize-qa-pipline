{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{REGISTER_LIVE_USER,REGISTER_LIVE_USER_SUCCESSFUL,REGISTER_LIVE_USER_FAILED,REGISTER_DEMO_USER,REGISTER_DEMO_USER_SUCCESSFUL,REGISTER_DEMO_USER_FAILED,REGISTER_FOREX_LIVE_USER_REQUESTED,REGISTER_FOREX_LIVE_USER_SUCCESS,REGISTER_FOREX_LIVE_USER_FAIL,REGISTER_FOREX_DEMO_USER_REQUESTED,REGISTER_FOREX_DEMO_USER_SUCCESS,REGISTER_FOREX_DEMO_USER_FAIL,REGISTER_FOREX_IB_USER_REQUESTED,REGISTER_FOREX_IB_USER_SUCCESS,REGISTER_FOREX_IB_USER_FAIL}from\"./actionTypes\";const initialState={registrationError:null,message:null,loading:false,user:null};const account=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case REGISTER_LIVE_USER:state=_objectSpread(_objectSpread({},state),{},{loading:true,registrationError:null});break;case REGISTER_LIVE_USER_SUCCESSFUL:state=_objectSpread(_objectSpread({},state),{},{loading:false,user:action.payload,registrationError:null});break;case REGISTER_LIVE_USER_FAILED:state=_objectSpread(_objectSpread({},state),{},{user:null,loading:false,registrationError:action.payload});break;case REGISTER_DEMO_USER:state=_objectSpread(_objectSpread({},state),{},{loading:true,registrationError:null});break;case REGISTER_DEMO_USER_SUCCESSFUL:state=_objectSpread(_objectSpread({},state),{},{loading:false,user:action.payload,registrationError:null});break;case REGISTER_DEMO_USER_FAILED:state=_objectSpread(_objectSpread({},state),{},{user:null,loading:false,registrationError:action.payload});break;// forex live\ncase REGISTER_FOREX_LIVE_USER_REQUESTED:state=_objectSpread(_objectSpread({},state),{},{loading:true,registrationError:null});break;case REGISTER_FOREX_LIVE_USER_SUCCESS:state=_objectSpread(_objectSpread({},state),{},{loading:false,user:action.payload,registrationError:null});break;case REGISTER_FOREX_LIVE_USER_FAIL:state=_objectSpread(_objectSpread({},state),{},{user:null,loading:false,registrationError:action.payload});break;// forex demo\ncase REGISTER_FOREX_DEMO_USER_REQUESTED:state=_objectSpread(_objectSpread({},state),{},{loading:true,registrationError:null});break;case REGISTER_FOREX_DEMO_USER_SUCCESS:state=_objectSpread(_objectSpread({},state),{},{loading:false,user:action.payload,registrationError:null});break;case REGISTER_FOREX_DEMO_USER_FAIL:state=_objectSpread(_objectSpread({},state),{},{user:null,loading:false,registrationError:action.payload});break;// forex ib\ncase REGISTER_FOREX_IB_USER_REQUESTED:state=_objectSpread(_objectSpread({},state),{},{loading:true,registrationError:null});break;case REGISTER_FOREX_IB_USER_SUCCESS:state=_objectSpread(_objectSpread({},state),{},{loading:false,user:action.payload,registrationError:null});break;case REGISTER_FOREX_IB_USER_FAIL:state=_objectSpread(_objectSpread({},state),{},{user:null,loading:false,registrationError:action.payload});break;default:state=_objectSpread({},state);break;}return state;};export default account;","map":{"version":3,"names":["REGISTER_LIVE_USER","REGISTER_LIVE_USER_SUCCESSFUL","REGISTER_LIVE_USER_FAILED","REGISTER_DEMO_USER","REGISTER_DEMO_USER_SUCCESSFUL","REGISTER_DEMO_USER_FAILED","REGISTER_FOREX_LIVE_USER_REQUESTED","REGISTER_FOREX_LIVE_USER_SUCCESS","REGISTER_FOREX_LIVE_USER_FAIL","REGISTER_FOREX_DEMO_USER_REQUESTED","REGISTER_FOREX_DEMO_USER_SUCCESS","REGISTER_FOREX_DEMO_USER_FAIL","REGISTER_FOREX_IB_USER_REQUESTED","REGISTER_FOREX_IB_USER_SUCCESS","REGISTER_FOREX_IB_USER_FAIL","initialState","registrationError","message","loading","user","account","state","arguments","length","undefined","action","type","_objectSpread","payload"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/general/auth/register/reducer.js"],"sourcesContent":["import {\n  REGISTER_LIVE_USER,\n  REGISTER_LIVE_USER_SUCCESSFUL,\n  REGISTER_LIVE_USER_FAILED,\n  REGISTER_DEMO_USER,\n  REGISTER_DEMO_USER_SUCCESSFUL,\n  REGISTER_DEMO_USER_FAILED,\n\n  REGISTER_FOREX_LIVE_USER_REQUESTED,\n  REGISTER_FOREX_LIVE_USER_SUCCESS,\n  REGISTER_FOREX_LIVE_USER_FAIL,\n\n  REGISTER_FOREX_DEMO_USER_REQUESTED,\n  REGISTER_FOREX_DEMO_USER_SUCCESS,\n  REGISTER_FOREX_DEMO_USER_FAIL,\n\n  REGISTER_FOREX_IB_USER_REQUESTED,\n  REGISTER_FOREX_IB_USER_SUCCESS,\n  REGISTER_FOREX_IB_USER_FAIL\n} from \"./actionTypes\";\n\nconst initialState = {\n  registrationError: null,\n  message: null,\n  loading: false,\n  user: null,\n};\n\nconst account = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_LIVE_USER:\n      state = {\n        ...state,\n        loading: true,\n        registrationError: null,\n      };\n      break;\n    case REGISTER_LIVE_USER_SUCCESSFUL:\n      state = {\n        ...state,\n        loading: false,\n        user: action.payload,\n        registrationError: null,\n      };\n      break;\n    case REGISTER_LIVE_USER_FAILED:\n      state = {\n        ...state,\n        user: null,\n        loading: false,\n        registrationError: action.payload,\n      };\n      break;\n    case REGISTER_DEMO_USER:\n      state = {\n        ...state,\n        loading: true,\n        registrationError: null,\n      };\n      break;\n    case REGISTER_DEMO_USER_SUCCESSFUL:\n      state = {\n        ...state,\n        loading: false,\n        user: action.payload,\n        registrationError: null,\n      };\n      break;\n    case REGISTER_DEMO_USER_FAILED:\n      state = {\n        ...state,\n        user: null,\n        loading: false,\n        registrationError: action.payload,\n      };\n      break;\n    \n    // forex live\n    case REGISTER_FOREX_LIVE_USER_REQUESTED:\n      state = {\n        ...state,\n        loading: true,\n        registrationError: null\n      };\n      break;\n    case REGISTER_FOREX_LIVE_USER_SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        user: action.payload,\n        registrationError: null\n      };\n      break;\n    case REGISTER_FOREX_LIVE_USER_FAIL:\n      state = {\n        ...state,\n        user: null,\n        loading: false,\n        registrationError: action.payload\n      };\n      break;\n\n    // forex demo\n    case REGISTER_FOREX_DEMO_USER_REQUESTED:\n      state = {\n        ...state,\n        loading: true,\n        registrationError: null\n      };\n      break;\n    case REGISTER_FOREX_DEMO_USER_SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        user: action.payload,\n        registrationError: null\n      };\n      break;\n    case REGISTER_FOREX_DEMO_USER_FAIL:\n      state = {\n        ...state,\n        user: null,\n        loading: false,\n        registrationError: action.payload\n      };\n      break;\n\n    // forex ib\n    case REGISTER_FOREX_IB_USER_REQUESTED:\n      state = {\n        ...state,\n        loading: true,\n        registrationError: null\n      };\n      break;\n    case REGISTER_FOREX_IB_USER_SUCCESS:\n      state = {\n        ...state,\n        loading: false,\n        user: action.payload,\n        registrationError: null\n      };\n      break;\n    case REGISTER_FOREX_IB_USER_FAIL:\n      state = {\n        ...state,\n        user: null,\n        loading: false,\n        registrationError: action.payload\n      };\n      break;\n\n    default:\n      state = { ...state };\n      break;\n  }\n  return state;\n};\n\nexport default account;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}