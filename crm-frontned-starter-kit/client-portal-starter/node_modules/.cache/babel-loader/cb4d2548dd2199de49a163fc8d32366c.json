{"ast":null,"code":"import*as axiosHelper from\"./api_helper\";export const registerLiveAPI=async params=>{try{const{user}=params;const url=\"/register/crypto/live\";delete user.accountType;delete user.history;delete user.confirmPassword;delete user.search;const result=axiosHelper.post(url,user);return result;}catch(error){throw new Error(error.message);}};export const registerDemoAPI=async params=>{try{const{user}=params;const url=\"/register/crypto/demo\";delete user.accountType;delete user.history;delete user.confirmPassword;delete user.search;const result=axiosHelper.post(url,user);return result;}catch(error){throw new Error(error.message);}};// forex live\nexport const registerForexLiveAPI=async params=>{try{const{user}=params;let url=\"/register/fx/live\";if(user.isCorporate){url=\"/register/fx/corporate\";}delete user.accountType;delete user.history;delete user.confirmPassword;delete user.search;const result=axiosHelper.post(url,user);return result;}catch(error){throw new Error(error.message);}};// forex demo\nexport const registerForexDemoAPI=async params=>{try{const{user}=params;const url=\"/register/fx/demo\";delete user.accountType;delete user.history;delete user.confirmPassword;delete user.search;const result=axiosHelper.post(url,user);return result;}catch(error){throw new Error(error.message);}};// demo ib\nexport const registerForexIbAPI=async params=>{try{const{user}=params;let url=\"/register/fx/ib\";if(user.isCorporate){url=\"/register/fx/corporate-ib\";}delete user.accountType;delete user.history;delete user.confirmPassword;delete user.search;const result=axiosHelper.post(url,user);return result;}catch(error){throw new Error(error.message);}};export const checkUserEmailApi=async payload=>{try{const{payload:{email}}=payload;const result=await axiosHelper.get(\"/customer/check-email?email=\".concat(email));return result;}catch(err){throw new Error(err.message);}};export const sendEmailPinAPI=async _ref=>{let{email}=_ref;try{const resp=await axiosHelper.post(\"/register/send-pin\",{email:email});if(resp.status){return resp;}else return resp.message;}catch(error){return error.message;}};export const verifyEmailPinAPI=async _ref2=>{let{email,emailPin}=_ref2;try{const resp=await axiosHelper.post(\"/register/verify-pin\",{email:email,emailPin:emailPin});if(resp.status){return resp;}else return resp.message;}catch(error){return error.message;}};","map":{"version":3,"names":["axiosHelper","registerLiveAPI","params","user","url","accountType","history","confirmPassword","search","result","post","error","Error","message","registerDemoAPI","registerForexLiveAPI","isCorporate","registerForexDemoAPI","registerForexIbAPI","checkUserEmailApi","payload","email","get","concat","err","sendEmailPinAPI","_ref","resp","status","verifyEmailPinAPI","_ref2","emailPin"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/apis/register.js"],"sourcesContent":["import * as axiosHelper from \"./api_helper\";\n\nexport const registerLiveAPI = async (params) => {\n  try {\n    const { user } = params;\n    const url = \"/register/crypto/live\";\n    delete user.accountType;\n    delete user.history;\n    delete user.confirmPassword;\n    delete user.search;\n    const result = axiosHelper.post(url, user);\n    return result;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const registerDemoAPI = async(params) =>{\n  try {\n    const { user } = params;\n    const url = \"/register/crypto/demo\";\n    delete user.accountType;\n    delete user.history;\n    delete user.confirmPassword;\n    delete user.search;\n    const result = axiosHelper.post(url, user);\n    return result;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// forex live\nexport const registerForexLiveAPI = async(params) =>{\n  try {\n    const { user } = params;\n    let url = \"/register/fx/live\";\n    if (user.isCorporate) {\n      url = \"/register/fx/corporate\";\n    }\n    delete user.accountType;\n    delete user.history;\n    delete user.confirmPassword;\n    delete user.search;\n    const result = axiosHelper.post(url, user);\n    return result;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// forex demo\nexport const registerForexDemoAPI = async(params) =>{\n  try {\n    const { user } = params;\n    const url = \"/register/fx/demo\";\n    delete user.accountType;\n    delete user.history;\n    delete user.confirmPassword;\n    delete user.search;\n    const result = axiosHelper.post(url, user);\n    return result;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// demo ib\nexport const registerForexIbAPI = async(params) =>{\n  try {\n    const { user } = params;\n    let url = \"/register/fx/ib\";\n    if (user.isCorporate) {\n      url = \"/register/fx/corporate-ib\";\n    }\n    delete user.accountType;\n    delete user.history;\n    delete user.confirmPassword;\n    delete user.search;\n    const result = axiosHelper.post(url, user);\n    return result;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const checkUserEmailApi = async (payload)=>{\n  try {\n    const { payload:{ email } } = payload ;\n    const result = await axiosHelper.get(`/customer/check-email?email=${email}`);\n    return result;\n  } catch (err){\n    throw new Error(err.message);\n  }\n};\n\nexport const sendEmailPinAPI = async ({ email })=>{\n  try {\n    const resp = await axiosHelper.post(\"/register/send-pin\", {\n      email: email,\n    });\n    if (resp.status) {\n      return resp;\n    }\n    else return resp.message;\n  } catch (error) {\n    return error.message;\n  }\n};\n\nexport const verifyEmailPinAPI = async ({ email, emailPin })=>{\n  try {\n    const resp = await axiosHelper.post(\"/register/verify-pin\", {\n      email: email,\n      emailPin: emailPin\n    });\n    if (resp.status) {\n      return resp;\n    }\n    else return resp.message;\n  } catch (error) {\n    return error.message;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}