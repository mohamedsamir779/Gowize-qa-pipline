{"ast":null,"code":"import{API_SUCCESS,API_FAIL,GET_EVENTS,ADD_NEW_EVENT,// ADD_EVENT_SUCCESS,\n// ADD_EVENT_FAIL,\nUPDATE_EVENT,UPDATE_EVENT_SUCCESS,UPDATE_EVENT_FAIL,DELETE_EVENT,DELETE_EVENT_SUCCESS,DELETE_EVENT_FAIL,GET_CATEGORIES,GET_CATEGORIES_SUCCESS,GET_CATEGORIES_FAIL}from\"./actionTypes\";export const getEvents=()=>({type:GET_EVENTS});export const apiSuccess=(actionType,data)=>({type:API_SUCCESS,payload:{actionType,data}});export const apiFail=(actionType,error)=>({type:API_FAIL,payload:{actionType,error}});export const addNewEvent=event=>({type:ADD_NEW_EVENT,payload:event});// export const addEventSuccess = event => ({\n//   type: ADD_EVENT_SUCCESS,\n//   payload: event,\n// });\n// export const addEventFail = error => ({\n//   type: ADD_EVENT_FAIL,\n//   payload: error,\n// });\nexport const updateEvent=event=>({type:UPDATE_EVENT,payload:event});export const updateEventSuccess=event=>({type:UPDATE_EVENT_SUCCESS,payload:event});export const updateEventFail=error=>({type:UPDATE_EVENT_FAIL,payload:error});export const deleteEvent=event=>({type:DELETE_EVENT,payload:event});export const deleteEventSuccess=event=>({type:DELETE_EVENT_SUCCESS,payload:event});export const deleteEventFail=error=>({type:DELETE_EVENT_FAIL,payload:error});export const getCategories=()=>({type:GET_CATEGORIES});export const getCategoriesSuccess=categories=>({type:GET_CATEGORIES_SUCCESS,payload:categories});export const getCategoriesFail=error=>({type:GET_CATEGORIES_FAIL,payload:error});","map":{"version":3,"names":["API_SUCCESS","API_FAIL","GET_EVENTS","ADD_NEW_EVENT","UPDATE_EVENT","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL","DELETE_EVENT","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAIL","GET_CATEGORIES","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","getEvents","type","apiSuccess","actionType","data","payload","apiFail","error","addNewEvent","event","updateEvent","updateEventSuccess","updateEventFail","deleteEvent","deleteEventSuccess","deleteEventFail","getCategories","getCategoriesSuccess","categories","getCategoriesFail"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/store/crypto/calendar/actions.js"],"sourcesContent":["import {\n  API_SUCCESS,\n  API_FAIL,\n  GET_EVENTS,\n  ADD_NEW_EVENT,\n  // ADD_EVENT_SUCCESS,\n  // ADD_EVENT_FAIL,\n  UPDATE_EVENT,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_FAIL,\n  DELETE_EVENT,\n  DELETE_EVENT_SUCCESS,\n  DELETE_EVENT_FAIL,\n  GET_CATEGORIES,\n  GET_CATEGORIES_SUCCESS,\n  GET_CATEGORIES_FAIL,\n} from \"./actionTypes\";\n\nexport const getEvents = () => ({\n  type: GET_EVENTS,\n});\n\nexport const apiSuccess = (actionType, data) => ({\n  type: API_SUCCESS,\n  payload: {\n    actionType,\n    data \n  },\n});\n\nexport const apiFail = (actionType, error) => ({\n  type: API_FAIL,\n  payload: {\n    actionType,\n    error \n  },\n});\n\n\nexport const addNewEvent = event => ({\n  type: ADD_NEW_EVENT,\n  payload: event,\n});\n\n// export const addEventSuccess = event => ({\n//   type: ADD_EVENT_SUCCESS,\n//   payload: event,\n// });\n\n// export const addEventFail = error => ({\n//   type: ADD_EVENT_FAIL,\n//   payload: error,\n// });\n\nexport const updateEvent = event => ({\n  type: UPDATE_EVENT,\n  payload: event,\n});\n\nexport const updateEventSuccess = event => ({\n  type: UPDATE_EVENT_SUCCESS,\n  payload: event,\n});\n\nexport const updateEventFail = error => ({\n  type: UPDATE_EVENT_FAIL,\n  payload: error,\n});\n\nexport const deleteEvent = event => ({\n  type: DELETE_EVENT,\n  payload: event,\n});\n\nexport const deleteEventSuccess = event => ({\n  type: DELETE_EVENT_SUCCESS,\n  payload: event,\n});\n\nexport const deleteEventFail = error => ({\n  type: DELETE_EVENT_FAIL,\n  payload: error,\n});\n\nexport const getCategories = () => ({\n  type: GET_CATEGORIES,\n});\n\nexport const getCategoriesSuccess = categories => ({\n  type: GET_CATEGORIES_SUCCESS,\n  payload: categories,\n});\n\nexport const getCategoriesFail = error => ({\n  type: GET_CATEGORIES_FAIL,\n  payload: error,\n});\n"],"mappings":"AAAA,OACEA,WAAW,CACXC,QAAQ,CACRC,UAAU,CACVC,aAAa,CACb;AACA;AACAC,YAAY,CACZC,oBAAoB,CACpBC,iBAAiB,CACjBC,YAAY,CACZC,oBAAoB,CACpBC,iBAAiB,CACjBC,cAAc,CACdC,sBAAsB,CACtBC,mBAAmB,KACd,eAAe,CAEtB,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,IAAO,CAC9BC,IAAI,CAAEZ,UACR,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAa,UAAU,CAAGA,CAACC,UAAU,CAAEC,IAAI,IAAM,CAC/CH,IAAI,CAAEd,WAAW,CACjBkB,OAAO,CAAE,CACPF,UAAU,CACVC,IACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAE,OAAO,CAAGA,CAACH,UAAU,CAAEI,KAAK,IAAM,CAC7CN,IAAI,CAAEb,QAAQ,CACdiB,OAAO,CAAE,CACPF,UAAU,CACVI,KACF,CACF,CAAC,CAAC,CAGF,MAAO,MAAM,CAAAC,WAAW,CAAGC,KAAK,GAAK,CACnCR,IAAI,CAAEX,aAAa,CACnBe,OAAO,CAAEI,KACX,CAAC,CAAC,CAEF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAO,MAAM,CAAAC,WAAW,CAAGD,KAAK,GAAK,CACnCR,IAAI,CAAEV,YAAY,CAClBc,OAAO,CAAEI,KACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAE,kBAAkB,CAAGF,KAAK,GAAK,CAC1CR,IAAI,CAAET,oBAAoB,CAC1Ba,OAAO,CAAEI,KACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAG,eAAe,CAAGL,KAAK,GAAK,CACvCN,IAAI,CAAER,iBAAiB,CACvBY,OAAO,CAAEE,KACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAM,WAAW,CAAGJ,KAAK,GAAK,CACnCR,IAAI,CAAEP,YAAY,CAClBW,OAAO,CAAEI,KACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAK,kBAAkB,CAAGL,KAAK,GAAK,CAC1CR,IAAI,CAAEN,oBAAoB,CAC1BU,OAAO,CAAEI,KACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAM,eAAe,CAAGR,KAAK,GAAK,CACvCN,IAAI,CAAEL,iBAAiB,CACvBS,OAAO,CAAEE,KACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAS,aAAa,CAAGA,CAAA,IAAO,CAClCf,IAAI,CAAEJ,cACR,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAoB,oBAAoB,CAAGC,UAAU,GAAK,CACjDjB,IAAI,CAAEH,sBAAsB,CAC5BO,OAAO,CAAEa,UACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,iBAAiB,CAAGZ,KAAK,GAAK,CACzCN,IAAI,CAAEF,mBAAmB,CACzBM,OAAO,CAAEE,KACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}