{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\n(function () {\n  var ArrayT,\n    LazyArray,\n    LazyArrayT,\n    NumberT,\n    inspect,\n    utils,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function (child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n  ArrayT = require('./Array');\n  NumberT = require('./Number').Number;\n  utils = require('./utils');\n  inspect = require('util').inspect;\n  LazyArrayT = function (_super) {\n    __extends(LazyArrayT, _super);\n    function LazyArrayT() {\n      return LazyArrayT.__super__.constructor.apply(this, arguments);\n    }\n    LazyArrayT.prototype.decode = function (stream, parent) {\n      var length, pos, res;\n      pos = stream.pos;\n      length = utils.resolveLength(this.length, stream, parent);\n      if (this.length instanceof NumberT) {\n        parent = {\n          parent: parent,\n          _startOffset: pos,\n          _currentOffset: 0,\n          _length: length\n        };\n      }\n      res = new LazyArray(this.type, length, stream, parent);\n      stream.pos += length * this.type.size(null, parent);\n      return res;\n    };\n    LazyArrayT.prototype.size = function (val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n      return LazyArrayT.__super__.size.call(this, val, ctx);\n    };\n    LazyArrayT.prototype.encode = function (stream, val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n      return LazyArrayT.__super__.encode.call(this, stream, val, ctx);\n    };\n    return LazyArrayT;\n  }(ArrayT);\n  LazyArray = function () {\n    function LazyArray(type, length, stream, ctx) {\n      this.type = type;\n      this.length = length;\n      this.stream = stream;\n      this.ctx = ctx;\n      this.base = this.stream.pos;\n      this.items = [];\n    }\n    LazyArray.prototype.get = function (index) {\n      var pos;\n      if (index < 0 || index >= this.length) {\n        return void 0;\n      }\n      if (this.items[index] == null) {\n        pos = this.stream.pos;\n        this.stream.pos = this.base + this.type.size(null, this.ctx) * index;\n        this.items[index] = this.type.decode(this.stream, this.ctx);\n        this.stream.pos = pos;\n      }\n      return this.items[index];\n    };\n    LazyArray.prototype.toArray = function () {\n      var i, _i, _ref, _results;\n      _results = [];\n      for (i = _i = 0, _ref = this.length; _i < _ref; i = _i += 1) {\n        _results.push(this.get(i));\n      }\n      return _results;\n    };\n    LazyArray.prototype.inspect = function () {\n      return inspect(this.toArray());\n    };\n    return LazyArray;\n  }();\n  module.exports = LazyArrayT;\n}).call(this);","map":{"version":3,"names":["ArrayT","LazyArray","LazyArrayT","NumberT","inspect","utils","__hasProp","hasOwnProperty","__extends","child","parent","key","call","ctor","constructor","prototype","__super__","require","Number","_super","apply","arguments","decode","stream","length","pos","res","resolveLength","_startOffset","_currentOffset","_length","type","size","val","ctx","toArray","encode","base","items","get","index","i","_i","_ref","_results","push","module","exports"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/restructure/src/LazyArray.js"],"sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var ArrayT, LazyArray, LazyArrayT, NumberT, inspect, utils,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  ArrayT = require('./Array');\n\n  NumberT = require('./Number').Number;\n\n  utils = require('./utils');\n\n  inspect = require('util').inspect;\n\n  LazyArrayT = (function(_super) {\n    __extends(LazyArrayT, _super);\n\n    function LazyArrayT() {\n      return LazyArrayT.__super__.constructor.apply(this, arguments);\n    }\n\n    LazyArrayT.prototype.decode = function(stream, parent) {\n      var length, pos, res;\n      pos = stream.pos;\n      length = utils.resolveLength(this.length, stream, parent);\n      if (this.length instanceof NumberT) {\n        parent = {\n          parent: parent,\n          _startOffset: pos,\n          _currentOffset: 0,\n          _length: length\n        };\n      }\n      res = new LazyArray(this.type, length, stream, parent);\n      stream.pos += length * this.type.size(null, parent);\n      return res;\n    };\n\n    LazyArrayT.prototype.size = function(val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n      return LazyArrayT.__super__.size.call(this, val, ctx);\n    };\n\n    LazyArrayT.prototype.encode = function(stream, val, ctx) {\n      if (val instanceof LazyArray) {\n        val = val.toArray();\n      }\n      return LazyArrayT.__super__.encode.call(this, stream, val, ctx);\n    };\n\n    return LazyArrayT;\n\n  })(ArrayT);\n\n  LazyArray = (function() {\n    function LazyArray(type, length, stream, ctx) {\n      this.type = type;\n      this.length = length;\n      this.stream = stream;\n      this.ctx = ctx;\n      this.base = this.stream.pos;\n      this.items = [];\n    }\n\n    LazyArray.prototype.get = function(index) {\n      var pos;\n      if (index < 0 || index >= this.length) {\n        return void 0;\n      }\n      if (this.items[index] == null) {\n        pos = this.stream.pos;\n        this.stream.pos = this.base + this.type.size(null, this.ctx) * index;\n        this.items[index] = this.type.decode(this.stream, this.ctx);\n        this.stream.pos = pos;\n      }\n      return this.items[index];\n    };\n\n    LazyArray.prototype.toArray = function() {\n      var i, _i, _ref, _results;\n      _results = [];\n      for (i = _i = 0, _ref = this.length; _i < _ref; i = _i += 1) {\n        _results.push(this.get(i));\n      }\n      return _results;\n    };\n\n    LazyArray.prototype.inspect = function() {\n      return inspect(this.toArray());\n    };\n\n    return LazyArray;\n\n  })();\n\n  module.exports = LazyArrayT;\n\n}).call(this);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}