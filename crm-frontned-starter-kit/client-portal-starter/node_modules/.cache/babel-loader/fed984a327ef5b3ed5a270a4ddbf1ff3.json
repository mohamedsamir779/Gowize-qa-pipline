{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\n/**\n * Generate glyphs indices from string indices\n *\n * ex. resolve([[0, 1, 2, 4]]) => [0, 1, 2, 2, 3]\n *\n * @param  {String}  string\n * @param  {Array}  string indices\n * @return {Array} glyph indices\n */\nvar resolve = function resolve(string, stringIndices) {\n  if (stringIndices === void 0) {\n    stringIndices = [];\n  }\n  var counter = 0;\n  var glyphIndices = [];\n  for (var i = 0; i < stringIndices.length; i++) {\n    var current = stringIndices[i];\n    var prevValue = stringIndices[i - 1];\n    var stringIndex = (0, _isNumber[\"default\"])(current) ? current : prevValue + 1 || 0;\n    var nextValue = stringIndices[i + 1] || stringIndex + 1;\n    var diff = Math.abs(nextValue - stringIndex);\n    glyphIndices.push.apply(glyphIndices, R.repeat(counter, diff));\n    counter += 1;\n  } // Append ending ligature glyph indices\n\n  if (string.length !== glyphIndices.length) {\n    var _diff = Math.max(0, string.length - glyphIndices.length);\n    var lastValue = R.last(glyphIndices);\n    glyphIndices.push.apply(glyphIndices, R.repeat(lastValue, _diff));\n  }\n  return glyphIndices;\n};\nvar _default = resolve;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_isNumber","resolve","string","stringIndices","counter","glyphIndices","i","length","current","prevValue","stringIndex","nextValue","diff","Math","abs","push","apply","repeat","_diff","max","lastValue","last","_default"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@react-pdf/textkit/indices/resolve.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _isNumber = _interopRequireDefault(require(\"../utils/isNumber\"));\n\n/**\n * Generate glyphs indices from string indices\n *\n * ex. resolve([[0, 1, 2, 4]]) => [0, 1, 2, 2, 3]\n *\n * @param  {String}  string\n * @param  {Array}  string indices\n * @return {Array} glyph indices\n */\nvar resolve = function resolve(string, stringIndices) {\n  if (stringIndices === void 0) {\n    stringIndices = [];\n  }\n\n  var counter = 0;\n  var glyphIndices = [];\n\n  for (var i = 0; i < stringIndices.length; i++) {\n    var current = stringIndices[i];\n    var prevValue = stringIndices[i - 1];\n    var stringIndex = (0, _isNumber[\"default\"])(current) ? current : prevValue + 1 || 0;\n    var nextValue = stringIndices[i + 1] || stringIndex + 1;\n    var diff = Math.abs(nextValue - stringIndex);\n    glyphIndices.push.apply(glyphIndices, R.repeat(counter, diff));\n    counter += 1;\n  } // Append ending ligature glyph indices\n\n\n  if (string.length !== glyphIndices.length) {\n    var _diff = Math.max(0, string.length - glyphIndices.length);\n\n    var lastValue = R.last(glyphIndices);\n    glyphIndices.push.apply(glyphIndices, R.repeat(lastValue, _diff));\n  }\n\n  return glyphIndices;\n};\n\nvar _default = resolve;\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpF,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,+CAA+C,CAAC;AAEtFE,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,IAAIE,CAAC,GAAGH,uBAAuB,CAACD,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAIK,SAAS,GAAGN,sBAAsB,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,OAAO,GAAG,SAASA,OAAOA,CAACC,MAAM,EAAEC,aAAa,EAAE;EACpD,IAAIA,aAAa,KAAK,KAAK,CAAC,EAAE;IAC5BA,aAAa,GAAG,EAAE;EACpB;EAEA,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,YAAY,GAAG,EAAE;EAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IAC7C,IAAIE,OAAO,GAAGL,aAAa,CAACG,CAAC,CAAC;IAC9B,IAAIG,SAAS,GAAGN,aAAa,CAACG,CAAC,GAAG,CAAC,CAAC;IACpC,IAAII,WAAW,GAAG,CAAC,CAAC,EAAEV,SAAS,CAAC,SAAS,CAAC,EAAEQ,OAAO,CAAC,GAAGA,OAAO,GAAGC,SAAS,GAAG,CAAC,IAAI,CAAC;IACnF,IAAIE,SAAS,GAAGR,aAAa,CAACG,CAAC,GAAG,CAAC,CAAC,IAAII,WAAW,GAAG,CAAC;IACvD,IAAIE,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACH,SAAS,GAAGD,WAAW,CAAC;IAC5CL,YAAY,CAACU,IAAI,CAACC,KAAK,CAACX,YAAY,EAAEN,CAAC,CAACkB,MAAM,CAACb,OAAO,EAAEQ,IAAI,CAAC,CAAC;IAC9DR,OAAO,IAAI,CAAC;EACd,CAAC,CAAC;;EAGF,IAAIF,MAAM,CAACK,MAAM,KAAKF,YAAY,CAACE,MAAM,EAAE;IACzC,IAAIW,KAAK,GAAGL,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEjB,MAAM,CAACK,MAAM,GAAGF,YAAY,CAACE,MAAM,CAAC;IAE5D,IAAIa,SAAS,GAAGrB,CAAC,CAACsB,IAAI,CAAChB,YAAY,CAAC;IACpCA,YAAY,CAACU,IAAI,CAACC,KAAK,CAACX,YAAY,EAAEN,CAAC,CAACkB,MAAM,CAACG,SAAS,EAAEF,KAAK,CAAC,CAAC;EACnE;EAEA,OAAOb,YAAY;AACrB,CAAC;AAED,IAAIiB,QAAQ,GAAGrB,OAAO;AACtBJ,OAAO,CAAC,SAAS,CAAC,GAAGyB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}