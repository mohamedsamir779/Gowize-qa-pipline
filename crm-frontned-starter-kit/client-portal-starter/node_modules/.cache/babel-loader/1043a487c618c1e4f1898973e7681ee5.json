{"ast":null,"code":"var React = require('react');\nvar createReactClass = require('create-react-class');\nvar PropTypes = require('prop-types');\nvar merge = require('object-assign');\nvar NotificationContainer = require('./NotificationContainer');\nvar Constants = require('./constants');\nvar Styles = require('./styles');\nvar NotificationSystem = createReactClass({\n  uid: 3400,\n  _isMounted: false,\n  _getStyles: {\n    overrideStyle: {},\n    overrideWidth: null,\n    setOverrideStyle: function (style) {\n      this.overrideStyle = style;\n    },\n    wrapper: function () {\n      if (!this.overrideStyle) return {};\n      return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n    },\n    container: function (position) {\n      var override = this.overrideStyle.Containers || {};\n      if (!this.overrideStyle) return {};\n      this.overrideWidth = Styles.Containers.DefaultStyle.width;\n      if (override.DefaultStyle && override.DefaultStyle.width) {\n        this.overrideWidth = override.DefaultStyle.width;\n      }\n      if (override[position] && override[position].width) {\n        this.overrideWidth = override[position].width;\n      }\n      return merge({}, Styles.Containers.DefaultStyle, Styles.Containers[position], override.DefaultStyle, override[position]);\n    },\n    elements: {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    },\n    byElement: function (element) {\n      var self = this;\n      return function (level) {\n        var _element = self.elements[element];\n        var override = self.overrideStyle[_element] || {};\n        if (!self.overrideStyle) return {};\n        return merge({}, Styles[_element].DefaultStyle, Styles[_element][level], override.DefaultStyle, override[level]);\n      };\n    }\n  },\n  _didNotificationRemoved: function (uid) {\n    var notification;\n    var notifications = this.state.notifications.filter(function (toCheck) {\n      if (toCheck.uid === uid) {\n        notification = toCheck;\n        return false;\n      }\n      return true;\n    });\n    if (this._isMounted) {\n      this.setState({\n        notifications: notifications\n      });\n    }\n    if (notification && notification.onRemove) {\n      notification.onRemove(notification);\n    }\n  },\n  getInitialState: function () {\n    return {\n      notifications: []\n    };\n  },\n  propTypes: {\n    style: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    noAnimation: PropTypes.bool,\n    allowHTML: PropTypes.bool\n  },\n  getDefaultProps: function () {\n    return {\n      style: {},\n      noAnimation: false,\n      allowHTML: false\n    };\n  },\n  addNotification: function (notification) {\n    var _notification = merge({}, Constants.notification, notification);\n    var notifications = this.state.notifications;\n    var i;\n    if (!_notification.level) {\n      throw new Error('notification level is required.');\n    }\n    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n      throw new Error('\\'' + _notification.level + '\\' is not a valid level.');\n    }\n\n    // eslint-disable-next-line\n    if (isNaN(_notification.autoDismiss)) {\n      throw new Error('\\'autoDismiss\\' must be a number.');\n    }\n    if (Object.keys(Constants.positions).indexOf(_notification.position) === -1) {\n      throw new Error('\\'' + _notification.position + '\\' is not a valid position.');\n    }\n\n    // Some preparations\n    _notification.position = _notification.position.toLowerCase();\n    _notification.level = _notification.level.toLowerCase();\n    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n    _notification.uid = _notification.uid || this.uid;\n    _notification.ref = 'notification-' + _notification.uid;\n    this.uid += 1;\n\n    // do not add if the notification already exists based on supplied uid\n    for (i = 0; i < notifications.length; i += 1) {\n      if (notifications[i].uid === _notification.uid) {\n        return false;\n      }\n    }\n    notifications.push(_notification);\n    if (typeof _notification.onAdd === 'function') {\n      notification.onAdd(_notification);\n    }\n    this.setState({\n      notifications: notifications\n    });\n    return _notification;\n  },\n  getNotificationRef: function (notification) {\n    var self = this;\n    var foundNotification = null;\n    Object.keys(this.refs).forEach(function (container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function (_notification) {\n          var uid = notification.uid ? notification.uid : notification;\n          if (_notification === 'notification-' + uid) {\n            // NOTE: Stop iterating further and return the found notification.\n            // Since UIDs are uniques and there won't be another notification found.\n            foundNotification = self.refs[container].refs[_notification];\n          }\n        });\n      }\n    });\n    return foundNotification;\n  },\n  removeNotification: function (notification) {\n    var foundNotification = this.getNotificationRef(notification);\n    return foundNotification && foundNotification._hideNotification();\n  },\n  editNotification: function (notification, newNotification) {\n    var foundNotification = null;\n    // NOTE: Find state notification to update by using\n    // `setState` and forcing React to re-render the component.\n    var uid = notification.uid ? notification.uid : notification;\n    var newNotifications = this.state.notifications.filter(function (stateNotification) {\n      if (uid === stateNotification.uid) {\n        foundNotification = stateNotification;\n        return false;\n      }\n      return true;\n    });\n    if (!foundNotification) {\n      return;\n    }\n    newNotifications.push(merge({}, foundNotification, newNotification));\n    this.setState({\n      notifications: newNotifications\n    });\n  },\n  clearNotifications: function () {\n    var self = this;\n    Object.keys(this.refs).forEach(function (container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function (_notification) {\n          self.refs[container].refs[_notification]._hideNotification();\n        });\n      }\n    });\n  },\n  componentDidMount: function () {\n    this._getStyles.setOverrideStyle(this.props.style);\n    this._isMounted = true;\n  },\n  componentWillUnmount: function () {\n    this._isMounted = false;\n  },\n  render: function () {\n    var self = this;\n    var containers = null;\n    var notifications = this.state.notifications;\n    if (notifications.length) {\n      containers = Object.keys(Constants.positions).map(function (position) {\n        var _notifications = notifications.filter(function (notification) {\n          return position === notification.position;\n        });\n        if (!_notifications.length) {\n          return null;\n        }\n        return React.createElement(NotificationContainer, {\n          ref: 'container-' + position,\n          key: position,\n          position: position,\n          notifications: _notifications,\n          getStyles: self._getStyles,\n          onRemove: self._didNotificationRemoved,\n          noAnimation: self.props.noAnimation,\n          allowHTML: self.props.allowHTML\n        });\n      });\n    }\n    return React.createElement(\"div\", {\n      className: \"notifications-wrapper\",\n      style: this._getStyles.wrapper()\n    }, containers);\n  }\n});\nmodule.exports = NotificationSystem;","map":{"version":3,"names":["React","require","createReactClass","PropTypes","merge","NotificationContainer","Constants","Styles","NotificationSystem","uid","_isMounted","_getStyles","overrideStyle","overrideWidth","setOverrideStyle","style","wrapper","Wrapper","container","position","override","Containers","DefaultStyle","width","elements","notification","title","messageWrapper","dismiss","action","actionWrapper","byElement","element","self","level","_element","_didNotificationRemoved","notifications","state","filter","toCheck","setState","onRemove","getInitialState","propTypes","oneOfType","bool","object","noAnimation","allowHTML","getDefaultProps","addNotification","_notification","i","Error","Object","keys","levels","indexOf","isNaN","autoDismiss","positions","toLowerCase","parseInt","ref","length","push","onAdd","getNotificationRef","foundNotification","refs","forEach","removeNotification","_hideNotification","editNotification","newNotification","newNotifications","stateNotification","clearNotifications","componentDidMount","props","componentWillUnmount","render","containers","map","_notifications","createElement","key","getStyles","className","module","exports"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/react-notification-system/dist/NotificationSystem.js"],"sourcesContent":["var React = require('react');\nvar createReactClass = require('create-react-class');\nvar PropTypes = require('prop-types');\nvar merge = require('object-assign');\nvar NotificationContainer = require('./NotificationContainer');\nvar Constants = require('./constants');\nvar Styles = require('./styles');\n\nvar NotificationSystem = createReactClass({\n\n  uid: 3400,\n\n  _isMounted: false,\n\n  _getStyles: {\n    overrideStyle: {},\n\n    overrideWidth: null,\n\n    setOverrideStyle: function(style) {\n      this.overrideStyle = style;\n    },\n\n    wrapper: function() {\n      if (!this.overrideStyle) return {};\n      return merge({}, Styles.Wrapper, this.overrideStyle.Wrapper);\n    },\n\n    container: function(position) {\n      var override = this.overrideStyle.Containers || {};\n      if (!this.overrideStyle) return {};\n\n      this.overrideWidth = Styles.Containers.DefaultStyle.width;\n\n      if (override.DefaultStyle && override.DefaultStyle.width) {\n        this.overrideWidth = override.DefaultStyle.width;\n      }\n\n      if (override[position] && override[position].width) {\n        this.overrideWidth = override[position].width;\n      }\n\n      return merge({}, Styles.Containers.DefaultStyle, Styles.Containers[position], override.DefaultStyle, override[position]);\n    },\n\n    elements: {\n      notification: 'NotificationItem',\n      title: 'Title',\n      messageWrapper: 'MessageWrapper',\n      dismiss: 'Dismiss',\n      action: 'Action',\n      actionWrapper: 'ActionWrapper'\n    },\n\n    byElement: function(element) {\n      var self = this;\n      return function(level) {\n        var _element = self.elements[element];\n        var override = self.overrideStyle[_element] || {};\n        if (!self.overrideStyle) return {};\n        return merge({}, Styles[_element].DefaultStyle, Styles[_element][level], override.DefaultStyle, override[level]);\n      };\n    }\n  },\n\n  _didNotificationRemoved: function(uid) {\n    var notification;\n    var notifications = this.state.notifications.filter(function(toCheck) {\n      if (toCheck.uid === uid) {\n        notification = toCheck;\n        return false;\n      }\n      return true;\n    });\n\n    if (this._isMounted) {\n      this.setState({ notifications: notifications });\n    }\n\n    if (notification && notification.onRemove) {\n      notification.onRemove(notification);\n    }\n  },\n\n  getInitialState: function() {\n    return {\n      notifications: []\n    };\n  },\n\n  propTypes: {\n    style: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.object\n    ]),\n    noAnimation: PropTypes.bool,\n    allowHTML: PropTypes.bool\n  },\n\n  getDefaultProps: function() {\n    return {\n      style: {},\n      noAnimation: false,\n      allowHTML: false\n    };\n  },\n\n  addNotification: function(notification) {\n    var _notification = merge({}, Constants.notification, notification);\n    var notifications = this.state.notifications;\n    var i;\n\n    if (!_notification.level) {\n      throw new Error('notification level is required.');\n    }\n\n    if (Object.keys(Constants.levels).indexOf(_notification.level) === -1) {\n      throw new Error('\\'' + _notification.level + '\\' is not a valid level.');\n    }\n\n    // eslint-disable-next-line\n    if (isNaN(_notification.autoDismiss)) {\n      throw new Error('\\'autoDismiss\\' must be a number.');\n    }\n\n    if (Object.keys(Constants.positions).indexOf(_notification.position) === -1) {\n      throw new Error('\\'' + _notification.position + '\\' is not a valid position.');\n    }\n\n    // Some preparations\n    _notification.position = _notification.position.toLowerCase();\n    _notification.level = _notification.level.toLowerCase();\n    _notification.autoDismiss = parseInt(_notification.autoDismiss, 10);\n\n    _notification.uid = _notification.uid || this.uid;\n    _notification.ref = 'notification-' + _notification.uid;\n    this.uid += 1;\n\n    // do not add if the notification already exists based on supplied uid\n    for (i = 0; i < notifications.length; i += 1) {\n      if (notifications[i].uid === _notification.uid) {\n        return false;\n      }\n    }\n\n    notifications.push(_notification);\n\n    if (typeof _notification.onAdd === 'function') {\n      notification.onAdd(_notification);\n    }\n\n    this.setState({\n      notifications: notifications\n    });\n\n    return _notification;\n  },\n\n  getNotificationRef: function(notification) {\n    var self = this;\n    var foundNotification = null;\n\n    Object.keys(this.refs).forEach(function(container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function(_notification) {\n          var uid = notification.uid ? notification.uid : notification;\n          if (_notification === 'notification-' + uid) {\n            // NOTE: Stop iterating further and return the found notification.\n            // Since UIDs are uniques and there won't be another notification found.\n            foundNotification = self.refs[container].refs[_notification];\n          }\n        });\n      }\n    });\n\n    return foundNotification;\n  },\n\n  removeNotification: function(notification) {\n    var foundNotification = this.getNotificationRef(notification);\n    return foundNotification && foundNotification._hideNotification();\n  },\n\n  editNotification: function(notification, newNotification) {\n    var foundNotification = null;\n    // NOTE: Find state notification to update by using\n    // `setState` and forcing React to re-render the component.\n    var uid = notification.uid ? notification.uid : notification;\n\n    var newNotifications = this.state.notifications.filter(function(stateNotification) {\n      if (uid === stateNotification.uid) {\n        foundNotification = stateNotification;\n        return false;\n      }\n\n      return true;\n    });\n\n\n    if (!foundNotification) {\n      return;\n    }\n\n    newNotifications.push(merge(\n      {},\n      foundNotification,\n      newNotification\n    ));\n\n    this.setState({\n      notifications: newNotifications\n    });\n  },\n\n  clearNotifications: function() {\n    var self = this;\n    Object.keys(this.refs).forEach(function(container) {\n      if (container.indexOf('container') > -1) {\n        Object.keys(self.refs[container].refs).forEach(function(_notification) {\n          self.refs[container].refs[_notification]._hideNotification();\n        });\n      }\n    });\n  },\n\n  componentDidMount: function() {\n    this._getStyles.setOverrideStyle(this.props.style);\n    this._isMounted = true;\n  },\n\n  componentWillUnmount: function() {\n    this._isMounted = false;\n  },\n\n  render: function() {\n    var self = this;\n    var containers = null;\n    var notifications = this.state.notifications;\n\n    if (notifications.length) {\n      containers = Object.keys(Constants.positions).map(function(position) {\n        var _notifications = notifications.filter(function(notification) {\n          return position === notification.position;\n        });\n\n        if (!_notifications.length) {\n          return null;\n        }\n\n        return (\n          React.createElement(NotificationContainer, {\n            ref:  'container-' + position, \n            key:  position, \n            position:  position, \n            notifications:  _notifications, \n            getStyles:  self._getStyles, \n            onRemove:  self._didNotificationRemoved, \n            noAnimation:  self.props.noAnimation, \n            allowHTML:  self.props.allowHTML}\n          )\n        );\n      });\n    }\n\n\n    return (\n      React.createElement(\"div\", {className: \"notifications-wrapper\", style:  this._getStyles.wrapper() }, \n         containers \n      )\n    );\n  }\n});\n\nmodule.exports = NotificationSystem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}