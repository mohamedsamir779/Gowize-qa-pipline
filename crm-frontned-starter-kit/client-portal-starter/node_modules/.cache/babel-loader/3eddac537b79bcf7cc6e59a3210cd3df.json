{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,Fragment}from\"react\";import{useDispatch,connect}from\"react-redux\";import{Button,Col,Container,Row,Form as ReactStrapForm,Label,Input,FormGroup,Spinner}from\"reactstrap\";import{Formik,Form as FormikForm}from\"formik\";import*as Yup from\"yup\";//i18n\nimport{withTranslation}from\"react-i18next\";import CardWrapper from\"../../components/Common/CardWrapper\";import{uploadDocsStart}from\"../../store/general/documents/actions\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function DocumentCorpUpload(props){var _props$documents3,_props$documents4,_props$documents5,_props$clientData$cor3,_props$clientData$cor4,_props$clientData$cor5,_props$clientData$cor6,_props$documents6,_props$documents7;const dispatch=useDispatch();const memorandum=useRef();const corpAddressRef=useRef();const certificateRef=useRef();const addressRef=useRef();const frontSideRef=useRef();const backSideRef=useRef();const requiredPassportRef=useRef();const optionalPassportRef=useRef();const additionalRef=useRef();const documentNumberRef=useRef();const issueDateRef=useRef();const expiryDateRef=useRef();const[memFiles,setMemFiles]=useState({});const[memorandumUploaded,setMemorandumUploaded]=useState(false);const[corpAddressUploaded,setCorpAddressUploaded]=useState(false);const[certificateUploaded,setCertificateUploaded]=useState(false);const[authAddressUploaded,setAuthAddressUploaded]=useState(false);const[authIdUploaded,setAuthIdUploaded]=useState(false);const[option,setOption]=useState([]);const[docType,setDocType]=useState(option[0]);const[secondSelect,setSecondSelect]=useState(\"ID\");const[personnel,setPersonnel]=useState(\"\");const[shareholderId,setShareholderId]=useState(\"\");const[uploadedShareholderIds,setUploadedShareholderIds]=useState([]);const[allShareholdersIdsUploaded,setAllShareholdersIdsUploaded]=useState(false);const[uploadedShareholderAddresses,setUploadedShareholderAddresses]=useState([]);const[allShareholdersAddressesUploaded,setAllShareholdersAddressesUploaded]=useState(false);const initialValues={typeOfDocument:\"\",proofOfId:\"ID\"};// max file size to uplaod = 5 MB\nconst maxFileSize=5;const acceptedExtensions=[\"image/jpeg\",\"image/png\",\"application/pdf\"];const fileSizeError=\"File is too large, It has to be 5MB at most\";const fileExtensionError=\"Only accepts files with the following extensions *jpg, *png, *pdf\";const addFile=(name,files)=>{if((files===null||files===void 0?void 0:files.size)/1000000<=maxFileSize){setMemFiles(_objectSpread(_objectSpread({},memFiles),{},{[name]:files}));}};const validationSchema=Yup.object().shape({memorandum:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"memorandum\",then:Yup.mixed().required(\"Memorandum of Association is required\")}),corpAddress:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"corpAddress\",then:Yup.mixed().required(\"Corporate Address is required\")}),certificate:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"certificate\",then:Yup.mixed().required(\"Certificate of Incorporation is required\")}),frontSideId:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"ID\",then:Yup.mixed().required(\"Front side id is required\")}),backSideId:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"ID\",then:Yup.mixed().required(\"Back side id is required\")}),address:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"address\",then:Yup.mixed().required(\"Address is required\")}),proofOfPassport:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"proofOfId\",{is:\"Passport\",then:Yup.mixed().required(\"Passport is required\")}),proofOfPassportOptional:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}),Additional:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"Additional\",then:Yup.mixed().required(\"Additional file is required\")})});useEffect(()=>{var _props$documents;if(((_props$documents=props.documents)===null||_props$documents===void 0?void 0:_props$documents.length)>0){const{documents}=props;const memorandumFound=documents.find(x=>x.type===\"MEMORANDUM\"&&x.status===\"APPROVED\");const corpAddressFound=documents.find(x=>x.type===\"CORPORATE_ADDRESS\"&&x.status===\"APPROVED\");const certificateFound=documents.find(x=>x.type===\"CERTIFICATE_OF_INCORPORATION\"&&x.status===\"APPROVED\");const authIdFound=documents.find(x=>x.type===\"ID\"&&x.subType===\"AUTHORIZED_PERSON\"&&x.status===\"APPROVED\");const authAddressFound=documents.find(x=>x.type===\"ADDRESS\"&&x.subType===\"AUTHORIZED_PERSON\"&&x.status===\"APPROVED\");if(memorandumFound)setMemorandumUploaded(true);if(corpAddressFound)setCorpAddressUploaded(true);if(certificateFound)setCertificateUploaded(true);if(authIdFound)setAuthIdUploaded(true);if(authAddressFound)setAuthAddressUploaded(true);}},[props.documents,props.documents.map(item=>item.status)]);useEffect(()=>{var _props$documents2;if(((_props$documents2=props.documents)===null||_props$documents2===void 0?void 0:_props$documents2.length)>0){var _props$clientData,_props$clientData$cor,_props$clientData$cor2,_props$clientData2,_props$clientData2$co,_props$clientData2$co2;const{documents}=props;const shareholderIds=((_props$clientData=props.clientData)===null||_props$clientData===void 0?void 0:(_props$clientData$cor=_props$clientData.corporateInfo)===null||_props$clientData$cor===void 0?void 0:(_props$clientData$cor2=_props$clientData$cor.shareholders)===null||_props$clientData$cor2===void 0?void 0:_props$clientData$cor2.map(shareholder=>shareholder._id))||[];const shareholderIdsFound=documents.filter(x=>x.type===\"ID\"&&x.subType===\"SHAREHOLDER\"&&x.status===\"APPROVED\"&&shareholderIds.includes(x.shareholderId)).map(x=>x.shareholderId);setAllShareholdersIdsUploaded(shareholderIdsFound.length===shareholderIds.length);setUploadedShareholderIds(shareholderIdsFound);const shareholderAddresses=((_props$clientData2=props.clientData)===null||_props$clientData2===void 0?void 0:(_props$clientData2$co=_props$clientData2.corporateInfo)===null||_props$clientData2$co===void 0?void 0:(_props$clientData2$co2=_props$clientData2$co.shareholders)===null||_props$clientData2$co2===void 0?void 0:_props$clientData2$co2.map(shareholder=>shareholder._id))||[];const shareholderAddressesFound=documents.filter(x=>x.type===\"ADDRESS\"&&x.subType===\"SHAREHOLDER\"&&x.status===\"APPROVED\"&&shareholderIds.includes(x.shareholderId)).map(x=>x.shareholderId);setAllShareholdersAddressesUploaded(shareholderAddressesFound.length===shareholderAddresses.length);setUploadedShareholderAddresses(shareholderAddressesFound);}},[props.documents,props.clientData]);const uploadDoc=async()=>{try{var formData=new FormData();switch(docType){case\"memorandum\":formData.append(\"type\",\"MEMORANDUM\");// type saved in db\nformData.append(\"images\",memFiles[\"MEMORANDUM\"]);break;case\"corpAddress\":formData.append(\"type\",\"CORPORATE_ADDRESS\");formData.append(\"images\",memFiles[\"CORPORATE_ADDRESS\"]);break;case\"certificate\":formData.append(\"type\",\"CERTIFICATE_OF_INCORPORATION\");formData.append(\"images\",memFiles[\"CERTIFICATE\"]);break;case\"ID\":formData.append(\"type\",\"ID\");formData.append(\"images\",memFiles[\"ID1\"]);formData.append(\"subType\",personnel);if(personnel===\"SHAREHOLDER\"){formData.append(\"shareholderId\",shareholderId);}if(memFiles[\"ID2\"]){formData.append(\"images\",memFiles[\"ID2\"]);}break;case\"address\":formData.append(\"type\",\"ADDRESS\");formData.append(\"subType\",personnel);if(personnel===\"SHAREHOLDER\"){formData.append(\"shareholderId\",shareholderId);}formData.append(\"images\",memFiles[\"ADDRESS\"]);break;case\"Additional\":formData.append(\"type\",\"ADDITIONAL_DOCUMENTS\");formData.append(\"images\",memFiles[\"ADDITIONAL_DOCUMENTS\"]);break;}dispatch(uploadDocsStart(formData));}catch(error){}};const secondSelectChangeHandler=e=>{let value=e.target.value;setSecondSelect(value);};const resetForm=()=>{setMemFiles({});memorandum.current?memorandum.current.value=\"\":memorandum.current=\"\";corpAddressRef.current?corpAddressRef.current.value=\"\":corpAddressRef.current=\"\";certificateRef.current?certificateRef.current.value=\"\":certificateRef.current=\"\";frontSideRef.current?frontSideRef.current.value=\"\":frontSideRef.current=\"\";backSideRef.current?backSideRef.current.value=\"\":backSideRef.current=\"\";addressRef.current?addressRef.current.value=\"\":addressRef.current=\"\";requiredPassportRef.current?requiredPassportRef.current.value=\"\":requiredPassportRef.current=\"\";optionalPassportRef.current?optionalPassportRef.current.value=\"\":optionalPassportRef.current=\"\";additionalRef.current?additionalRef.current.value=\"\":additionalRef.current=\"\";documentNumberRef.current?documentNumberRef.current.value=\"\":documentNumberRef.current=\"\";issueDateRef.current?issueDateRef.current.value=\"\":issueDateRef.current=\"\";expiryDateRef.current?expiryDateRef.current.value=\"\":expiryDateRef.current=\"\";};useEffect(()=>{const testArray=[!memorandumUploaded&&\"memorandum\",!corpAddressUploaded&&\"corpAddress\",!certificateUploaded&&\"certificate\",// !authIdUploaded && \"ID\",\n\"Additional\"];const newOptions=testArray.filter(option=>option!==false);setOption(newOptions);setDocType(newOptions[0]);},[authIdUploaded,corpAddressUploaded,certificateUploaded,memorandumUploaded]);return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{lg:9,children:/*#__PURE__*/_jsx(CardWrapper,{className:\"h-100 glass-card shadow\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Formik,{validationSchema:validationSchema,initialValues:initialValues,onSubmit:values=>{if(values.countryOfIssue===\"None\"){delete values.countryOfIssue;}delete values.memorandum;delete values.corpAddress;delete values.address;delete values.certificate;delete values.typeOfDocument;delete values.proofOfId;delete values.proofOfPassport;delete values.Additional;delete values.proofOfPassportOptional;uploadDoc(values);resetForm();},children:_ref=>{var _props$clientData3,_props$clientData3$co,_props$clientData3$co2,_props$clientData4,_props$clientData4$co,_props$clientData4$co2,_memorandum$current,_corpAddressRef$curre,_certificateRef$curre,_additionalRef$curren,_backSideRef$current,_requiredPassportRef$;let{errors,touched,values,setFieldValue}=_ref;return/*#__PURE__*/_jsxs(ReactStrapForm,{tag:FormikForm,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"typeOfDocument\",children:props.t(\"Type of document\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:true,onChange:e=>{setDocType(e.target.value);setFieldValue(\"typeOfDocument\",e.target.value);// eslint-disable-next-line\nif(e.target.value===\"Additional\"||\"corpAddress\"){setFieldValue(\"proofOfId\",\"\");setSecondSelect(\"ID\");}},id:\"typeOfDocument\",type:\"select\",name:\"typeOfDocument\",value:docType,children:[!memorandumUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"memorandum\",children:props.t(\"Memorandum of Association\")}),!certificateUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"certificate\",children:props.t(\"Certificate of Incorporation\")}),!corpAddressUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"corpAddress\",children:props.t(\"Corporate Address\")}),(!authIdUploaded||!allShareholdersIdsUploaded)&&/*#__PURE__*/_jsx(\"option\",{value:\"ID\",children:props.t(\"Proof of ID\")}),(!authAddressUploaded||!allShareholdersAddressesUploaded)&&/*#__PURE__*/_jsx(\"option\",{value:\"address\",children:props.t(\"Proof of Address\")}),/*#__PURE__*/_jsx(\"option\",{value:\"Additional\",children:\"Additional\"})]})]}),docType===\"memorandum\"&&!memorandumUploaded&&/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"memorandum\",children:props.t(\"Memorandum of Association\")}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control form-control-lg\",id:\"memorandum\",onChange:e=>{addFile(\"MEMORANDUM\",e.target.files[0]);setFieldValue(\"memorandum\",e.target.files[0]);},name:\"memorandum\",innerRef:memorandum,invalid:errors.memorandum&&touched.memorandum}),(errors===null||errors===void 0?void 0:errors.memorandum)&&touched.memorandum&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.memorandum})]})}),docType===\"corpAddress\"&&!corpAddressUploaded&&/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"corpAddress\",children:props.t(\"Corporate Address\")}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control form-control-lg\",id:\"corpAddress\",onChange:e=>{addFile(\"CORPORATE_ADDRESS\",e.target.files[0]);setFieldValue(\"corpAddress\",e.target.files[0]);},name:\"corpAddress\",innerRef:corpAddressRef,invalid:errors.corpAddress&&touched.corpAddress}),(errors===null||errors===void 0?void 0:errors.corpAddress)&&touched.corpAddress&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.corpAddress})]})}),docType===\"certificate\"&&!certificateUploaded&&/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"certificate\",children:props.t(\"Certificate of Incorporation\")}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control form-control-lg\",id:\"certificate\",onChange:e=>{addFile(\"CERTIFICATE\",e.target.files[0]);setFieldValue(\"certificate\",e.target.files[0]);},name:\"certificate\",innerRef:certificateRef,invalid:errors.certificate&&touched.certificate}),(errors===null||errors===void 0?void 0:errors.certificate)&&touched.certificate&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.certificate})]})}),docType===\"ID\"&&(!authIdUploaded||!allShareholdersIdsUploaded)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"proofOfId\",children:props.t(\"ID Type\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:docType===\"ID\",onChange:e=>{secondSelectChangeHandler(e);setFieldValue(\"proofOfId\",e.target.value);},id:\"proofOfId\",type:\"select\",name:\"proofOfId\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"ID\",children:props.t(\"ID\")}),/*#__PURE__*/_jsx(\"option\",{value:\"Passport\",children:props.t(\"Passport\")})]})]}),/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"personnel\",children:props.t(\"Personnel\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:docType===\"ID\",onChange:e=>{setPersonnel(e.target.value);setFieldValue(\"personnel\",e.target.value);},id:\"personnel\",type:\"select\",name:\"personnel\",value:personnel,children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"\",children:props.t(\"Select a Personnel\")}),!authIdUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"AUTHORIZED_PERSON\",children:props.t(\"Authorized Person\")}),!allShareholdersIdsUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"SHAREHOLDER\",children:props.t(\"Shareholder\")})]}),(errors===null||errors===void 0?void 0:errors.personnel)&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.personnel})]}),personnel===\"SHAREHOLDER\"&&/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"shareholder\",children:props.t(\"Shareholder\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:docType===\"ID\",onChange:e=>{setShareholderId(e.target.value);setFieldValue(\"shareholder\",e.target.value);},id:\"shareholder\",type:\"select\",name:\"shareholder\",value:shareholderId,children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"\",children:props.t(\"Select a shareholder\")}),(_props$clientData3=props.clientData)===null||_props$clientData3===void 0?void 0:(_props$clientData3$co=_props$clientData3.corporateInfo)===null||_props$clientData3$co===void 0?void 0:(_props$clientData3$co2=_props$clientData3$co.shareholders)===null||_props$clientData3$co2===void 0?void 0:_props$clientData3$co2.map((shareholder,index)=>!uploadedShareholderIds.includes(shareholder._id)&&/*#__PURE__*/_jsxs(\"option\",{value:shareholder._id,children:[shareholder.firstName,\" \",shareholder.lastName]},index))]})]})]}),docType===\"address\"&&(!authAddressUploaded||!allShareholdersAddressesUploaded)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"personnel\",children:props.t(\"Personnel\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:docType===\"ID\",onChange:e=>{setPersonnel(e.target.value);setFieldValue(\"personnel\",e.target.value);},id:\"personnel\",type:\"select\",name:\"personnel\",value:personnel,children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"\",children:props.t(\"Select a Personnel\")}),!authAddressUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"AUTHORIZED_PERSON\",children:props.t(\"Authorized Person\")}),/*#__PURE__*/_jsx(\"option\",{value:\"SHAREHOLDER\",children:props.t(\"Shareholder\")})]}),(errors===null||errors===void 0?void 0:errors.personnel)&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.personnel})]}),personnel===\"SHAREHOLDER\"&&/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"shareholder\",children:props.t(\"Shareholder\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:docType===\"address\",onChange:e=>{setShareholderId(e.target.value);setFieldValue(\"shareholder\",e.target.value);},id:\"shareholder\",type:\"select\",name:\"shareholder\",value:shareholderId,children:[/*#__PURE__*/_jsx(\"option\",{disabled:true,value:\"\",children:props.t(\"Select a shareholder\")}),(_props$clientData4=props.clientData)===null||_props$clientData4===void 0?void 0:(_props$clientData4$co=_props$clientData4.corporateInfo)===null||_props$clientData4$co===void 0?void 0:(_props$clientData4$co2=_props$clientData4$co.shareholders)===null||_props$clientData4$co2===void 0?void 0:_props$clientData4$co2.map((shareholder,index)=>!uploadedShareholderAddresses.includes(shareholder._id)&&/*#__PURE__*/_jsxs(\"option\",{value:shareholder._id,children:[shareholder.firstName,\" \",shareholder.lastName]},index))]})]}),/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"address\",children:props.t(\"Corporate Address\")}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control form-control-lg\",id:\"address\",onChange:e=>{addFile(\"ADDRESS\",e.target.files[0]);setFieldValue(\"address\",e.target.files[0]);},name:\"address\",innerRef:addressRef,invalid:errors.address&&touched.address}),(errors===null||errors===void 0?void 0:errors.address)&&touched.address&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.address})]})})]}),docType===\"Additional\"&&/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"Additional\",children:props.t(\"Additional document\")}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control form-control-lg\",id:\"Additional\",onChange:e=>{addFile(\"ADDITIONAL_DOCUMENTS\",e.target.files[0]);setFieldValue(\"Additional\",e.target.files[0]);},name:\"Additional\",innerRef:additionalRef,invalid:errors.Additional&&touched.Additional}),(errors===null||errors===void 0?void 0:errors.Additional)&&touched.Additional&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.Additional})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[docType===\"ID\"&&secondSelect===\"ID\"&&/*#__PURE__*/// TODO: when all ids approved\n// !authIdUploaded &&\n_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"frontSideId\",children:props.t(\"Proof of ID front side\")}),/*#__PURE__*/_jsx(Input,{innerRef:frontSideRef,type:\"file\",className:\"form-control\",id:\"frontSideId\",onChange:e=>{addFile(\"ID1\",e.target.files[0]);setFieldValue(\"frontSideId\",e.target.files[0]);},name:\"frontSideId\",invalid:errors.frontSideId&&touched.frontSideId// disabled={authIdUploaded}\n}),(errors===null||errors===void 0?void 0:errors.frontSideId)&&touched.frontSideId&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.frontSideId})]})})}),/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"backSideId\",children:props.t(\"Proof of ID back side\")}),/*#__PURE__*/_jsx(Input,{innerRef:backSideRef,type:\"file\",className:\"form-control\",id:\"backSideId\",onChange:e=>{addFile(\"ID2\",e.target.files[0]);setFieldValue(\"backSideId\",e.target.files[0]);},name:\"backSideId\",invalid:errors.backSideId&&touched.backSideId}),(errors===null||errors===void 0?void 0:errors.backSideId)&&touched.backSideId&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.backSideId})]})})]}),docType===\"ID\"&&secondSelect===\"Passport\"&&!authIdUploaded&&/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsxs(Label,{className:\"form-label\",htmlFor:\"proofOfPassport\",children:[props.t(\"Proof of Passport\"),\" (\",props.t(\"Required\"),\")\"]}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control\",id:\"proofOfPassport\",onChange:e=>{addFile(\"ID1\",e.target.files[0]);setFieldValue(\"proofOfPassport\",e.target.files[0]);},name:\"proofOfPassport\",innerRef:requiredPassportRef,invalid:errors.proofOfPassport&&touched.proofOfPassport}),(errors===null||errors===void 0?void 0:errors.proofOfPassport)&&touched.proofOfPassport&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.proofOfPassport})]})})}),/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Label,{className:\"form-label\",htmlFor:\"proofOfPassportOptional\",children:[props.t(\"Proof of Passport\"),\" (\",props.t(\"Optional\"),\")\"]}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control\",id:\"proofOfPassportOptional\",onChange:e=>{addFile(\"ID2\",e.target.files[0]);setFieldValue(\"proofOfPassportOptional\",e.target.files[0]);},name:\"proofOfPassportOptional\",innerRef:optionalPassportRef,invalid:errors.proofOfPassportOptional&&touched.proofOfPassportOptional}),(errors===null||errors===void 0?void 0:errors.proofOfPassportOptional)&&touched.proofOfPassportOptional&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.proofOfPassportOptional})]})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"text-end\",children:/*#__PURE__*/_jsx(Button,{className:\"border-0 color-bg-btn w-lg\",type:\"submit\",disabled:docType===\"memorandum\"&&!((_memorandum$current=memorandum.current)!==null&&_memorandum$current!==void 0&&_memorandum$current.value)||docType===\"corpAddress\"&&!((_corpAddressRef$curre=corpAddressRef.current)!==null&&_corpAddressRef$curre!==void 0&&_corpAddressRef$curre.value)||docType===\"certificate\"&&!((_certificateRef$curre=certificateRef.current)!==null&&_certificateRef$curre!==void 0&&_certificateRef$curre.value)||docType===\"Additional\"&&!((_additionalRef$curren=additionalRef.current)!==null&&_additionalRef$curren!==void 0&&_additionalRef$curren.value)||docType===\"ID\"&&secondSelect===\"ID\"&&!((_backSideRef$current=backSideRef.current)!==null&&_backSideRef$current!==void 0&&_backSideRef$current.value)||docType===\"ID\"&&secondSelect===\"Passport\"&&!((_requiredPassportRef$=requiredPassportRef.current)!==null&&_requiredPassportRef$!==void 0&&_requiredPassportRef$.value)||props.uploading,children:props.uploading&&props.uploadClear===0?/*#__PURE__*/_jsx(Spinner,{}):props.t(\"Submit\")})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-muted\",children:[\"(\",props.t(\"Maximum size of document 5MB\"),\") \",props.t(\"Allow File Formats\"),\" *jpg, *png, *pdf\"]})]});}})})})}),/*#__PURE__*/_jsx(Col,{lg:3,children:/*#__PURE__*/_jsx(CardWrapper,{className:\"h-100 glass-card shadow\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"kyc-requirements\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"fw-bold color-primary\",children:props.t(\"KYC Requirements\")}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 color-primary\",children:props.t(\"Corporate Status\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"proofs-container w-100\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-2 w-100 border mt-1\",disabled:(_props$documents3=props.documents)===null||_props$documents3===void 0?void 0:_props$documents3.find(x=>x.type===\"MEMORANDUM\"),onClick:()=>setDocType(\"memorandum\"),style:{boxShadow:memorandumUploaded?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",cursor:memorandumUploaded?\"not-allowed\":\"pointer\"},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Memoradum of Association\")]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-2 w-100 border mt-2\",disabled:(_props$documents4=props.documents)===null||_props$documents4===void 0?void 0:_props$documents4.find(x=>x.type===\"CERTIFICATE_OF_INCORPORATION\"),onClick:()=>setDocType(\"corpAddress\"),style:{boxShadow:certificateUploaded?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",cursor:certificateUploaded?\"not-allowed\":\"pointer\"},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Certificate of Incorporation\")]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-2 w-100 border mt-2\",disabled:(_props$documents5=props.documents)===null||_props$documents5===void 0?void 0:_props$documents5.find(x=>x.type===\"CORPORATE_ADDRESS\"),onClick:()=>setDocType(\"corpAddress\"),style:{boxShadow:corpAddressUploaded?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",cursor:corpAddressUploaded?\"not-allowed\":\"pointer\"},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Corporate Address\")]}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 color-primary\",children:props.t(\"Corporate Personnel Status\")}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 color-primary\",children:props.t(\"Authorized Person\")}),/*#__PURE__*/_jsxs(\"p\",{children:[(_props$clientData$cor3=props.clientData.corporateInfo)===null||_props$clientData$cor3===void 0?void 0:(_props$clientData$cor4=_props$clientData$cor3.authorizedPerson)===null||_props$clientData$cor4===void 0?void 0:_props$clientData$cor4.firstName,\" \",(_props$clientData$cor5=props.clientData.corporateInfo)===null||_props$clientData$cor5===void 0?void 0:(_props$clientData$cor6=_props$clientData$cor5.authorizedPerson)===null||_props$clientData$cor6===void 0?void 0:_props$clientData$cor6.lastName]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-2 border-bottom w-100 border mt-1\",style:{boxShadow:authIdUploaded?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",cursor:authIdUploaded?\"not-allowed\":\"pointer\"},disabled:(_props$documents6=props.documents)===null||_props$documents6===void 0?void 0:_props$documents6.find(x=>x.type===\"ID\"&&x.subType===\"AUTHORIZED_PERSON\"),onClick:()=>{setDocType(\"ID\");setPersonnel(\"AUTHORIZED_PERSON\");},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Proof of ID\")]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-2 border-bottom w-100 border mt-1\",style:{boxShadow:authIdUploaded?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",cursor:authIdUploaded?\"not-allowed\":\"pointer\"},disabled:(_props$documents7=props.documents)===null||_props$documents7===void 0?void 0:_props$documents7.find(x=>x.type===\"ADDRESS\"&&x.subType===\"AUTHORIZED_PERSON\"),onClick:()=>{setDocType(\"address\");setPersonnel(\"AUTHORIZED_PERSON\");},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Proof of Address\")]}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-3 color-primary\",children:props.t(\"Shareholders\")}),props.clientData.corporateInfo.shareholders&&props.clientData.corporateInfo.shareholders.map((shareholder,index)=>{var _props$documents8,_props$documents9,_props$documents0;return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mt-1 mb-2\",children:[shareholder.firstName,\" \",shareholder.lastName]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-2 border-bottom w-100 border\",style:{boxShadow:(_props$documents8=props.documents)!==null&&_props$documents8!==void 0&&_props$documents8.find(x=>x.type===\"ID\"&&x.subType===\"SHAREHOLDER\"&&x.shareholderId===shareholder._id)?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\"},disabled:(_props$documents9=props.documents)===null||_props$documents9===void 0?void 0:_props$documents9.find(x=>x.type===\"ID\"&&x.subType===\"SHAREHOLDER\"&&x.shareholderId===shareholder._id),onClick:()=>{setDocType(\"ID\");setPersonnel(\"SHAREHOLDER\");setShareholderId(shareholder._id);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Proof of ID\")]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-2 border-bottom w-100 border mt-1 mb-2\",style:{boxShadow:uploadedShareholderAddresses.includes(shareholder._id)?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\"},disabled:(_props$documents0=props.documents)===null||_props$documents0===void 0?void 0:_props$documents0.find(x=>x.type===\"ADDRESS\"&&x.subType===\"SHAREHOLDER\"&&x.shareholderId===shareholder._id),onClick:()=>{setDocType(\"address\");setPersonnel(\"SHAREHOLDER\");setShareholderId(shareholder._id);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Proof of Address\")]})]},index);})]})]})})})]})});}const mapStateToProps=state=>({uploadClear:state.documents.uploadClear,documents:state.documents.documents,clientData:state.Profile.clientData,uploading:state.documents.uploading,uploadError:state.documents.uploadError,uploadSuccessMessage:state.documents.uploadSuccessMessage});export default connect(mapStateToProps,null)(withTranslation()(DocumentCorpUpload));","map":{"version":3,"names":["React","useState","useEffect","useRef","Fragment","useDispatch","connect","Button","Col","Container","Row","Form","ReactStrapForm","Label","Input","FormGroup","Spinner","Formik","FormikForm","Yup","withTranslation","CardWrapper","uploadDocsStart","jsx","_jsx","jsxs","_jsxs","_Fragment","DocumentCorpUpload","props","_props$documents3","_props$documents4","_props$documents5","_props$clientData$cor3","_props$clientData$cor4","_props$clientData$cor5","_props$clientData$cor6","_props$documents6","_props$documents7","dispatch","memorandum","corpAddressRef","certificateRef","addressRef","frontSideRef","backSideRef","requiredPassportRef","optionalPassportRef","additionalRef","documentNumberRef","issueDateRef","expiryDateRef","memFiles","setMemFiles","memorandumUploaded","setMemorandumUploaded","corpAddressUploaded","setCorpAddressUploaded","certificateUploaded","setCertificateUploaded","authAddressUploaded","setAuthAddressUploaded","authIdUploaded","setAuthIdUploaded","option","setOption","docType","setDocType","secondSelect","setSecondSelect","personnel","setPersonnel","shareholderId","setShareholderId","uploadedShareholderIds","setUploadedShareholderIds","allShareholdersIdsUploaded","setAllShareholdersIdsUploaded","uploadedShareholderAddresses","setUploadedShareholderAddresses","allShareholdersAddressesUploaded","setAllShareholdersAddressesUploaded","initialValues","typeOfDocument","proofOfId","maxFileSize","acceptedExtensions","fileSizeError","fileExtensionError","addFile","name","files","size","_objectSpread","validationSchema","object","shape","mixed","test","value","includes","type","when","is","then","required","corpAddress","certificate","frontSideId","backSideId","address","proofOfPassport","proofOfPassportOptional","Additional","_props$documents","documents","length","memorandumFound","find","x","status","corpAddressFound","certificateFound","authIdFound","subType","authAddressFound","map","item","_props$documents2","_props$clientData","_props$clientData$cor","_props$clientData$cor2","_props$clientData2","_props$clientData2$co","_props$clientData2$co2","shareholderIds","clientData","corporateInfo","shareholders","shareholder","_id","shareholderIdsFound","filter","shareholderAddresses","shareholderAddressesFound","uploadDoc","formData","FormData","append","error","secondSelectChangeHandler","e","target","resetForm","current","testArray","newOptions","children","lg","className","onSubmit","values","countryOfIssue","_ref","_props$clientData3","_props$clientData3$co","_props$clientData3$co2","_props$clientData4","_props$clientData4$co","_props$clientData4$co2","_memorandum$current","_corpAddressRef$curre","_certificateRef$curre","_additionalRef$curren","_backSideRef$current","_requiredPassportRef$","errors","touched","setFieldValue","tag","xs","for","t","onChange","id","htmlFor","innerRef","invalid","style","disabled","index","firstName","lastName","uploading","uploadClear","onClick","boxShadow","cursor","authorizedPerson","_props$documents8","_props$documents9","_props$documents0","mapStateToProps","state","Profile","uploadError","uploadSuccessMessage"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/pages/Documents/DocumentsCorpUpload.js"],"sourcesContent":["import React, {\n  useState, useEffect, useRef, Fragment\n} from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Form as ReactStrapForm,\n  Label,\n  Input,\n  FormGroup,\n  Spinner\n} from \"reactstrap\";\nimport {\n  Formik,\n  Form as FormikForm\n} from \"formik\";\nimport * as Yup from \"yup\";\n\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport CardWrapper from \"../../components/Common/CardWrapper\";\nimport { uploadDocsStart } from \"../../store/general/documents/actions\";\n\nfunction DocumentCorpUpload(props) {\n  const dispatch = useDispatch();\n  const memorandum = useRef();\n  const corpAddressRef = useRef();\n  const certificateRef = useRef();\n  const addressRef = useRef();\n  const frontSideRef = useRef();\n  const backSideRef = useRef();\n  const requiredPassportRef = useRef();\n  const optionalPassportRef = useRef();\n  const additionalRef = useRef();\n  const documentNumberRef = useRef();\n  const issueDateRef = useRef();\n  const expiryDateRef = useRef();\n  const [memFiles, setMemFiles] = useState({});\n  const [memorandumUploaded, setMemorandumUploaded] = useState(false);\n  const [corpAddressUploaded, setCorpAddressUploaded] = useState(false);\n  const [certificateUploaded, setCertificateUploaded] = useState(false);\n  const [authAddressUploaded, setAuthAddressUploaded] = useState(false);\n  const [authIdUploaded, setAuthIdUploaded] = useState(false);\n  const [option, setOption] = useState([]);\n  const [docType, setDocType] = useState(option[0]);\n  const [secondSelect, setSecondSelect] = useState(\"ID\");\n  const [personnel, setPersonnel] = useState(\"\");\n  const [shareholderId, setShareholderId] = useState(\"\");\n  const [uploadedShareholderIds, setUploadedShareholderIds] = useState([]);\n  const [allShareholdersIdsUploaded, setAllShareholdersIdsUploaded] = useState(false);\n  const [uploadedShareholderAddresses, setUploadedShareholderAddresses] = useState([]);\n  const [allShareholdersAddressesUploaded, setAllShareholdersAddressesUploaded] = useState(false);\n\n  const initialValues = {\n    typeOfDocument: \"\",\n    proofOfId: \"ID\",\n  };\n\n  // max file size to uplaod = 5 MB\n  const maxFileSize = 5;\n  const acceptedExtensions = [\"image/jpeg\", \"image/png\", \"application/pdf\"];\n  const fileSizeError = \"File is too large, It has to be 5MB at most\";\n  const fileExtensionError = \"Only accepts files with the following extensions *jpg, *png, *pdf\";\n\n  const addFile = (name, files) => {\n    if ((files?.size / 1000000) <= maxFileSize) {\n      setMemFiles({\n        ...memFiles,\n        [name]: files,\n      });\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    memorandum: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"memorandum\",\n      then: Yup.mixed().required(\"Memorandum of Association is required\")\n    }),\n\n    corpAddress: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"corpAddress\",\n      then: Yup.mixed().required(\"Corporate Address is required\")\n    }),\n\n    certificate: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"certificate\",\n      then: Yup.mixed().required(\"Certificate of Incorporation is required\")\n    }),\n\n    frontSideId: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"ID\",\n      then: Yup.mixed().required(\"Front side id is required\")\n    }),\n\n    backSideId: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"ID\",\n      then: Yup.mixed().required(\"Back side id is required\")\n    }),\n\n    address: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"address\",\n      then: Yup.mixed().required(\"Address is required\")\n    }),\n\n\n    proofOfPassport: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"proofOfId\", {\n      is: \"Passport\",\n      then: Yup.mixed().required(\"Passport is required\")\n    }),\n\n    proofOfPassportOptional: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }),\n\n    Additional: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value) {\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value) {\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"Additional\",\n      then: Yup.mixed().required(\"Additional file is required\")\n    }),\n  });\n\n  useEffect(() => {\n    if (props.documents?.length > 0) {\n      const { documents } = props;\n      const memorandumFound = documents.find((x) => (x.type === \"MEMORANDUM\" && x.status === \"APPROVED\"));\n      const corpAddressFound = documents.find((x) => (x.type === \"CORPORATE_ADDRESS\" && x.status === \"APPROVED\"));\n      const certificateFound = documents.find((x) => (x.type === \"CERTIFICATE_OF_INCORPORATION\" && x.status === \"APPROVED\"));\n      const authIdFound = documents.find((x) => (x.type === \"ID\" && x.subType === \"AUTHORIZED_PERSON\" && x.status === \"APPROVED\"));\n      const authAddressFound = documents.find((x) => (x.type === \"ADDRESS\" && x.subType === \"AUTHORIZED_PERSON\" && x.status === \"APPROVED\"));\n      if (memorandumFound) setMemorandumUploaded(true);\n      if (corpAddressFound) setCorpAddressUploaded(true);\n      if (certificateFound) setCertificateUploaded(true);\n      if (authIdFound) setAuthIdUploaded(true);\n      if (authAddressFound) setAuthAddressUploaded(true);\n    }\n  }, [props.documents, props.documents.map((item) => (item.status))]);\n\n  useEffect(() => {\n    if (props.documents?.length > 0) {\n      const { documents } = props;\n\n      const shareholderIds = props.clientData?.corporateInfo?.shareholders?.map(shareholder => shareholder._id) || [];\n      const shareholderIdsFound = documents\n        .filter(x => x.type === \"ID\" && x.subType === \"SHAREHOLDER\" && x.status === \"APPROVED\" && shareholderIds.includes(x.shareholderId))\n        .map(x => x.shareholderId);\n      setAllShareholdersIdsUploaded(shareholderIdsFound.length === shareholderIds.length);\n      setUploadedShareholderIds(shareholderIdsFound);\n\n      const shareholderAddresses = props.clientData?.corporateInfo?.shareholders?.map(shareholder => shareholder._id) || [];\n      const shareholderAddressesFound = documents\n        .filter(x => x.type === \"ADDRESS\" && x.subType === \"SHAREHOLDER\" && x.status === \"APPROVED\" && shareholderIds.includes(x.shareholderId))\n        .map(x => x.shareholderId);\n      setAllShareholdersAddressesUploaded(shareholderAddressesFound.length === shareholderAddresses.length);\n      setUploadedShareholderAddresses(shareholderAddressesFound);\n    }\n  }, [props.documents, props.clientData]);\n\n  const uploadDoc = async () => {\n    try {\n      var formData = new FormData();\n      switch (docType) {\n        case \"memorandum\":\n          formData.append(\"type\", \"MEMORANDUM\"); // type saved in db\n          formData.append(\"images\", memFiles[\"MEMORANDUM\"]);\n          break;\n        case \"corpAddress\":\n          formData.append(\"type\", \"CORPORATE_ADDRESS\");\n          formData.append(\"images\", memFiles[\"CORPORATE_ADDRESS\"]);\n          break;\n        case \"certificate\":\n          formData.append(\"type\", \"CERTIFICATE_OF_INCORPORATION\");\n          formData.append(\"images\", memFiles[\"CERTIFICATE\"]);\n          break;\n        case \"ID\":\n          formData.append(\"type\", \"ID\");\n          formData.append(\"images\", memFiles[\"ID1\"]);\n          formData.append(\"subType\", personnel);\n          if (personnel === \"SHAREHOLDER\") {\n            formData.append(\"shareholderId\", shareholderId);\n          }\n          if (memFiles[\"ID2\"]) {\n            formData.append(\"images\", memFiles[\"ID2\"]);\n          }\n          break;\n        case \"address\":\n          formData.append(\"type\", \"ADDRESS\");\n          formData.append(\"subType\", personnel);\n          if (personnel === \"SHAREHOLDER\") {\n            formData.append(\"shareholderId\", shareholderId);\n          }\n          formData.append(\"images\", memFiles[\"ADDRESS\"]);\n          break;\n        case \"Additional\":\n          formData.append(\"type\", \"ADDITIONAL_DOCUMENTS\");\n          formData.append(\"images\", memFiles[\"ADDITIONAL_DOCUMENTS\"]);\n          break;\n      }\n      dispatch(uploadDocsStart(formData));\n    } catch (error) {\n    }\n  };\n\n  const secondSelectChangeHandler = (e) => {\n    let value = e.target.value;\n    setSecondSelect(value);\n  };\n\n  const resetForm = () => {\n    setMemFiles({});\n    memorandum.current ? memorandum.current.value = \"\" : memorandum.current = \"\";\n    corpAddressRef.current ? corpAddressRef.current.value = \"\" : corpAddressRef.current = \"\";\n    certificateRef.current ? certificateRef.current.value = \"\" : certificateRef.current = \"\";\n    frontSideRef.current ? frontSideRef.current.value = \"\" : frontSideRef.current = \"\";\n    backSideRef.current ? backSideRef.current.value = \"\" : backSideRef.current = \"\";\n    addressRef.current ? addressRef.current.value = \"\" : addressRef.current = \"\";\n    requiredPassportRef.current ? requiredPassportRef.current.value = \"\" : requiredPassportRef.current = \"\";\n    optionalPassportRef.current ? optionalPassportRef.current.value = \"\" : optionalPassportRef.current = \"\";\n    additionalRef.current ? additionalRef.current.value = \"\" : additionalRef.current = \"\";\n    documentNumberRef.current ? documentNumberRef.current.value = \"\" : documentNumberRef.current = \"\";\n    issueDateRef.current ? issueDateRef.current.value = \"\" : issueDateRef.current = \"\";\n    expiryDateRef.current ? expiryDateRef.current.value = \"\" : expiryDateRef.current = \"\";\n  };\n\n  useEffect(() => {\n    const testArray = [\n      !memorandumUploaded && \"memorandum\",\n      !corpAddressUploaded && \"corpAddress\",\n      !certificateUploaded && \"certificate\",\n      // !authIdUploaded && \"ID\",\n      \"Additional\"\n    ];\n    const newOptions = testArray.filter((option) => option !== false);\n    setOption(newOptions);\n    setDocType(newOptions[0]);\n\n  }, [authIdUploaded, corpAddressUploaded, certificateUploaded, memorandumUploaded]);\n\n  return (\n    <Container>\n      <Row>\n        <Col lg={9}>\n          <CardWrapper className=\"h-100 glass-card shadow\">\n            <Container>\n              <Formik\n                validationSchema={validationSchema}\n                initialValues={initialValues}\n                onSubmit={(values) => {\n                  if (values.countryOfIssue === \"None\") {\n                    delete values.countryOfIssue;\n                  }\n                  delete values.memorandum;\n                  delete values.corpAddress;\n                  delete values.address;\n                  delete values.certificate;\n                  delete values.typeOfDocument;\n                  delete values.proofOfId;\n                  delete values.proofOfPassport;\n                  delete values.Additional;\n                  delete values.proofOfPassportOptional;\n                  uploadDoc(values);\n                  resetForm();\n                }}\n              >\n                {({ errors, touched, values, setFieldValue }) => (\n                  <ReactStrapForm\n                    tag={FormikForm}\n                  >\n                    <Row>\n                      <Col xs={12} lg={6}>\n                        <Label\n                          className=\"form-label\"\n                          for=\"typeOfDocument\"\n                        >\n                          {props.t(\"Type of document\")}\n                        </Label>\n                        <Input\n                          className=\"form-select form-select-lg\"\n                          required={true}\n                          onChange={(e) => {\n                            setDocType(e.target.value);\n                            setFieldValue(\"typeOfDocument\", e.target.value);\n                            // eslint-disable-next-line\n                            if (e.target.value === \"Additional\" || \"corpAddress\") {\n                              setFieldValue(\"proofOfId\", \"\");\n                              setSecondSelect(\"ID\");\n                            }\n                          }}\n                          id=\"typeOfDocument\"\n                          type=\"select\"\n                          name=\"typeOfDocument\"\n                          value={docType}\n                        >\n                          {!memorandumUploaded && <option value=\"memorandum\">{props.t(\"Memorandum of Association\")}</option>}\n                          {!certificateUploaded && <option value=\"certificate\">{props.t(\"Certificate of Incorporation\")}</option>}\n                          {!corpAddressUploaded && <option value=\"corpAddress\">{props.t(\"Corporate Address\")}</option>}\n                          {(!authIdUploaded || !allShareholdersIdsUploaded) && <option value=\"ID\">{props.t(\"Proof of ID\")}</option>}\n                          {(!authAddressUploaded || !allShareholdersAddressesUploaded) && <option value=\"address\">{props.t(\"Proof of Address\")}</option>}\n                          <option value=\"Additional\">Additional</option>\n                        </Input>\n                      </Col>\n                      {\n                        docType === \"memorandum\" &&\n                        !memorandumUploaded &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"memorandum\">\n                              {props.t(\"Memorandum of Association\")}\n                            </Label>\n                            <Input\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"memorandum\"\n                              onChange={(e) => {\n                                addFile(\"MEMORANDUM\", e.target.files[0]);\n                                setFieldValue(\"memorandum\", e.target.files[0]);\n                              }}\n                              name=\"memorandum\"\n                              innerRef={memorandum}\n                              invalid={errors.memorandum && touched.memorandum}\n                            />\n                            {\n                              errors?.memorandum &&\n                              touched.memorandum &&\n                              <label style={{ \"color\": \"red\" }}>{errors.memorandum}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        docType === \"corpAddress\" &&\n                        !corpAddressUploaded &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"corpAddress\">\n                              {props.t(\"Corporate Address\")}\n                            </Label>\n                            <Input\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"corpAddress\"\n                              onChange={(e) => {\n                                addFile(\"CORPORATE_ADDRESS\", e.target.files[0]);\n                                setFieldValue(\"corpAddress\", e.target.files[0]);\n                              }}\n                              name=\"corpAddress\"\n                              innerRef={corpAddressRef}\n                              invalid={errors.corpAddress && touched.corpAddress}\n                            />\n                            {\n                              errors?.corpAddress &&\n                              touched.corpAddress &&\n                              <label style={{ \"color\": \"red\" }}>{errors.corpAddress}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        docType === \"certificate\" &&\n                        !certificateUploaded &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"certificate\">\n                              {props.t(\"Certificate of Incorporation\")}\n                            </Label>\n                            <Input\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"certificate\"\n                              onChange={(e) => {\n                                addFile(\"CERTIFICATE\", e.target.files[0]);\n                                setFieldValue(\"certificate\", e.target.files[0]);\n                              }}\n                              name=\"certificate\"\n                              innerRef={certificateRef}\n                              invalid={errors.certificate && touched.certificate}\n                            />\n                            {\n                              errors?.certificate &&\n                              touched.certificate &&\n                              <label style={{ \"color\": \"red\" }}>{errors.certificate}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        docType === \"ID\" &&\n                        (!authIdUploaded ||\n                          !allShareholdersIdsUploaded) &&\n                        <>\n                          <Col xs={12} lg={6}>\n                            <Label className=\"form-label\" for=\"proofOfId\">{props.t(\"ID Type\")}</Label>\n                            <Input\n                              className=\"form-select form-select-lg\"\n                              required={docType === \"ID\"}\n                              onChange={(e) => {\n                                secondSelectChangeHandler(e);\n                                setFieldValue(\"proofOfId\", e.target.value);\n                              }}\n                              id=\"proofOfId\"\n                              type=\"select\"\n                              name=\"proofOfId\"\n                            >\n                              <option value=\"ID\">{props.t(\"ID\")}</option>\n                              <option value=\"Passport\">{props.t(\"Passport\")}</option>\n                            </Input>\n                          </Col>\n                          <Col xs={12} lg={6}>\n                            <Label className=\"form-label\" for=\"personnel\">{props.t(\"Personnel\")}</Label>\n                            <Input\n                              className=\"form-select form-select-lg\"\n                              required={docType === \"ID\"}\n                              onChange={(e) => {\n                                setPersonnel(e.target.value);\n                                setFieldValue(\"personnel\", e.target.value);\n                              }}\n                              id=\"personnel\"\n                              type=\"select\"\n                              name=\"personnel\"\n                              value={personnel}\n                            >\n                              <option disabled value=\"\">\n                                {props.t(\"Select a Personnel\")}\n                              </option>\n                              {!authIdUploaded && <option value=\"AUTHORIZED_PERSON\">{props.t(\"Authorized Person\")}</option>}\n                              {!allShareholdersIdsUploaded && <option value=\"SHAREHOLDER\">{props.t(\"Shareholder\")}</option>}\n                            </Input>\n                            {\n                              errors?.personnel &&\n                              <label style={{ \"color\": \"red\" }}>{errors.personnel}</label>\n                            }\n                          </Col>\n                          {\n                            personnel === \"SHAREHOLDER\" &&\n                            <Col xs={12} lg={6}>\n                              <Label className=\"form-label\" for=\"shareholder\">{props.t(\"Shareholder\")}</Label>\n                              <Input\n                                className=\"form-select form-select-lg\"\n                                required={docType === \"ID\"}\n                                onChange={(e) => {\n                                  setShareholderId(e.target.value);\n                                  setFieldValue(\"shareholder\", e.target.value);\n                                }\n                                }\n                                id=\"shareholder\"\n                                type=\"select\"\n                                name=\"shareholder\"\n                                value={shareholderId}\n                              >\n                                <option disabled value=\"\">\n                                  {props.t(\"Select a shareholder\")}\n                                </option>\n                                {\n                                  props.clientData?.corporateInfo?.shareholders?.map((shareholder, index) => (\n                                    !uploadedShareholderIds.includes(shareholder._id) &&\n                                    <option key={index} value={shareholder._id}>{shareholder.firstName} {shareholder.lastName}</option>\n                                  ))\n                                }\n                              </Input>\n                            </Col>\n                          }\n                        </>\n                      }\n                      {\n                        docType === \"address\" &&\n                        (!authAddressUploaded ||\n                          !allShareholdersAddressesUploaded) &&\n\n                        <>\n                          <Col xs={12} lg={6}>\n                            <Label className=\"form-label\" for=\"personnel\">{props.t(\"Personnel\")}</Label>\n                            <Input\n                              className=\"form-select form-select-lg\"\n                              required={docType === \"ID\"}\n                              onChange={(e) => {\n                                setPersonnel(e.target.value);\n                                setFieldValue(\"personnel\", e.target.value);\n                              }}\n                              id=\"personnel\"\n                              type=\"select\"\n                              name=\"personnel\"\n                              value={personnel}\n                            >\n                              <option disabled value=\"\">\n                                {props.t(\"Select a Personnel\")}\n                              </option>\n                              {!authAddressUploaded && <option value=\"AUTHORIZED_PERSON\">{props.t(\"Authorized Person\")}</option>}\n                              <option value=\"SHAREHOLDER\">{props.t(\"Shareholder\")}</option>\n                            </Input>\n                            {\n                              errors?.personnel &&\n                              <label style={{ \"color\": \"red\" }}>{errors.personnel}</label>\n                            }\n                          </Col>\n                          {\n                            personnel === \"SHAREHOLDER\" &&\n                            <Col xs={12} lg={6}>\n                              <Label className=\"form-label\" for=\"shareholder\">{props.t(\"Shareholder\")}</Label>\n                              <Input\n                                className=\"form-select form-select-lg\"\n                                required={docType === \"address\"}\n                                onChange={(e) => {\n                                  setShareholderId(e.target.value);\n                                  setFieldValue(\"shareholder\", e.target.value);\n                                }\n                                }\n                                id=\"shareholder\"\n                                type=\"select\"\n                                name=\"shareholder\"\n                                value={shareholderId}\n                              >\n                                <option disabled value=\"\">\n                                  {props.t(\"Select a shareholder\")}\n                                </option>\n                                {\n                                  props.clientData?.corporateInfo?.shareholders?.map((shareholder, index) => (\n                                    !uploadedShareholderAddresses.includes(shareholder._id) &&\n                                    <option key={index} value={shareholder._id}>{shareholder.firstName} {shareholder.lastName}</option>\n                                  ))\n                                }\n                              </Input>\n                            </Col>\n                          }\n\n                          <Col xs={12} lg={6}>\n                            <div className=\"mb-3\">\n                              <Label className=\"form-label\" htmlFor=\"address\">\n                                {props.t(\"Corporate Address\")}\n                              </Label>\n                              <Input\n                                type=\"file\"\n                                className=\"form-control form-control-lg\"\n                                id=\"address\"\n                                onChange={(e) => {\n                                  addFile(\"ADDRESS\", e.target.files[0]);\n                                  setFieldValue(\"address\", e.target.files[0]);\n                                }}\n                                name=\"address\"\n                                innerRef={addressRef}\n                                invalid={errors.address && touched.address}\n                              />\n                              {\n                                errors?.address &&\n                                touched.address &&\n                                <label style={{ \"color\": \"red\" }}>{errors.address}</label>\n                              }\n                            </div>\n                          </Col>\n                        </>\n                      }\n                      {\n                        docType === \"Additional\" &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"Additional\">\n                              {props.t(\"Additional document\")}\n                            </Label>\n                            <Input\n\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"Additional\"\n                              onChange={(e) => {\n                                addFile(\"ADDITIONAL_DOCUMENTS\", e.target.files[0]);\n                                setFieldValue(\"Additional\", e.target.files[0]);\n                              }}\n                              name=\"Additional\"\n                              innerRef={additionalRef}\n                              invalid={errors.Additional && touched.Additional}\n                            />\n                            {\n                              errors?.Additional &&\n                              touched.Additional &&\n                              <label style={{ \"color\": \"red\" }}>{errors.Additional}</label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        <div className=\"mt-4\">\n                          {\n                            docType === \"ID\" &&\n                            secondSelect === \"ID\" &&\n                            // TODO: when all ids approved\n                            // !authIdUploaded &&\n                            <Row>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <FormGroup>\n                                    <Label className=\"form-label\" htmlFor=\"frontSideId\">{props.t(\"Proof of ID front side\")}</Label>\n                                    <Input\n\n                                      innerRef={frontSideRef}\n                                      type=\"file\"\n                                      className=\"form-control\"\n                                      id=\"frontSideId\"\n                                      onChange={(e) => {\n                                        addFile(\"ID1\", e.target.files[0]);\n                                        setFieldValue(\"frontSideId\", e.target.files[0]);\n                                      }}\n                                      name=\"frontSideId\"\n                                      invalid={errors.frontSideId && touched.frontSideId}\n                                    // disabled={authIdUploaded}\n                                    />\n                                    {\n                                      errors?.frontSideId &&\n                                      touched.frontSideId &&\n                                      <label style={{ \"color\": \"red\" }}>{errors.frontSideId}</label>\n                                    }\n                                  </FormGroup>\n                                </div>\n                              </Col>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <Label className=\"form-label\" htmlFor=\"backSideId\">{\n                                    props.t(\"Proof of ID back side\")}\n                                  </Label>\n                                  <Input\n\n                                    innerRef={backSideRef}\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    id=\"backSideId\"\n                                    onChange={(e) => {\n                                      addFile(\"ID2\", e.target.files[0]);\n                                      setFieldValue(\"backSideId\", e.target.files[0]);\n                                    }}\n                                    name=\"backSideId\"\n                                    invalid={errors.backSideId && touched.backSideId}\n                                  />\n                                  {\n                                    errors?.backSideId &&\n                                    touched.backSideId &&\n                                    <label style={{ \"color\": \"red\" }}>{errors.backSideId}</label>\n                                  }\n                                </div>\n                              </Col>\n                            </Row>\n                          }\n                          {\n                            docType === \"ID\" &&\n                            secondSelect === \"Passport\" &&\n                            !authIdUploaded &&\n                            <Row>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <FormGroup>\n                                    <Label className=\"form-label\" htmlFor=\"proofOfPassport\">\n                                      {props.t(\"Proof of Passport\")} ({props.t(\"Required\")})\n                                    </Label>\n                                    <Input\n\n                                      type=\"file\"\n                                      className=\"form-control\"\n                                      id=\"proofOfPassport\"\n                                      onChange={(e) => {\n                                        addFile(\"ID1\", e.target.files[0]);\n                                        setFieldValue(\"proofOfPassport\", e.target.files[0]);\n                                      }}\n                                      name=\"proofOfPassport\"\n                                      innerRef={requiredPassportRef}\n                                      invalid={errors.proofOfPassport && touched.proofOfPassport}\n                                    />\n                                    {\n                                      errors?.proofOfPassport &&\n                                      touched.proofOfPassport &&\n                                      <label\n                                        style={{ \"color\": \"red\" }}>{errors.proofOfPassport}</label>\n                                    }\n                                  </FormGroup>\n                                </div>\n                              </Col>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <Label className=\"form-label\" htmlFor=\"proofOfPassportOptional\">\n                                    {props.t(\"Proof of Passport\")} ({props.t(\"Optional\")})\n                                  </Label>\n                                  <Input\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    id=\"proofOfPassportOptional\"\n                                    onChange={(e) => {\n                                      addFile(\"ID2\", e.target.files[0]);\n                                      setFieldValue(\"proofOfPassportOptional\", e.target.files[0]);\n                                    }}\n                                    name=\"proofOfPassportOptional\"\n                                    innerRef={optionalPassportRef}\n                                    invalid={errors.proofOfPassportOptional && touched.proofOfPassportOptional}\n                                  />\n                                  {\n                                    errors?.proofOfPassportOptional &&\n                                    touched.proofOfPassportOptional &&\n                                    <label style={{ \"color\": \"red\" }}>{errors.proofOfPassportOptional}</label>\n                                  }\n                                </div>\n                              </Col>\n                            </Row>\n                          }\n                        </div>\n                      }\n                    </Row>\n                    <div>\n                    </div>\n                    <div className=\"text-end\">\n                      <Button\n                        className=\"border-0 color-bg-btn w-lg\"\n                        type=\"submit\"\n                        disabled={\n                          docType === \"memorandum\" &&\n                          !memorandum.current?.value\n                          ||\n                          docType === \"corpAddress\" &&\n                          !corpAddressRef.current?.value\n                          ||\n                          docType === \"certificate\" &&\n                          !certificateRef.current?.value\n                          ||\n                          docType === \"Additional\" &&\n                          !additionalRef.current?.value\n                          ||\n                          docType === \"ID\" &&\n                          secondSelect === \"ID\" &&\n                          !backSideRef.current?.value\n                          ||\n                          docType === \"ID\" &&\n                          secondSelect === \"Passport\" &&\n                          !requiredPassportRef.current?.value\n                          ||\n                          props.uploading\n                        }\n                      >\n                        {\n                          props.uploading && props.uploadClear === 0\n                            ? <Spinner />\n                            : props.t(\"Submit\")\n                        }\n                      </Button>\n                    </div>\n                    <div className=\"text-muted\">\n                      ({props.t(\"Maximum size of document 5MB\")}) {props.t(\"Allow File Formats\")} *jpg, *png, *pdf\n                    </div>\n                  </ReactStrapForm>\n                )}\n\n              </Formik>\n            </Container>\n          </CardWrapper>\n        </Col>\n        <Col lg={3}>\n          <CardWrapper className=\"h-100 glass-card shadow\">\n            <div className=\"kyc-requirements\">\n              <p className=\"fw-bold color-primary\">\n                {props.t(\"KYC Requirements\")}\n              </p>\n              <p className=\"mt-2 color-primary\">\n                {props.t(\"Corporate Status\")}\n              </p>\n              <div className=\"proofs-container w-100\">\n                <button\n                  className=\"btn text-start py-2 w-100 border mt-1\"\n                  disabled={props.documents?.find((x) => (x.type === \"MEMORANDUM\"))}\n                  onClick={() => (setDocType(\"memorandum\"))}\n                  style={{\n                    boxShadow: memorandumUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: memorandumUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Memoradum of Association\")}\n                </button>\n                <button\n                  className=\"btn text-start py-2 w-100 border mt-2\"\n                  disabled={props.documents?.find((x) => (x.type === \"CERTIFICATE_OF_INCORPORATION\"))}\n                  onClick={() => (setDocType(\"corpAddress\"))}\n                  style={{\n                    boxShadow: certificateUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: certificateUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Certificate of Incorporation\")}\n                </button>\n                <button\n                  className=\"btn text-start py-2 w-100 border mt-2\"\n                  disabled={props.documents?.find((x) => (x.type === \"CORPORATE_ADDRESS\"))}\n                  onClick={() => (setDocType(\"corpAddress\"))}\n                  style={{\n                    boxShadow: corpAddressUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: corpAddressUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Corporate Address\")}\n                </button>\n\n                <p className=\"mt-2 color-primary\">\n                  {props.t(\"Corporate Personnel Status\")}\n                </p>\n                <p className=\"mt-2 color-primary\">{props.t(\"Authorized Person\")}</p>\n                <p>\n                  {props.clientData.corporateInfo?.authorizedPerson?.firstName} {props.clientData.corporateInfo?.authorizedPerson?.lastName}\n                </p>\n                <button\n                  className=\"btn text-start py-2 border-bottom w-100 border mt-1\"\n                  style={{\n                    boxShadow: authIdUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: authIdUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                  disabled={props.documents?.find((x) => (x.type === \"ID\" && x.subType === \"AUTHORIZED_PERSON\"))}\n                  onClick={() => {\n                    setDocType(\"ID\");\n                    setPersonnel(\"AUTHORIZED_PERSON\");\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Proof of ID\")}\n                </button>\n                <button\n                  className=\"btn text-start py-2 border-bottom w-100 border mt-1\"\n                  style={{\n                    boxShadow: authIdUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: authIdUploaded ? \"not-allowed\" : \"pointer\"\n                  }}\n                  disabled={props.documents?.find((x) => (x.type === \"ADDRESS\" && x.subType === \"AUTHORIZED_PERSON\"))}\n                  onClick={() => {\n                    setDocType(\"address\");\n                    setPersonnel(\"AUTHORIZED_PERSON\");\n                  }}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Proof of Address\")}\n                </button>\n                <p className=\"mt-3 color-primary\">{props.t(\"Shareholders\")}</p>\n                {props.clientData.corporateInfo.shareholders &&\n                  props.clientData.corporateInfo.shareholders.map((shareholder, index) => (\n                    <Fragment key={index}>\n                      <p className=\"mt-1 mb-2\">\n                        {shareholder.firstName} {shareholder.lastName}\n                      </p>\n                      <button\n                        className=\"btn text-start py-2 border-bottom w-100 border\"\n                        style={{\n                          boxShadow: props.documents?.find((x) => (x.type === \"ID\" && x.subType === \"SHAREHOLDER\" && x.shareholderId === shareholder._id))\n                            ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\"\n                            : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                        }}\n                        disabled={props.documents?.find((x) => (x.type === \"ID\" && x.subType === \"SHAREHOLDER\" && x.shareholderId === shareholder._id))}\n                        onClick={() => {\n                          setDocType(\"ID\");\n                          setPersonnel(\"SHAREHOLDER\");\n                          setShareholderId(shareholder._id);\n                        }}\n                      >\n                        <i className=\"mdi mdi-file-document-multiple me-3\" />\n                        {props.t(\"Proof of ID\")}\n                      </button>\n                      <button\n                        className=\"btn text-start py-2 border-bottom w-100 border mt-1 mb-2\"\n                        style={{\n                          boxShadow: uploadedShareholderAddresses.includes(shareholder._id)\n                            ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\"\n                            : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                        }}\n                        disabled={props.documents?.find((x) => (x.type === \"ADDRESS\" && x.subType === \"SHAREHOLDER\" && x.shareholderId === shareholder._id))}\n                        onClick={() => {\n                          setDocType(\"address\");\n                          setPersonnel(\"SHAREHOLDER\");\n                          setShareholderId(shareholder._id);\n                        }}\n                      >\n                        <i className=\"mdi mdi-file-document-multiple me-3\" />\n                        {props.t(\"Proof of Address\")}\n                      </button>\n                    </Fragment>\n                  ))\n                }\n              </div>\n            </div>\n          </CardWrapper>\n        </Col>\n      </Row>\n    </Container >\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  uploadClear: state.documents.uploadClear,\n  documents: state.documents.documents,\n  clientData: state.Profile.clientData,\n  uploading: state.documents.uploading,\n  uploadError: state.documents.uploadError,\n  uploadSuccessMessage: state.documents.uploadSuccessMessage\n});\n\nexport default connect(mapStateToProps, null)(withTranslation()(DocumentCorpUpload)); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}