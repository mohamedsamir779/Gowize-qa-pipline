{"ast":null,"code":"import{requestPartnershipAPI,getRequestTypeAPI,postChangeLeverageReq}from\"apis/forex/requests\";import{put,call,takeEvery}from\"redux-saga/effects\";import{showErrorNotification,showSuccessNotification}from\"store/general/notifications/actions\";import{REQ_IB_START,REQ_IB_SUCCESS,GET_IB_REQUEST_STATUS,REQ_IB_FAIL,GET_IB_REQUEST_STATUS_SUCCESS,GET_IB_REQUEST_STATUS_FAIL,CREATE_CHANGE_LEVERAGE_REQ_REQUESTED}from\"./actionTypes\";import{createChangeLeverageSuccess,createChangeLeverageFail}from\"./actions\";import{toggleCurrentModal}from\"store/actions\";function ReqIB(_ref){let{payload}=_ref;return function*(){try{const result=yield call(requestPartnershipAPI,payload);if(result.status)yield put({type:REQ_IB_SUCCESS,payload:result});else{yield put({type:REQ_IB_FAIL});yield put(showErrorNotification(result===null||result===void 0?void 0:result.message));}}catch(error){yield put({type:REQ_IB_FAIL});yield put(showErrorNotification(error.message));}}();}function getRequestType(_ref2){let{payload}=_ref2;return function*(){const{result}=yield call(getRequestTypeAPI,payload);if(result)yield put({type:GET_IB_REQUEST_STATUS_SUCCESS,payload:result});yield put({type:GET_IB_REQUEST_STATUS_FAIL,payload:result});}();}function createChangeLeverageReq(_ref3){let{payload}=_ref3;return function*(){try{const result=yield call(postChangeLeverageReq,payload);yield put(createChangeLeverageSuccess(result));yield put(showSuccessNotification(\"Change leverage request was sent successfully\"));yield put(toggleCurrentModal(\"\"));}catch(error){yield put(createChangeLeverageFail(error));yield put(showErrorNotification(error.message));}}();}function*requests(){yield takeEvery(REQ_IB_START,ReqIB);yield takeEvery(GET_IB_REQUEST_STATUS,getRequestType);yield takeEvery(CREATE_CHANGE_LEVERAGE_REQ_REQUESTED,createChangeLeverageReq);}export default requests;","map":{"version":3,"names":["requestPartnershipAPI","getRequestTypeAPI","postChangeLeverageReq","put","call","takeEvery","showErrorNotification","showSuccessNotification","REQ_IB_START","REQ_IB_SUCCESS","GET_IB_REQUEST_STATUS","REQ_IB_FAIL","GET_IB_REQUEST_STATUS_SUCCESS","GET_IB_REQUEST_STATUS_FAIL","CREATE_CHANGE_LEVERAGE_REQ_REQUESTED","createChangeLeverageSuccess","createChangeLeverageFail","toggleCurrentModal","ReqIB","_ref","payload","result","status","type","message","error","getRequestType","_ref2","createChangeLeverageReq","_ref3","requests"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/requests/saga.js"],"sourcesContent":["import {\n  requestPartnershipAPI, \n  getRequestTypeAPI,\n  postChangeLeverageReq \n} from \"apis/forex/requests\";\nimport {\n  put, call, takeEvery, \n} from \"redux-saga/effects\";\nimport { showErrorNotification, showSuccessNotification } from \"store/general/notifications/actions\";\nimport {\n  REQ_IB_START, REQ_IB_SUCCESS, \n  GET_IB_REQUEST_STATUS, \n  REQ_IB_FAIL, \n  GET_IB_REQUEST_STATUS_SUCCESS, \n  GET_IB_REQUEST_STATUS_FAIL, \n  CREATE_CHANGE_LEVERAGE_REQ_REQUESTED\n} from \"./actionTypes\";\nimport {\n  createChangeLeverageSuccess,\n  createChangeLeverageFail\n} from \"./actions\";\nimport { toggleCurrentModal } from \"store/actions\";\n\n\nfunction* ReqIB({ payload }) {\n  try { \n    const result = yield call(requestPartnershipAPI, payload);\n    if (result.status)\n      yield put({\n        type: REQ_IB_SUCCESS,\n        payload: result \n      });\n    else {\n      yield put({\n        type: REQ_IB_FAIL,\n      });\n      yield put(showErrorNotification(result?.message));\n    }\n  } catch (error) {\n    yield put({\n      type: REQ_IB_FAIL,\n    });\n    yield put(showErrorNotification(error.message));\n  }\n}\n\nfunction* getRequestType({ payload }) {\n  const { result } = yield call(getRequestTypeAPI, payload);\n  if (result)\n    yield put({\n      type: GET_IB_REQUEST_STATUS_SUCCESS,\n      payload: result \n    });\n  yield put({\n    type: GET_IB_REQUEST_STATUS_FAIL,\n    payload: result \n  });\n}\n\nfunction * createChangeLeverageReq({ payload }){\n  try {\n    const result = yield call(postChangeLeverageReq, payload);\n    yield put(createChangeLeverageSuccess(result));\n    yield put(showSuccessNotification(\"Change leverage request was sent successfully\"));\n    yield put(toggleCurrentModal(\"\"));\n  } catch (error){\n    yield put(createChangeLeverageFail(error));\n    yield put(showErrorNotification(error.message));\n  }\n}\n\nfunction* requests() {\n  yield takeEvery(REQ_IB_START, ReqIB);\n  yield takeEvery(GET_IB_REQUEST_STATUS, getRequestType);\n  yield takeEvery(CREATE_CHANGE_LEVERAGE_REQ_REQUESTED, createChangeLeverageReq);\n}\n    \nexport default requests;\n"],"mappings":"AAAA,OACEA,qBAAqB,CACrBC,iBAAiB,CACjBC,qBAAqB,KAChB,qBAAqB,CAC5B,OACEC,GAAG,CAAEC,IAAI,CAAEC,SAAS,KACf,oBAAoB,CAC3B,OAASC,qBAAqB,CAAEC,uBAAuB,KAAQ,qCAAqC,CACpG,OACEC,YAAY,CAAEC,cAAc,CAC5BC,qBAAqB,CACrBC,WAAW,CACXC,6BAA6B,CAC7BC,0BAA0B,CAC1BC,oCAAoC,KAC/B,eAAe,CACtB,OACEC,2BAA2B,CAC3BC,wBAAwB,KACnB,WAAW,CAClB,OAASC,kBAAkB,KAAQ,eAAe,CAGlD,QAAU,CAAAC,KAAKA,CAAAC,IAAA,KAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,mBAAE,CAC3B,GAAI,CACF,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAjB,IAAI,CAACJ,qBAAqB,CAAEoB,OAAO,CAAC,CACzD,GAAIC,MAAM,CAACC,MAAM,CACf,KAAM,CAAAnB,GAAG,CAAC,CACRoB,IAAI,CAAEd,cAAc,CACpBW,OAAO,CAAEC,MACX,CAAC,CAAC,CAAC,IACA,CACH,KAAM,CAAAlB,GAAG,CAAC,CACRoB,IAAI,CAAEZ,WACR,CAAC,CAAC,CACF,KAAM,CAAAR,GAAG,CAACG,qBAAqB,CAACe,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEG,OAAO,CAAC,CAAC,CACnD,CACF,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAtB,GAAG,CAAC,CACRoB,IAAI,CAAEZ,WACR,CAAC,CAAC,CACF,KAAM,CAAAR,GAAG,CAACG,qBAAqB,CAACmB,KAAK,CAACD,OAAO,CAAC,CAAC,CACjD,CACF,CAAC,IAED,QAAU,CAAAE,cAAcA,CAAAC,KAAA,KAAC,CAAEP,OAAQ,CAAC,CAAAO,KAAA,mBAAE,CACpC,KAAM,CAAEN,MAAO,CAAC,CAAG,KAAM,CAAAjB,IAAI,CAACH,iBAAiB,CAAEmB,OAAO,CAAC,CACzD,GAAIC,MAAM,CACR,KAAM,CAAAlB,GAAG,CAAC,CACRoB,IAAI,CAAEX,6BAA6B,CACnCQ,OAAO,CAAEC,MACX,CAAC,CAAC,CACJ,KAAM,CAAAlB,GAAG,CAAC,CACRoB,IAAI,CAAEV,0BAA0B,CAChCO,OAAO,CAAEC,MACX,CAAC,CAAC,CACJ,CAAC,IAED,QAAW,CAAAO,uBAAuBA,CAAAC,KAAA,KAAC,CAAET,OAAQ,CAAC,CAAAS,KAAA,mBAAC,CAC7C,GAAI,CACF,KAAM,CAAAR,MAAM,CAAG,KAAM,CAAAjB,IAAI,CAACF,qBAAqB,CAAEkB,OAAO,CAAC,CACzD,KAAM,CAAAjB,GAAG,CAACY,2BAA2B,CAACM,MAAM,CAAC,CAAC,CAC9C,KAAM,CAAAlB,GAAG,CAACI,uBAAuB,CAAC,+CAA+C,CAAC,CAAC,CACnF,KAAM,CAAAJ,GAAG,CAACc,kBAAkB,CAAC,EAAE,CAAC,CAAC,CACnC,CAAE,MAAOQ,KAAK,CAAC,CACb,KAAM,CAAAtB,GAAG,CAACa,wBAAwB,CAACS,KAAK,CAAC,CAAC,CAC1C,KAAM,CAAAtB,GAAG,CAACG,qBAAqB,CAACmB,KAAK,CAACD,OAAO,CAAC,CAAC,CACjD,CACF,CAAC,IAED,SAAUM,QAAQA,CAAA,CAAG,CACnB,KAAM,CAAAzB,SAAS,CAACG,YAAY,CAAEU,KAAK,CAAC,CACpC,KAAM,CAAAb,SAAS,CAACK,qBAAqB,CAAEgB,cAAc,CAAC,CACtD,KAAM,CAAArB,SAAS,CAACS,oCAAoC,CAAEc,uBAAuB,CAAC,CAChF,CAEA,cAAe,CAAAE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}