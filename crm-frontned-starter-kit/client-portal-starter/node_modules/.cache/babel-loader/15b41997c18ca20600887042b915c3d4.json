{"ast":null,"code":"// Generated by CoffeeScript 1.7.1\n(function () {\n  var Pointer, VoidPointer, utils;\n  utils = require('./utils');\n  Pointer = function () {\n    function Pointer(offsetType, type, options) {\n      var _base, _base1, _base2, _base3;\n      this.offsetType = offsetType;\n      this.type = type;\n      this.options = options != null ? options : {};\n      if (this.type === 'void') {\n        this.type = null;\n      }\n      if ((_base = this.options).type == null) {\n        _base.type = 'local';\n      }\n      if ((_base1 = this.options).allowNull == null) {\n        _base1.allowNull = true;\n      }\n      if ((_base2 = this.options).nullValue == null) {\n        _base2.nullValue = 0;\n      }\n      if ((_base3 = this.options).lazy == null) {\n        _base3.lazy = false;\n      }\n      if (this.options.relativeTo) {\n        this.relativeToGetter = new Function('ctx', \"return ctx.\" + this.options.relativeTo);\n      }\n    }\n    Pointer.prototype.decode = function (stream, ctx) {\n      var c, decodeValue, offset, ptr, relative, val;\n      offset = this.offsetType.decode(stream, ctx);\n      if (offset === this.options.nullValue && this.options.allowNull) {\n        return null;\n      }\n      relative = function () {\n        switch (this.options.type) {\n          case 'local':\n            return ctx._startOffset;\n          case 'immediate':\n            return stream.pos - this.offsetType.size();\n          case 'parent':\n            return ctx.parent._startOffset;\n          default:\n            c = ctx;\n            while (c.parent) {\n              c = c.parent;\n            }\n            return c._startOffset || 0;\n        }\n      }.call(this);\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(ctx);\n      }\n      ptr = offset + relative;\n      if (this.type != null) {\n        val = null;\n        decodeValue = function (_this) {\n          return function () {\n            var pos;\n            if (val != null) {\n              return val;\n            }\n            pos = stream.pos;\n            stream.pos = ptr;\n            val = _this.type.decode(stream, ctx);\n            stream.pos = pos;\n            return val;\n          };\n        }(this);\n        if (this.options.lazy) {\n          return new utils.PropertyDescriptor({\n            get: decodeValue\n          });\n        }\n        return decodeValue();\n      } else {\n        return ptr;\n      }\n    };\n    Pointer.prototype.size = function (val, ctx) {\n      var parent, type;\n      parent = ctx;\n      switch (this.options.type) {\n        case 'local':\n        case 'immediate':\n          break;\n        case 'parent':\n          ctx = ctx.parent;\n          break;\n        default:\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n      }\n      type = this.type;\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n        type = val.type;\n        val = val.value;\n      }\n      if (val && ctx) {\n        ctx.pointerSize += type.size(val, parent);\n      }\n      return this.offsetType.size();\n    };\n    Pointer.prototype.encode = function (stream, val, ctx) {\n      var parent, relative, type;\n      parent = ctx;\n      if (val == null) {\n        this.offsetType.encode(stream, this.options.nullValue);\n        return;\n      }\n      switch (this.options.type) {\n        case 'local':\n          relative = ctx.startOffset;\n          break;\n        case 'immediate':\n          relative = stream.pos + this.offsetType.size(val, parent);\n          break;\n        case 'parent':\n          ctx = ctx.parent;\n          relative = ctx.startOffset;\n          break;\n        default:\n          relative = 0;\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n      }\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(parent.val);\n      }\n      this.offsetType.encode(stream, ctx.pointerOffset - relative);\n      type = this.type;\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n        type = val.type;\n        val = val.value;\n      }\n      ctx.pointers.push({\n        type: type,\n        val: val,\n        parent: parent\n      });\n      return ctx.pointerOffset += type.size(val, parent);\n    };\n    return Pointer;\n  }();\n  VoidPointer = function () {\n    function VoidPointer(type, value) {\n      this.type = type;\n      this.value = value;\n    }\n    return VoidPointer;\n  }();\n  exports.Pointer = Pointer;\n  exports.VoidPointer = VoidPointer;\n}).call(this);","map":{"version":3,"names":["Pointer","VoidPointer","utils","require","offsetType","type","options","_base","_base1","_base2","_base3","allowNull","nullValue","lazy","relativeTo","relativeToGetter","Function","prototype","decode","stream","ctx","c","decodeValue","offset","ptr","relative","val","_startOffset","pos","size","parent","call","_this","PropertyDescriptor","get","Error","value","pointerSize","encode","startOffset","pointerOffset","pointers","push","exports"],"sources":["/home/ubuntu/king/portal/client-portal-starter/node_modules/restructure/src/Pointer.js"],"sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var Pointer, VoidPointer, utils;\n\n  utils = require('./utils');\n\n  Pointer = (function() {\n    function Pointer(offsetType, type, options) {\n      var _base, _base1, _base2, _base3;\n      this.offsetType = offsetType;\n      this.type = type;\n      this.options = options != null ? options : {};\n      if (this.type === 'void') {\n        this.type = null;\n      }\n      if ((_base = this.options).type == null) {\n        _base.type = 'local';\n      }\n      if ((_base1 = this.options).allowNull == null) {\n        _base1.allowNull = true;\n      }\n      if ((_base2 = this.options).nullValue == null) {\n        _base2.nullValue = 0;\n      }\n      if ((_base3 = this.options).lazy == null) {\n        _base3.lazy = false;\n      }\n      if (this.options.relativeTo) {\n        this.relativeToGetter = new Function('ctx', \"return ctx.\" + this.options.relativeTo);\n      }\n    }\n\n    Pointer.prototype.decode = function(stream, ctx) {\n      var c, decodeValue, offset, ptr, relative, val;\n      offset = this.offsetType.decode(stream, ctx);\n      if (offset === this.options.nullValue && this.options.allowNull) {\n        return null;\n      }\n      relative = (function() {\n        switch (this.options.type) {\n          case 'local':\n            return ctx._startOffset;\n          case 'immediate':\n            return stream.pos - this.offsetType.size();\n          case 'parent':\n            return ctx.parent._startOffset;\n          default:\n            c = ctx;\n            while (c.parent) {\n              c = c.parent;\n            }\n            return c._startOffset || 0;\n        }\n      }).call(this);\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(ctx);\n      }\n      ptr = offset + relative;\n      if (this.type != null) {\n        val = null;\n        decodeValue = (function(_this) {\n          return function() {\n            var pos;\n            if (val != null) {\n              return val;\n            }\n            pos = stream.pos;\n            stream.pos = ptr;\n            val = _this.type.decode(stream, ctx);\n            stream.pos = pos;\n            return val;\n          };\n        })(this);\n        if (this.options.lazy) {\n          return new utils.PropertyDescriptor({\n            get: decodeValue\n          });\n        }\n        return decodeValue();\n      } else {\n        return ptr;\n      }\n    };\n\n    Pointer.prototype.size = function(val, ctx) {\n      var parent, type;\n      parent = ctx;\n      switch (this.options.type) {\n        case 'local':\n        case 'immediate':\n          break;\n        case 'parent':\n          ctx = ctx.parent;\n          break;\n        default:\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n      }\n      type = this.type;\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n        type = val.type;\n        val = val.value;\n      }\n      if (val && ctx) {\n        ctx.pointerSize += type.size(val, parent);\n      }\n      return this.offsetType.size();\n    };\n\n    Pointer.prototype.encode = function(stream, val, ctx) {\n      var parent, relative, type;\n      parent = ctx;\n      if (val == null) {\n        this.offsetType.encode(stream, this.options.nullValue);\n        return;\n      }\n      switch (this.options.type) {\n        case 'local':\n          relative = ctx.startOffset;\n          break;\n        case 'immediate':\n          relative = stream.pos + this.offsetType.size(val, parent);\n          break;\n        case 'parent':\n          ctx = ctx.parent;\n          relative = ctx.startOffset;\n          break;\n        default:\n          relative = 0;\n          while (ctx.parent) {\n            ctx = ctx.parent;\n          }\n      }\n      if (this.options.relativeTo) {\n        relative += this.relativeToGetter(parent.val);\n      }\n      this.offsetType.encode(stream, ctx.pointerOffset - relative);\n      type = this.type;\n      if (type == null) {\n        if (!(val instanceof VoidPointer)) {\n          throw new Error(\"Must be a VoidPointer\");\n        }\n        type = val.type;\n        val = val.value;\n      }\n      ctx.pointers.push({\n        type: type,\n        val: val,\n        parent: parent\n      });\n      return ctx.pointerOffset += type.size(val, parent);\n    };\n\n    return Pointer;\n\n  })();\n\n  VoidPointer = (function() {\n    function VoidPointer(type, value) {\n      this.type = type;\n      this.value = value;\n    }\n\n    return VoidPointer;\n\n  })();\n\n  exports.Pointer = Pointer;\n\n  exports.VoidPointer = VoidPointer;\n\n}).call(this);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}