{"ast":null,"code":"import{takeEvery,call,put}from\"redux-saga/effects\";import{showErrorNotification}from\"store/general/notifications/actions\";import{fetchIbAgreements,getReferrals,getStatement,getStatementDeals}from\"apis/forex/ib\";import{FETCH_IB_AGREEMENTS_START,FETCH_REFERRALS_START,FETCH_STATEMENT_START,FETCH_STATEMENT_DEALS_START}from\"./actionTypes\";import{fetchAgreementsSuccess,fetchReferralsSuccess,fetchStatementSuccess,fetchStatementDealsSuccess}from\"./actions\";function*getIbAgreements(){try{const{result}=yield call(fetchIbAgreements);yield put(fetchAgreementsSuccess(result));}catch(error){yield put(showErrorNotification(error));}}function*fetchReferrals(params){try{const{result:referrals}=yield call(getReferrals,params);yield put(fetchReferralsSuccess(referrals));}catch(error){yield put(showErrorNotification(error));}}function*fetchStatement(params){try{const{result:statement}=yield call(getStatement,params);yield put(fetchStatementSuccess(statement));}catch(error){yield put(showErrorNotification((error===null||error===void 0?void 0:error.message)||error));}}function*fetchStatementDeals(params){try{const{result:deals}=yield call(getStatementDeals,params);yield put(fetchStatementDealsSuccess(deals));}catch(error){yield put(showErrorNotification(error));}}function*agreementSaga(){yield takeEvery(FETCH_IB_AGREEMENTS_START,getIbAgreements);yield takeEvery(FETCH_REFERRALS_START,fetchReferrals);yield takeEvery(FETCH_STATEMENT_START,fetchStatement);yield takeEvery(FETCH_STATEMENT_DEALS_START,fetchStatementDeals);}export default agreementSaga;","map":{"version":3,"names":["takeEvery","call","put","showErrorNotification","fetchIbAgreements","getReferrals","getStatement","getStatementDeals","FETCH_IB_AGREEMENTS_START","FETCH_REFERRALS_START","FETCH_STATEMENT_START","FETCH_STATEMENT_DEALS_START","fetchAgreementsSuccess","fetchReferralsSuccess","fetchStatementSuccess","fetchStatementDealsSuccess","getIbAgreements","result","error","fetchReferrals","params","referrals","fetchStatement","statement","message","fetchStatementDeals","deals","agreementSaga"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/agreements/saga.js"],"sourcesContent":["import {\n  takeEvery,\n  call,\n  put,\n} from \"redux-saga/effects\";\nimport { showErrorNotification } from \"store/general/notifications/actions\";\nimport {\n  fetchIbAgreements, getReferrals,\n  getStatement, getStatementDeals\n} from \"apis/forex/ib\";\nimport {\n  FETCH_IB_AGREEMENTS_START, FETCH_REFERRALS_START,\n  FETCH_STATEMENT_START, FETCH_STATEMENT_DEALS_START,\n} from \"./actionTypes\";\nimport {\n  fetchAgreementsSuccess, fetchReferralsSuccess,\n  fetchStatementSuccess, fetchStatementDealsSuccess,\n} from \"./actions\";\n\nfunction* getIbAgreements() {\n  try {\n    const { result } = yield call(fetchIbAgreements);\n    yield put(fetchAgreementsSuccess(result));\n  } catch (error) {\n    yield put(showErrorNotification(error));\n  }\n}\n\nfunction * fetchReferrals(params) {\n  try {\n    const { result: referrals } = yield call(getReferrals, params);\n    yield put(fetchReferralsSuccess(referrals));\n  } catch (error){\n    yield put(showErrorNotification(error));\n  }  \n}\n\nfunction * fetchStatement(params) {\n  try {\n    const { result: statement } = yield call(getStatement, params);\n    yield put(fetchStatementSuccess(statement));\n  } catch (error){\n    yield put(showErrorNotification(error?.message || error));\n  }\n}\n\nfunction * fetchStatementDeals(params) {\n  try {\n    const { result: deals } = yield call(getStatementDeals, params);\n    yield put(fetchStatementDealsSuccess(deals)); \n  } catch (error){\n    yield put(showErrorNotification(error));\n\n  }\n}\n\nfunction* agreementSaga() {\n  yield takeEvery(FETCH_IB_AGREEMENTS_START, getIbAgreements);\n  yield takeEvery(FETCH_REFERRALS_START, fetchReferrals);\n  yield takeEvery(FETCH_STATEMENT_START, fetchStatement);\n  yield takeEvery(FETCH_STATEMENT_DEALS_START, fetchStatementDeals);\n\n}\n\nexport default agreementSaga;"],"mappings":"AAAA,OACEA,SAAS,CACTC,IAAI,CACJC,GAAG,KACE,oBAAoB,CAC3B,OAASC,qBAAqB,KAAQ,qCAAqC,CAC3E,OACEC,iBAAiB,CAAEC,YAAY,CAC/BC,YAAY,CAAEC,iBAAiB,KAC1B,eAAe,CACtB,OACEC,yBAAyB,CAAEC,qBAAqB,CAChDC,qBAAqB,CAAEC,2BAA2B,KAC7C,eAAe,CACtB,OACEC,sBAAsB,CAAEC,qBAAqB,CAC7CC,qBAAqB,CAAEC,0BAA0B,KAC5C,WAAW,CAElB,SAAUC,eAAeA,CAAA,CAAG,CAC1B,GAAI,CACF,KAAM,CAAEC,MAAO,CAAC,CAAG,KAAM,CAAAhB,IAAI,CAACG,iBAAiB,CAAC,CAChD,KAAM,CAAAF,GAAG,CAACU,sBAAsB,CAACK,MAAM,CAAC,CAAC,CAC3C,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAhB,GAAG,CAACC,qBAAqB,CAACe,KAAK,CAAC,CAAC,CACzC,CACF,CAEA,SAAWC,cAAcA,CAACC,MAAM,CAAE,CAChC,GAAI,CACF,KAAM,CAAEH,MAAM,CAAEI,SAAU,CAAC,CAAG,KAAM,CAAApB,IAAI,CAACI,YAAY,CAAEe,MAAM,CAAC,CAC9D,KAAM,CAAAlB,GAAG,CAACW,qBAAqB,CAACQ,SAAS,CAAC,CAAC,CAC7C,CAAE,MAAOH,KAAK,CAAC,CACb,KAAM,CAAAhB,GAAG,CAACC,qBAAqB,CAACe,KAAK,CAAC,CAAC,CACzC,CACF,CAEA,SAAWI,cAAcA,CAACF,MAAM,CAAE,CAChC,GAAI,CACF,KAAM,CAAEH,MAAM,CAAEM,SAAU,CAAC,CAAG,KAAM,CAAAtB,IAAI,CAACK,YAAY,CAAEc,MAAM,CAAC,CAC9D,KAAM,CAAAlB,GAAG,CAACY,qBAAqB,CAACS,SAAS,CAAC,CAAC,CAC7C,CAAE,MAAOL,KAAK,CAAC,CACb,KAAM,CAAAhB,GAAG,CAACC,qBAAqB,CAAC,CAAAe,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEM,OAAO,GAAIN,KAAK,CAAC,CAAC,CAC3D,CACF,CAEA,SAAWO,mBAAmBA,CAACL,MAAM,CAAE,CACrC,GAAI,CACF,KAAM,CAAEH,MAAM,CAAES,KAAM,CAAC,CAAG,KAAM,CAAAzB,IAAI,CAACM,iBAAiB,CAAEa,MAAM,CAAC,CAC/D,KAAM,CAAAlB,GAAG,CAACa,0BAA0B,CAACW,KAAK,CAAC,CAAC,CAC9C,CAAE,MAAOR,KAAK,CAAC,CACb,KAAM,CAAAhB,GAAG,CAACC,qBAAqB,CAACe,KAAK,CAAC,CAAC,CAEzC,CACF,CAEA,SAAUS,aAAaA,CAAA,CAAG,CACxB,KAAM,CAAA3B,SAAS,CAACQ,yBAAyB,CAAEQ,eAAe,CAAC,CAC3D,KAAM,CAAAhB,SAAS,CAACS,qBAAqB,CAAEU,cAAc,CAAC,CACtD,KAAM,CAAAnB,SAAS,CAACU,qBAAqB,CAAEY,cAAc,CAAC,CACtD,KAAM,CAAAtB,SAAS,CAACW,2BAA2B,CAAEc,mBAAmB,CAAC,CAEnE,CAEA,cAAe,CAAAE,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}