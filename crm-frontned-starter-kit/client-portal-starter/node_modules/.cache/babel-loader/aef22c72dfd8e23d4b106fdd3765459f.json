{"ast":null,"code":"import{AvForm}from\"availity-reactstrap-validation\";import React,{useEffect,useState}from\"react\";import{Col,Input,Label,Row,UncontrolledAlert}from\"reactstrap\";import Cards from\"react-credit-cards-2\";import\"react-credit-cards-2/dist/es/styles-compiled.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Others(_ref){let{t,setIsFirstStepValid,setPaymentPayload}=_ref;const[name,setName]=useState(\"\");const[cardNumber,setCardNumber]=useState(\"\");const[expiry,setExpiry]=useState(\"\");const[cvc,setCvc]=useState(\"\");const[errorMessage,setErrorMessage]=useState(\"\");const[error,setError]=useState(false);useEffect(()=>{return()=>{setName(\"\");setCardNumber(\"\");setExpiry(\"\");setCvc(\"\");setIsFirstStepValid(false);};},[]);useEffect(()=>{if(name&&cardNumber&&expiry&&cvc){setIsFirstStepValid(true);setPaymentPayload({card:{cardholderName:name,cardNumber,expiryMonth:expiry.split(\"/\")[0],expiryYear:parseInt(expiry.split(\"/\")[1]),cardSecurityCode:cvc}});}else{setIsFirstStepValid(false);}},[error]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:t(\"Enter card information.\")}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(AvForm,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"example-date-input\",className:\"form-label\",children:t(\"Name\")}),/*#__PURE__*/_jsx(Input,{className:\"form-control\",type:\"text\",id:\"example-date-input\",onChange:e=>setName(e.target.value)})]})}),/*#__PURE__*/_jsx(Col,{xs:12,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"example-date-input\",className:\"form-label\",children:t(\"Card Number\")}),/*#__PURE__*/_jsx(Input,{className:\"form-control\",type:\"text\",id:\"example-date-input\",onChange:e=>{const value=e.target.value;// remove all non-numeric characters, spaces, etc.\nconst cardNumber=value.replace(/\\D/g,\"\");setCardNumber(cardNumber);},value:cardNumber})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"example-date-input\",className:\"form-label\",children:t(\"Expiry date\")}),/*#__PURE__*/_jsx(Input,{className:\"form-control\",type:\"month\",id:\"example-date-input\",min:new Date().toISOString().split(\"T\")[0],onChange:e=>{const value=e.target.value;const month=value.split(\"-\")[1];const year=value.split(\"-\")[0];setExpiry(\"\".concat(month,\"/\").concat(year));}})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"example-date-input\",className:\"form-label\",children:t(\"Security Code (CVV)\")}),/*#__PURE__*/_jsx(Input,{className:\"form-control\",type:\"number\",maxLength:3,id:\"example-date-input\",onChange:e=>setCvc(e.target.value)})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Cards,{cvc:cvc,expiry:expiry&&\"\".concat(expiry.split(\"/\")[0]+\"/\"+expiry.split(\"/\")[1].slice(2)),name:name,number:cardNumber,preview:false,callback:(type,isValid)=>{if(!isValid){setError(true);setErrorMessage(\"Invalid Card Details\");return;}// date validation\nconst month=expiry.split(\"/\")[0];const year=expiry.split(\"/\")[1];if(new Date(year,month).getTime()<new Date().getTime()){setError(true);setErrorMessage(\"Invalid Expiry Date\");return;}// cvc validation\nif(cvc.length<3||cvc.length>4){setError(true);setErrorMessage(\"Invalid CVV\");return;}setError(false);setErrorMessage(\"\");}})}),/*#__PURE__*/_jsx(\"div\",{children:error&&/*#__PURE__*/_jsx(UncontrolledAlert,{color:\"danger\",className:\"my-2 text-center\",children:errorMessage})})]})]});}","map":{"version":3,"names":["AvForm","React","useEffect","useState","Col","Input","Label","Row","UncontrolledAlert","Cards","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Others","_ref","t","setIsFirstStepValid","setPaymentPayload","name","setName","cardNumber","setCardNumber","expiry","setExpiry","cvc","setCvc","errorMessage","setErrorMessage","error","setError","card","cardholderName","expiryMonth","split","expiryYear","parseInt","cardSecurityCode","children","className","xs","htmlFor","type","id","onChange","e","target","value","replace","md","min","Date","toISOString","month","year","concat","maxLength","slice","number","preview","callback","isValid","getTime","length","color"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/components/Deposit/Methods/Others.js"],"sourcesContent":["import { AvForm } from \"availity-reactstrap-validation\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Col,\n  Input,\n  Label,\n  Row,\n  UncontrolledAlert\n} from \"reactstrap\";\nimport Cards from \"react-credit-cards-2\";\nimport \"react-credit-cards-2/dist/es/styles-compiled.css\";\n\nexport default function Others({\n  t, setIsFirstStepValid, setPaymentPayload\n}) {\n  const [name, setName] = useState(\"\");\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      setName(\"\");\n      setCardNumber(\"\");\n      setExpiry(\"\");\n      setCvc(\"\");\n      setIsFirstStepValid(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (name && cardNumber && expiry && cvc) {\n      setIsFirstStepValid(true);\n      setPaymentPayload({\n        card: {\n          cardholderName: name,\n          cardNumber,\n          expiryMonth: expiry.split(\"/\")[0],\n          expiryYear: parseInt(expiry.split(\"/\")[1]),\n          cardSecurityCode: cvc,\n        }\n      });\n    } else {\n      setIsFirstStepValid(false);\n    }\n  }, [error]);\n\n  return (\n    <>\n      <p className=\"text-muted\">{t(\"Enter card information.\")}</p>\n      <Row>\n        <AvForm>\n          <Row>\n            <Col xs={12}>\n              <div className=\"mb-3\">\n                <Label\n                  htmlFor=\"example-date-input\"\n                  className=\"form-label\"\n                >\n                  {t(\"Name\")}\n                </Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"text\"\n                  id=\"example-date-input\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n            </Col>\n            <Col xs={12}>\n              <div className=\"mb-3\">\n                <Label\n                  htmlFor=\"example-date-input\"\n                  className=\"form-label\"\n                >\n                  {t(\"Card Number\")}\n                </Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"text\"\n                  id=\"example-date-input\"\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    // remove all non-numeric characters, spaces, etc.\n                    const cardNumber = value.replace(/\\D/g, \"\");\n\n                    setCardNumber(cardNumber);\n                  }}\n                  value={cardNumber}\n                />\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <div className=\"mb-3\">\n                <Label\n                  htmlFor=\"example-date-input\"\n                  className=\"form-label\"\n                >\n                  {t(\"Expiry date\")}\n                </Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"month\"\n                  id=\"example-date-input\"\n                  min={new Date().toISOString().split(\"T\")[0]}\n                  onChange={(e) => {\n                    const value = e.target.value;\n                    const month = value.split(\"-\")[1];\n                    const year = value.split(\"-\")[0];\n                    setExpiry(`${month}/${year}`);\n                  }}\n                />\n              </div>\n            </Col>\n            <Col md={6}>\n              <div className=\"mb-3\">\n                <Label\n                  htmlFor=\"example-date-input\"\n                  className=\"form-label\"\n                >\n                  {t(\"Security Code (CVV)\")}\n                </Label>\n                <Input\n                  className=\"form-control\"\n                  type=\"number\"\n                  maxLength={3}\n                  id=\"example-date-input\"\n                  onChange={(e) => setCvc(e.target.value)}\n                />\n              </div>\n            </Col>\n          </Row>\n        </AvForm>\n        <div>\n          <Cards\n            cvc={cvc}\n            expiry={expiry && `${(expiry.split(\"/\")[0] + \"/\" + expiry.split(\"/\")[1].slice(2))}`}\n            name={name}\n            number={cardNumber}\n            preview={false}\n            callback={(type, isValid) => {\n              if (!isValid) {\n                setError(true);\n                setErrorMessage(\"Invalid Card Details\");\n                return ;\n              }\n              // date validation\n              const month = expiry.split(\"/\")[0];\n              const year = expiry.split(\"/\")[1];\n              if (new Date(year, month).getTime() < new Date().getTime()) {\n                setError(true);\n                setErrorMessage(\"Invalid Expiry Date\");\n                return;\n              }\n              // cvc validation\n              if (cvc.length < 3 || cvc.length > 4) {\n                setError(true);\n                setErrorMessage(\"Invalid CVV\");\n                return;\n              }\n              setError(false);\n              setErrorMessage(\"\");\n            }}\n          />\n        </div>\n        <div>\n          {error && (\n            <UncontrolledAlert color=\"danger\"  className=\"my-2 text-center\">\n              {errorMessage}\n            </UncontrolledAlert>\n          )}\n        </div>\n      </Row>\n    </>\n  );\n}\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,gCAAgC,CACvD,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OACEC,GAAG,CACHC,KAAK,CACLC,KAAK,CACLC,GAAG,CACHC,iBAAiB,KACZ,YAAY,CACnB,MAAO,CAAAC,KAAK,KAAM,sBAAsB,CACxC,MAAO,kDAAkD,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1D,cAAe,SAAS,CAAAC,MAAMA,CAAAC,IAAA,CAE3B,IAF4B,CAC7BC,CAAC,CAAEC,mBAAmB,CAAEC,iBAC1B,CAAC,CAAAH,IAAA,CACC,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACoB,UAAU,CAAEC,aAAa,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACsB,MAAM,CAAEC,SAAS,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACwB,GAAG,CAAEC,MAAM,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAAC0B,YAAY,CAAEC,eAAe,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAAC4B,KAAK,CAAEC,QAAQ,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAEzCD,SAAS,CAAC,IAAM,CACd,MAAO,IAAM,CACXoB,OAAO,CAAC,EAAE,CAAC,CACXE,aAAa,CAAC,EAAE,CAAC,CACjBE,SAAS,CAAC,EAAE,CAAC,CACbE,MAAM,CAAC,EAAE,CAAC,CACVT,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAENjB,SAAS,CAAC,IAAM,CACd,GAAImB,IAAI,EAAIE,UAAU,EAAIE,MAAM,EAAIE,GAAG,CAAE,CACvCR,mBAAmB,CAAC,IAAI,CAAC,CACzBC,iBAAiB,CAAC,CAChBa,IAAI,CAAE,CACJC,cAAc,CAAEb,IAAI,CACpBE,UAAU,CACVY,WAAW,CAAEV,MAAM,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACjCC,UAAU,CAAEC,QAAQ,CAACb,MAAM,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAC1CG,gBAAgB,CAAEZ,GACpB,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,CACLR,mBAAmB,CAAC,KAAK,CAAC,CAC5B,CACF,CAAC,CAAE,CAACY,KAAK,CAAC,CAAC,CAEX,mBACElB,KAAA,CAAAE,SAAA,EAAAyB,QAAA,eACE7B,IAAA,MAAG8B,SAAS,CAAC,YAAY,CAAAD,QAAA,CAAEtB,CAAC,CAAC,yBAAyB,CAAC,CAAI,CAAC,cAC5DL,KAAA,CAACN,GAAG,EAAAiC,QAAA,eACF3B,KAAA,CAACb,MAAM,EAAAwC,QAAA,eACL3B,KAAA,CAACN,GAAG,EAAAiC,QAAA,eACF7B,IAAA,CAACP,GAAG,EAACsC,EAAE,CAAE,EAAG,CAAAF,QAAA,cACV3B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnB7B,IAAA,CAACL,KAAK,EACJqC,OAAO,CAAC,oBAAoB,CAC5BF,SAAS,CAAC,YAAY,CAAAD,QAAA,CAErBtB,CAAC,CAAC,MAAM,CAAC,CACL,CAAC,cACRP,IAAA,CAACN,KAAK,EACJoC,SAAS,CAAC,cAAc,CACxBG,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,oBAAoB,CACvBC,QAAQ,CAAGC,CAAC,EAAKzB,OAAO,CAACyB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAC1C,CAAC,EACC,CAAC,CACH,CAAC,cACNtC,IAAA,CAACP,GAAG,EAACsC,EAAE,CAAE,EAAG,CAAAF,QAAA,cACV3B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnB7B,IAAA,CAACL,KAAK,EACJqC,OAAO,CAAC,oBAAoB,CAC5BF,SAAS,CAAC,YAAY,CAAAD,QAAA,CAErBtB,CAAC,CAAC,aAAa,CAAC,CACZ,CAAC,cACRP,IAAA,CAACN,KAAK,EACJoC,SAAS,CAAC,cAAc,CACxBG,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,oBAAoB,CACvBC,QAAQ,CAAGC,CAAC,EAAK,CACf,KAAM,CAAAE,KAAK,CAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,CAC5B;AACA,KAAM,CAAA1B,UAAU,CAAG0B,KAAK,CAACC,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAE3C1B,aAAa,CAACD,UAAU,CAAC,CAC3B,CAAE,CACF0B,KAAK,CAAE1B,UAAW,CACnB,CAAC,EACC,CAAC,CACH,CAAC,EACH,CAAC,cACNV,KAAA,CAACN,GAAG,EAAAiC,QAAA,eACF7B,IAAA,CAACP,GAAG,EAAC+C,EAAE,CAAE,CAAE,CAAAX,QAAA,cACT3B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnB7B,IAAA,CAACL,KAAK,EACJqC,OAAO,CAAC,oBAAoB,CAC5BF,SAAS,CAAC,YAAY,CAAAD,QAAA,CAErBtB,CAAC,CAAC,aAAa,CAAC,CACZ,CAAC,cACRP,IAAA,CAACN,KAAK,EACJoC,SAAS,CAAC,cAAc,CACxBG,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,oBAAoB,CACvBO,GAAG,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAClB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAE,CAC5CU,QAAQ,CAAGC,CAAC,EAAK,CACf,KAAM,CAAAE,KAAK,CAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,CAC5B,KAAM,CAAAM,KAAK,CAAGN,KAAK,CAACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACjC,KAAM,CAAAoB,IAAI,CAAGP,KAAK,CAACb,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAChCV,SAAS,IAAA+B,MAAA,CAAIF,KAAK,MAAAE,MAAA,CAAID,IAAI,CAAE,CAAC,CAC/B,CAAE,CACH,CAAC,EACC,CAAC,CACH,CAAC,cACN7C,IAAA,CAACP,GAAG,EAAC+C,EAAE,CAAE,CAAE,CAAAX,QAAA,cACT3B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAD,QAAA,eACnB7B,IAAA,CAACL,KAAK,EACJqC,OAAO,CAAC,oBAAoB,CAC5BF,SAAS,CAAC,YAAY,CAAAD,QAAA,CAErBtB,CAAC,CAAC,qBAAqB,CAAC,CACpB,CAAC,cACRP,IAAA,CAACN,KAAK,EACJoC,SAAS,CAAC,cAAc,CACxBG,IAAI,CAAC,QAAQ,CACbc,SAAS,CAAE,CAAE,CACbb,EAAE,CAAC,oBAAoB,CACvBC,QAAQ,CAAGC,CAAC,EAAKnB,MAAM,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACzC,CAAC,EACC,CAAC,CACH,CAAC,EACH,CAAC,EACA,CAAC,cACTtC,IAAA,QAAA6B,QAAA,cACE7B,IAAA,CAACF,KAAK,EACJkB,GAAG,CAAEA,GAAI,CACTF,MAAM,CAAEA,MAAM,KAAAgC,MAAA,CAAQhC,MAAM,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAG,GAAG,CAAGX,MAAM,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAI,CACpFtC,IAAI,CAAEA,IAAK,CACXuC,MAAM,CAAErC,UAAW,CACnBsC,OAAO,CAAE,KAAM,CACfC,QAAQ,CAAEA,CAAClB,IAAI,CAAEmB,OAAO,GAAK,CAC3B,GAAI,CAACA,OAAO,CAAE,CACZ/B,QAAQ,CAAC,IAAI,CAAC,CACdF,eAAe,CAAC,sBAAsB,CAAC,CACvC,OACF,CACA;AACA,KAAM,CAAAyB,KAAK,CAAG9B,MAAM,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClC,KAAM,CAAAoB,IAAI,CAAG/B,MAAM,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACjC,GAAI,GAAI,CAAAiB,IAAI,CAACG,IAAI,CAAED,KAAK,CAAC,CAACS,OAAO,CAAC,CAAC,CAAG,GAAI,CAAAX,IAAI,CAAC,CAAC,CAACW,OAAO,CAAC,CAAC,CAAE,CAC1DhC,QAAQ,CAAC,IAAI,CAAC,CACdF,eAAe,CAAC,qBAAqB,CAAC,CACtC,OACF,CACA;AACA,GAAIH,GAAG,CAACsC,MAAM,CAAG,CAAC,EAAItC,GAAG,CAACsC,MAAM,CAAG,CAAC,CAAE,CACpCjC,QAAQ,CAAC,IAAI,CAAC,CACdF,eAAe,CAAC,aAAa,CAAC,CAC9B,OACF,CACAE,QAAQ,CAAC,KAAK,CAAC,CACfF,eAAe,CAAC,EAAE,CAAC,CACrB,CAAE,CACH,CAAC,CACC,CAAC,cACNnB,IAAA,QAAA6B,QAAA,CACGT,KAAK,eACJpB,IAAA,CAACH,iBAAiB,EAAC0D,KAAK,CAAC,QAAQ,CAAEzB,SAAS,CAAC,kBAAkB,CAAAD,QAAA,CAC5DX,YAAY,CACI,CACpB,CACE,CAAC,EACH,CAAC,EACN,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module"}