{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/king/portal/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectDestructuringEmpty from\"/home/ubuntu/king/portal/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import React,{useEffect,useState}from\"react\";import CustomSelect from\"./CustomSelect\";import{jsx as _jsx}from\"react/jsx-runtime\";require(\"dotenv\").config();const baseUrl=process.env.REACT_APP_API_CP_DOMAIN;function WalletsListSelect(_ref){let props=Object.assign({},(_objectDestructuringEmpty(_ref),_ref));const wallets=props===null||props===void 0?void 0:props.wllates;const[options,setOptions]=useState([]);useEffect(()=>{wallets.map((wallet,index)=>{setOptions(options=>{options[index]={value:wallet,label:wallet.asset,image:getImgSrc(wallet)};return options;});});},[wallets]);const getImgSrc=wallet=>{//get image url\nif(wallet.image){return\"\".concat(baseUrl,\"/assets/\").concat(wallet.asset,\".png\");}else return\"images/logo/\".concat(wallet.asset,\".svg\");};return/*#__PURE__*/_jsx(CustomSelect,_objectSpread({options:options},props));}export default WalletsListSelect;","map":{"version":3,"names":["React","useEffect","useState","CustomSelect","jsx","_jsx","require","config","baseUrl","process","env","REACT_APP_API_CP_DOMAIN","WalletsListSelect","_ref","props","Object","assign","_objectDestructuringEmpty","wallets","wllates","options","setOptions","map","wallet","index","value","label","asset","image","getImgSrc","concat","_objectSpread"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/components/Common/WalletsListSelect.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CustomSelect from \"./CustomSelect\";\n\nrequire(\"dotenv\").config();\nconst baseUrl = process.env.REACT_APP_API_CP_DOMAIN;\n\nfunction WalletsListSelect({ ...props }) { \n  const wallets = props?.wllates;\n  const [options, setOptions] = useState([]); \n  useEffect(() => { \n    wallets.map((wallet, index) => {\n      setOptions(options => {\n        options[index] = {\n          value: wallet,\n          label: wallet.asset,\n          image: getImgSrc(wallet),\n        };\n        return options;\n      });\n    });\n  }, [wallets]);\n\n  const getImgSrc = (wallet) => {\n    //get image url\n    if (wallet.image) {\n      return `${baseUrl}/assets/${wallet.asset}.png`;\n    } else\n      return `images/logo/${wallet.asset}.svg`;\n  }; \n  return (\n    <CustomSelect\n      options={options}\n      {...props}\n    >\n    </CustomSelect>\n  );\n}\n\nexport default WalletsListSelect;"],"mappings":"6RAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1CC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC,CAC1B,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAEnD,QAAS,CAAAC,iBAAiBA,CAAAC,IAAA,CAAe,IAAT,CAAAC,KAAK,CAAAC,MAAA,CAAAC,MAAA,KAAAC,yBAAA,CAAAJ,IAAA,EAAAA,IAAA,GACnC,KAAM,CAAAK,OAAO,CAAGJ,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEK,OAAO,CAC9B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAC1CD,SAAS,CAAC,IAAM,CACdiB,OAAO,CAACI,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,GAAK,CAC7BH,UAAU,CAACD,OAAO,EAAI,CACpBA,OAAO,CAACI,KAAK,CAAC,CAAG,CACfC,KAAK,CAAEF,MAAM,CACbG,KAAK,CAAEH,MAAM,CAACI,KAAK,CACnBC,KAAK,CAAEC,SAAS,CAACN,MAAM,CACzB,CAAC,CACD,MAAO,CAAAH,OAAO,CAChB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAE,CAACF,OAAO,CAAC,CAAC,CAEb,KAAM,CAAAW,SAAS,CAAIN,MAAM,EAAK,CAC5B;AACA,GAAIA,MAAM,CAACK,KAAK,CAAE,CAChB,SAAAE,MAAA,CAAUtB,OAAO,aAAAsB,MAAA,CAAWP,MAAM,CAACI,KAAK,SAC1C,CAAC,IACC,sBAAAG,MAAA,CAAsBP,MAAM,CAACI,KAAK,SACtC,CAAC,CACD,mBACEtB,IAAA,CAACF,YAAY,CAAA4B,aAAA,EACXX,OAAO,CAAEA,OAAQ,EACbN,KAAK,CAEG,CAAC,CAEnB,CAEA,cAAe,CAAAF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}