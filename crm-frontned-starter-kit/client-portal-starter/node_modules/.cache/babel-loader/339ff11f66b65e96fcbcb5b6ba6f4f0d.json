{"ast":null,"code":"var UnicodeTrie = require('unicode-trie');\nvar data = require('./data.json');\nvar trieBuffer = require('./trie.json');\n\n// Trie is serialized as a Buffer in node, but here\n// we may be running in a browser so we make an Uint8Array\nvar trieData = new Uint8Array(trieBuffer.data);\nvar trie = new UnicodeTrie(trieData);\nvar log2 = Math.log2 || function (n) {\n  return Math.log(n) / Math.LN2;\n};\nvar bits = function bits(n) {\n  return log2(n) + 1 | 0;\n};\n\n// compute the number of bits stored for each field\nvar CATEGORY_BITS = bits(data.categories.length - 1);\nvar COMBINING_BITS = bits(data.combiningClasses.length - 1);\nvar SCRIPT_BITS = bits(data.scripts.length - 1);\nvar EAW_BITS = bits(data.eaw.length - 1);\nvar NUMBER_BITS = 10;\n\n// compute shift and mask values for each field\nvar CATEGORY_SHIFT = COMBINING_BITS + SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nvar COMBINING_SHIFT = SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nvar SCRIPT_SHIFT = EAW_BITS + NUMBER_BITS;\nvar EAW_SHIFT = NUMBER_BITS;\nvar CATEGORY_MASK = (1 << CATEGORY_BITS) - 1;\nvar COMBINING_MASK = (1 << COMBINING_BITS) - 1;\nvar SCRIPT_MASK = (1 << SCRIPT_BITS) - 1;\nvar EAW_MASK = (1 << EAW_BITS) - 1;\nvar NUMBER_MASK = (1 << NUMBER_BITS) - 1;\nvar getCategory = function getCategory(codePoint) {\n  var val = trie.get(codePoint);\n  return data.categories[val >> CATEGORY_SHIFT & CATEGORY_MASK];\n};\nvar getCombiningClass = function getCombiningClass(codePoint) {\n  var val = trie.get(codePoint);\n  return data.combiningClasses[val >> COMBINING_SHIFT & COMBINING_MASK];\n};\nvar getScript = function getScript(codePoint) {\n  var val = trie.get(codePoint);\n  return data.scripts[val >> SCRIPT_SHIFT & SCRIPT_MASK];\n};\nvar getEastAsianWidth = function getEastAsianWidth(codePoint) {\n  var val = trie.get(codePoint);\n  return data.eaw[val >> EAW_SHIFT & EAW_MASK];\n};\nvar getNumericValue = function getNumericValue(codePoint) {\n  var val = trie.get(codePoint);\n  var num = val & NUMBER_MASK;\n  if (num === 0) {\n    return null;\n  } else if (num <= 50) {\n    return num - 1;\n  } else if (num < 0x1e0) {\n    var numerator = (num >> 4) - 12;\n    var denominator = (num & 0xf) + 1;\n    return numerator / denominator;\n  } else if (num < 0x300) {\n    val = (num >> 5) - 14;\n    var exp = (num & 0x1f) + 2;\n    while (exp > 0) {\n      val *= 10;\n      exp--;\n    }\n    return val;\n  } else {\n    val = (num >> 2) - 0xbf;\n    var _exp = (num & 3) + 1;\n    while (_exp > 0) {\n      val *= 60;\n      _exp--;\n    }\n    return val;\n  }\n};\nvar isAlphabetic = function isAlphabetic(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Lu' || category === 'Ll' || category === 'Lt' || category === 'Lm' || category === 'Lo' || category === 'Nl';\n};\nvar isDigit = function isDigit(codePoint) {\n  return getCategory(codePoint) === 'Nd';\n};\nvar isPunctuation = function isPunctuation(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Pc' || category === 'Pd' || category === 'Pe' || category === 'Pf' || category === 'Pi' || category === 'Po' || category === 'Ps';\n};\nvar isLowerCase = function isLowerCase(codePoint) {\n  return getCategory(codePoint) === 'Ll';\n};\nvar isUpperCase = function isUpperCase(codePoint) {\n  return getCategory(codePoint) === 'Lu';\n};\nvar isTitleCase = function isTitleCase(codePoint) {\n  return getCategory(codePoint) === 'Lt';\n};\nvar isWhiteSpace = function isWhiteSpace(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Zs' || category === 'Zl' || category === 'Zp';\n};\nvar isBaseForm = function isBaseForm(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Nd' || category === 'No' || category === 'Nl' || category === 'Lu' || category === 'Ll' || category === 'Lt' || category === 'Lm' || category === 'Lo' || category === 'Me' || category === 'Mc';\n};\nvar isMark = function isMark(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Mn' || category === 'Me' || category === 'Mc';\n};\nvar index = {\n  getCategory: getCategory,\n  getCombiningClass: getCombiningClass,\n  getScript: getScript,\n  getEastAsianWidth: getEastAsianWidth,\n  getNumericValue: getNumericValue,\n  isAlphabetic: isAlphabetic,\n  isDigit: isDigit,\n  isPunctuation: isPunctuation,\n  isLowerCase: isLowerCase,\n  isUpperCase: isUpperCase,\n  isTitleCase: isTitleCase,\n  isWhiteSpace: isWhiteSpace,\n  isBaseForm: isBaseForm,\n  isMark: isMark\n};\nexport { getCategory, getCombiningClass, getScript, getEastAsianWidth, getNumericValue, isAlphabetic, isDigit, isPunctuation, isLowerCase, isUpperCase, isTitleCase, isWhiteSpace, isBaseForm, isMark };\nexport default index;","map":{"version":3,"names":["UnicodeTrie","require","data","trieBuffer","trieData","Uint8Array","trie","log2","Math","n","log","LN2","bits","CATEGORY_BITS","categories","length","COMBINING_BITS","combiningClasses","SCRIPT_BITS","scripts","EAW_BITS","eaw","NUMBER_BITS","CATEGORY_SHIFT","COMBINING_SHIFT","SCRIPT_SHIFT","EAW_SHIFT","CATEGORY_MASK","COMBINING_MASK","SCRIPT_MASK","EAW_MASK","NUMBER_MASK","getCategory","codePoint","val","get","getCombiningClass","getScript","getEastAsianWidth","getNumericValue","num","numerator","denominator","exp","_exp","isAlphabetic","category","isDigit","isPunctuation","isLowerCase","isUpperCase","isTitleCase","isWhiteSpace","isBaseForm","isMark","index"],"sources":["/home/ubuntu/king/portal/client-portal-starter/node_modules/@react-pdf/unicode-properties/dist/unicode-properties.es.js"],"sourcesContent":["var UnicodeTrie = require('unicode-trie');\nvar data = require('./data.json');\nvar trieBuffer = require('./trie.json');\n\n// Trie is serialized as a Buffer in node, but here\n// we may be running in a browser so we make an Uint8Array\nvar trieData = new Uint8Array(trieBuffer.data);\nvar trie = new UnicodeTrie(trieData);\n\nvar log2 = Math.log2 || function (n) {\n  return Math.log(n) / Math.LN2;\n};\nvar bits = function bits(n) {\n  return log2(n) + 1 | 0;\n};\n\n// compute the number of bits stored for each field\nvar CATEGORY_BITS = bits(data.categories.length - 1);\nvar COMBINING_BITS = bits(data.combiningClasses.length - 1);\nvar SCRIPT_BITS = bits(data.scripts.length - 1);\nvar EAW_BITS = bits(data.eaw.length - 1);\nvar NUMBER_BITS = 10;\n\n// compute shift and mask values for each field\nvar CATEGORY_SHIFT = COMBINING_BITS + SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nvar COMBINING_SHIFT = SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\nvar SCRIPT_SHIFT = EAW_BITS + NUMBER_BITS;\nvar EAW_SHIFT = NUMBER_BITS;\nvar CATEGORY_MASK = (1 << CATEGORY_BITS) - 1;\nvar COMBINING_MASK = (1 << COMBINING_BITS) - 1;\nvar SCRIPT_MASK = (1 << SCRIPT_BITS) - 1;\nvar EAW_MASK = (1 << EAW_BITS) - 1;\nvar NUMBER_MASK = (1 << NUMBER_BITS) - 1;\n\nvar getCategory = function getCategory(codePoint) {\n  var val = trie.get(codePoint);\n  return data.categories[val >> CATEGORY_SHIFT & CATEGORY_MASK];\n};\n\nvar getCombiningClass = function getCombiningClass(codePoint) {\n  var val = trie.get(codePoint);\n  return data.combiningClasses[val >> COMBINING_SHIFT & COMBINING_MASK];\n};\n\nvar getScript = function getScript(codePoint) {\n  var val = trie.get(codePoint);\n  return data.scripts[val >> SCRIPT_SHIFT & SCRIPT_MASK];\n};\n\nvar getEastAsianWidth = function getEastAsianWidth(codePoint) {\n  var val = trie.get(codePoint);\n  return data.eaw[val >> EAW_SHIFT & EAW_MASK];\n};\n\nvar getNumericValue = function getNumericValue(codePoint) {\n  var val = trie.get(codePoint);\n  var num = val & NUMBER_MASK;\n\n  if (num === 0) {\n    return null;\n  } else if (num <= 50) {\n    return num - 1;\n  } else if (num < 0x1e0) {\n    var numerator = (num >> 4) - 12;\n    var denominator = (num & 0xf) + 1;\n    return numerator / denominator;\n  } else if (num < 0x300) {\n    val = (num >> 5) - 14;\n    var exp = (num & 0x1f) + 2;\n\n    while (exp > 0) {\n      val *= 10;\n      exp--;\n    }\n    return val;\n  } else {\n    val = (num >> 2) - 0xbf;\n    var _exp = (num & 3) + 1;\n    while (_exp > 0) {\n      val *= 60;\n      _exp--;\n    }\n    return val;\n  }\n};\n\nvar isAlphabetic = function isAlphabetic(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Lu' || category === 'Ll' || category === 'Lt' || category === 'Lm' || category === 'Lo' || category === 'Nl';\n};\n\nvar isDigit = function isDigit(codePoint) {\n  return getCategory(codePoint) === 'Nd';\n};\n\nvar isPunctuation = function isPunctuation(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Pc' || category === 'Pd' || category === 'Pe' || category === 'Pf' || category === 'Pi' || category === 'Po' || category === 'Ps';\n};\n\nvar isLowerCase = function isLowerCase(codePoint) {\n  return getCategory(codePoint) === 'Ll';\n};\n\nvar isUpperCase = function isUpperCase(codePoint) {\n  return getCategory(codePoint) === 'Lu';\n};\n\nvar isTitleCase = function isTitleCase(codePoint) {\n  return getCategory(codePoint) === 'Lt';\n};\n\nvar isWhiteSpace = function isWhiteSpace(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Zs' || category === 'Zl' || category === 'Zp';\n};\n\nvar isBaseForm = function isBaseForm(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Nd' || category === 'No' || category === 'Nl' || category === 'Lu' || category === 'Ll' || category === 'Lt' || category === 'Lm' || category === 'Lo' || category === 'Me' || category === 'Mc';\n};\n\nvar isMark = function isMark(codePoint) {\n  var category = getCategory(codePoint);\n  return category === 'Mn' || category === 'Me' || category === 'Mc';\n};\n\nvar index = {\n  getCategory: getCategory,\n  getCombiningClass: getCombiningClass,\n  getScript: getScript,\n  getEastAsianWidth: getEastAsianWidth,\n  getNumericValue: getNumericValue,\n  isAlphabetic: isAlphabetic,\n  isDigit: isDigit,\n  isPunctuation: isPunctuation,\n  isLowerCase: isLowerCase,\n  isUpperCase: isUpperCase,\n  isTitleCase: isTitleCase,\n  isWhiteSpace: isWhiteSpace,\n  isBaseForm: isBaseForm,\n  isMark: isMark\n};\n\nexport { getCategory, getCombiningClass, getScript, getEastAsianWidth, getNumericValue, isAlphabetic, isDigit, isPunctuation, isLowerCase, isUpperCase, isTitleCase, isWhiteSpace, isBaseForm, isMark };\nexport default index;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}