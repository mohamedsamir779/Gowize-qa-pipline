{"ast":null,"code":"const{CONVERT_START,CONVERT_SUCCESS,CONVERT_FAIL,PREVIEW_CONVERSION_START,PREVIEW_CONVERSION_SUCCESS,PREVIEW_CONVERSION_FAIL,RESET_CONVERT_STATE}=require(\"./actionTypes\");export const convertStart=payload=>{return{type:CONVERT_START,payload};};export const convertSuccess=payload=>{return{type:CONVERT_SUCCESS,payload};};export const convertFailure=payload=>{return{type:CONVERT_FAIL,payload};};export const previewConversion=payload=>{return{type:PREVIEW_CONVERSION_START,payload};};export const previewConversionSuccess=payload=>{return{type:PREVIEW_CONVERSION_SUCCESS,payload};};export const previewConversionFail=payload=>{return{type:PREVIEW_CONVERSION_FAIL,payload};};export const resetConvert=payload=>{return{type:RESET_CONVERT_STATE,payload:payload};};","map":{"version":3,"names":["CONVERT_START","CONVERT_SUCCESS","CONVERT_FAIL","PREVIEW_CONVERSION_START","PREVIEW_CONVERSION_SUCCESS","PREVIEW_CONVERSION_FAIL","RESET_CONVERT_STATE","require","convertStart","payload","type","convertSuccess","convertFailure","previewConversion","previewConversionSuccess","previewConversionFail","resetConvert"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/convert/actions.js"],"sourcesContent":["const {\n  CONVERT_START,\n  CONVERT_SUCCESS,\n  CONVERT_FAIL,\n  PREVIEW_CONVERSION_START,\n  PREVIEW_CONVERSION_SUCCESS,\n  PREVIEW_CONVERSION_FAIL,\n  RESET_CONVERT_STATE\n} = require(\"./actionTypes\");\n\nexport const convertStart = (payload)=>{\n  return {\n    type:CONVERT_START,\n    payload\n  };\n};\n\nexport const convertSuccess = (payload)=>{\n  return {\n    type:CONVERT_SUCCESS,\n    payload\n  };\n};\n\nexport const convertFailure = (payload)=>{\n  return {\n    type:CONVERT_FAIL,\n    payload\n  };\n};\n\nexport const previewConversion = (payload)=>{\n  return {\n    type:PREVIEW_CONVERSION_START,\n    payload\n  };\n};\n\nexport const previewConversionSuccess = (payload)=>{\n  return {\n    type:PREVIEW_CONVERSION_SUCCESS,\n    payload\n  };\n};\n\nexport const previewConversionFail = (payload)=>{\n  return {\n    type:PREVIEW_CONVERSION_FAIL,\n    payload\n  };\n};\n\nexport const resetConvert = (payload)=>{\n  return {\n    type:RESET_CONVERT_STATE,\n    payload:payload\n  };\n};"],"mappings":"AAAA,KAAM,CACJA,aAAa,CACbC,eAAe,CACfC,YAAY,CACZC,wBAAwB,CACxBC,0BAA0B,CAC1BC,uBAAuB,CACvBC,mBACF,CAAC,CAAGC,OAAO,CAAC,eAAe,CAAC,CAE5B,MAAO,MAAM,CAAAC,YAAY,CAAIC,OAAO,EAAG,CACrC,MAAO,CACLC,IAAI,CAACV,aAAa,CAClBS,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAE,cAAc,CAAIF,OAAO,EAAG,CACvC,MAAO,CACLC,IAAI,CAACT,eAAe,CACpBQ,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAG,cAAc,CAAIH,OAAO,EAAG,CACvC,MAAO,CACLC,IAAI,CAACR,YAAY,CACjBO,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAI,iBAAiB,CAAIJ,OAAO,EAAG,CAC1C,MAAO,CACLC,IAAI,CAACP,wBAAwB,CAC7BM,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAK,wBAAwB,CAAIL,OAAO,EAAG,CACjD,MAAO,CACLC,IAAI,CAACN,0BAA0B,CAC/BK,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAM,qBAAqB,CAAIN,OAAO,EAAG,CAC9C,MAAO,CACLC,IAAI,CAACL,uBAAuB,CAC5BI,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAO,YAAY,CAAIP,OAAO,EAAG,CACrC,MAAO,CACLC,IAAI,CAACJ,mBAAmB,CACxBG,OAAO,CAACA,OACV,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}