{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _length = _interopRequireDefault(require(\"../attributedString/length\"));\nvar _slice = _interopRequireDefault(require(\"../attributedString/slice\"));\n\n/**\n * Breaks attributed string into paragraphs\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Array} attributed string array\n */\nvar splitParagraphs = function splitParagraphs() {\n  return function (attributedString) {\n    var res = [];\n    var start = 0;\n    var breakPoint = attributedString.string.indexOf('\\n') + 1;\n    while (breakPoint > 0) {\n      res.push((0, _slice[\"default\"])(start, breakPoint, attributedString));\n      start = breakPoint;\n      breakPoint = attributedString.string.indexOf('\\n', breakPoint) + 1;\n    }\n    if (start === 0) {\n      res.push(attributedString);\n    } else if (start < attributedString.string.length) {\n      res.push((0, _slice[\"default\"])(start, (0, _length[\"default\"])(attributedString), attributedString));\n    }\n    return res;\n  };\n};\nvar _default = splitParagraphs;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","_length","_slice","splitParagraphs","attributedString","res","start","breakPoint","string","indexOf","push","length","_default"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@react-pdf/textkit/layout/splitParagraphs.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _length = _interopRequireDefault(require(\"../attributedString/length\"));\n\nvar _slice = _interopRequireDefault(require(\"../attributedString/slice\"));\n\n/**\n * Breaks attributed string into paragraphs\n *\n * @param  {Object}  engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Array} attributed string array\n */\nvar splitParagraphs = function splitParagraphs() {\n  return function (attributedString) {\n    var res = [];\n    var start = 0;\n    var breakPoint = attributedString.string.indexOf('\\n') + 1;\n\n    while (breakPoint > 0) {\n      res.push((0, _slice[\"default\"])(start, breakPoint, attributedString));\n      start = breakPoint;\n      breakPoint = attributedString.string.indexOf('\\n', breakPoint) + 1;\n    }\n\n    if (start === 0) {\n      res.push(attributedString);\n    } else if (start < attributedString.string.length) {\n      res.push((0, _slice[\"default\"])(start, (0, _length[\"default\"])(attributedString), attributedString));\n    }\n\n    return res;\n  };\n};\n\nvar _default = splitParagraphs;\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpFC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,IAAIE,OAAO,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAE3E,IAAII,MAAM,GAAGL,sBAAsB,CAACC,OAAO,CAAC,2BAA2B,CAAC,CAAC;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,eAAe,GAAG,SAASA,eAAeA,CAAA,EAAG;EAC/C,OAAO,UAAUC,gBAAgB,EAAE;IACjC,IAAIC,GAAG,GAAG,EAAE;IACZ,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,UAAU,GAAGH,gBAAgB,CAACI,MAAM,CAACC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;IAE1D,OAAOF,UAAU,GAAG,CAAC,EAAE;MACrBF,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC,EAAER,MAAM,CAAC,SAAS,CAAC,EAAEI,KAAK,EAAEC,UAAU,EAAEH,gBAAgB,CAAC,CAAC;MACrEE,KAAK,GAAGC,UAAU;MAClBA,UAAU,GAAGH,gBAAgB,CAACI,MAAM,CAACC,OAAO,CAAC,IAAI,EAAEF,UAAU,CAAC,GAAG,CAAC;IACpE;IAEA,IAAID,KAAK,KAAK,CAAC,EAAE;MACfD,GAAG,CAACK,IAAI,CAACN,gBAAgB,CAAC;IAC5B,CAAC,MAAM,IAAIE,KAAK,GAAGF,gBAAgB,CAACI,MAAM,CAACG,MAAM,EAAE;MACjDN,GAAG,CAACK,IAAI,CAAC,CAAC,CAAC,EAAER,MAAM,CAAC,SAAS,CAAC,EAAEI,KAAK,EAAE,CAAC,CAAC,EAAEL,OAAO,CAAC,SAAS,CAAC,EAAEG,gBAAgB,CAAC,EAAEA,gBAAgB,CAAC,CAAC;IACtG;IAEA,OAAOC,GAAG;EACZ,CAAC;AACH,CAAC;AAED,IAAIO,QAAQ,GAAGT,eAAe;AAC9BJ,OAAO,CAAC,SAAS,CAAC,GAAGa,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}