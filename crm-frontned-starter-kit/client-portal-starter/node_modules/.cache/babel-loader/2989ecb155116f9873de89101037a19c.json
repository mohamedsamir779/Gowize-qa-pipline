{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{MARKETS_UPDATE}from\"../../general/sockets/actionTypes\";import{MARKETS_FETCH,MARKETS_FETCH_SUCCESSFUL,MARKETS_FETCH_FAILED}from\"./actionTypes\";const initialState={loading:false,error:\"\",markets:[],marketNames:[],clearingCounter:0,editClearingCounter:0,deleteClearingCounter:0};const updateMarkets=(currentMarkets,newData)=>{let updatedData=currentMarkets;updatedData=updatedData.map(market=>{const found=newData.find(x=>x.pairName===market.pairName);return _objectSpread(_objectSpread({},market),found);});return updatedData;};const getMarketNames=markets=>{return markets?markets.map(m=>m.pairName):[];};const marketsReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;// eslint-disable-next-line default-case\nswitch(action.type){case MARKETS_FETCH:state=_objectSpread(_objectSpread({},state),{},{loading:true});break;case MARKETS_UPDATE:// eslint-disable-next-line no-case-declarations\nconst markets=updateMarkets(state.markets,action.payload);state=_objectSpread(_objectSpread({},state),{},{markets});break;case MARKETS_FETCH_SUCCESSFUL:const marketNames=getMarketNames(action.payload);state=_objectSpread(_objectSpread({},state),{},{loading:false,markets:action.payload,marketNames});break;case MARKETS_FETCH_FAILED:state=_objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload.error});break;default:state=_objectSpread({},state);}return state;};export default marketsReducer;","map":{"version":3,"names":["MARKETS_UPDATE","MARKETS_FETCH","MARKETS_FETCH_SUCCESSFUL","MARKETS_FETCH_FAILED","initialState","loading","error","markets","marketNames","clearingCounter","editClearingCounter","deleteClearingCounter","updateMarkets","currentMarkets","newData","updatedData","map","market","found","find","x","pairName","_objectSpread","getMarketNames","m","marketsReducer","state","arguments","length","undefined","action","type","payload"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/markets/reducer.js"],"sourcesContent":["\nimport { MARKETS_UPDATE } from \"../../general/sockets/actionTypes\";\nimport {\n  MARKETS_FETCH,\n  MARKETS_FETCH_SUCCESSFUL,\n  MARKETS_FETCH_FAILED,\n} from \"./actionTypes\";\n\nconst initialState = {\n  loading: false,\n  error: \"\",\n  markets: [],\n  marketNames: [],\n  clearingCounter: 0,\n  editClearingCounter: 0,\n  deleteClearingCounter: 0,\n};\n\nconst updateMarkets = (currentMarkets, newData) => {\n  let updatedData = currentMarkets;\n  updatedData = updatedData.map((market) => {\n    const found = newData.find((x) => x.pairName === market.pairName);\n    return {\n      ...market,\n      ...found\n    };\n  });\n  return updatedData;\n};\n\nconst getMarketNames = (markets) => {\n  return markets ? markets.map(m => m.pairName ) : [];\n};\n\nconst marketsReducer = (state = initialState, action) => {\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case MARKETS_FETCH:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n    case MARKETS_UPDATE:\n      // eslint-disable-next-line no-case-declarations\n      const markets = updateMarkets(state.markets, action.payload);\n      state = {\n        ...state,\n        markets,\n      };\n      break;\n    case MARKETS_FETCH_SUCCESSFUL: \n      const marketNames = getMarketNames(action.payload);\n      state = {\n        ...state,\n        loading: false,\n        markets: action.payload,\n        marketNames,\n      };\n      break;\n    case MARKETS_FETCH_FAILED: \n      state = {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      };\n      break;\n    default:\n      state = { ...state };\n  }\n  return state;\n};\n\nexport default marketsReducer;\n"],"mappings":"yIACA,OAASA,cAAc,KAAQ,mCAAmC,CAClE,OACEC,aAAa,CACbC,wBAAwB,CACxBC,oBAAoB,KACf,eAAe,CAEtB,KAAM,CAAAC,YAAY,CAAG,CACnBC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,eAAe,CAAE,CAAC,CAClBC,mBAAmB,CAAE,CAAC,CACtBC,qBAAqB,CAAE,CACzB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGA,CAACC,cAAc,CAAEC,OAAO,GAAK,CACjD,GAAI,CAAAC,WAAW,CAAGF,cAAc,CAChCE,WAAW,CAAGA,WAAW,CAACC,GAAG,CAAEC,MAAM,EAAK,CACxC,KAAM,CAAAC,KAAK,CAAGJ,OAAO,CAACK,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,QAAQ,GAAKJ,MAAM,CAACI,QAAQ,CAAC,CACjE,OAAAC,aAAA,CAAAA,aAAA,IACKL,MAAM,EACNC,KAAK,EAEZ,CAAC,CAAC,CACF,MAAO,CAAAH,WAAW,CACpB,CAAC,CAED,KAAM,CAAAQ,cAAc,CAAIhB,OAAO,EAAK,CAClC,MAAO,CAAAA,OAAO,CAAGA,OAAO,CAACS,GAAG,CAACQ,CAAC,EAAIA,CAAC,CAACH,QAAS,CAAC,CAAG,EAAE,CACrD,CAAC,CAED,KAAM,CAAAI,cAAc,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGvB,YAAY,IAAE,CAAA0B,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAClD;AACA,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,CAAA9B,aAAa,CAChByB,KAAK,CAAAJ,aAAA,CAAAA,aAAA,IACAI,KAAK,MACRrB,OAAO,CAAE,IAAI,EACd,CACD,MACF,IAAK,CAAAL,cAAc,CACjB;AACA,KAAM,CAAAO,OAAO,CAAGK,aAAa,CAACc,KAAK,CAACnB,OAAO,CAAEuB,MAAM,CAACE,OAAO,CAAC,CAC5DN,KAAK,CAAAJ,aAAA,CAAAA,aAAA,IACAI,KAAK,MACRnB,OAAO,EACR,CACD,MACF,IAAK,CAAAL,wBAAwB,CAC3B,KAAM,CAAAM,WAAW,CAAGe,cAAc,CAACO,MAAM,CAACE,OAAO,CAAC,CAClDN,KAAK,CAAAJ,aAAA,CAAAA,aAAA,IACAI,KAAK,MACRrB,OAAO,CAAE,KAAK,CACdE,OAAO,CAAEuB,MAAM,CAACE,OAAO,CACvBxB,WAAW,EACZ,CACD,MACF,IAAK,CAAAL,oBAAoB,CACvBuB,KAAK,CAAAJ,aAAA,CAAAA,aAAA,IACAI,KAAK,MACRrB,OAAO,CAAE,KAAK,CACdC,KAAK,CAAEwB,MAAM,CAACE,OAAO,CAAC1B,KAAK,EAC5B,CACD,MACF,QACEoB,KAAK,CAAAJ,aAAA,IAAQI,KAAK,CAAE,CACxB,CACA,MAAO,CAAAA,KAAK,CACd,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}