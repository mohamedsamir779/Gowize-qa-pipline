{"ast":null,"code":"import{call,put,takeEvery}from\"redux-saga/effects\";// Crypto Redux States\nimport{GET_INVOICES,GET_INVOICE_DETAIL}from\"./actionTypes\";import{getInvoicesSuccess,getInvoicesFail,getInvoiceDetailSuccess,getInvoiceDetailFail}from\"./actions\";//Include Both Helper File with needed methods\nimport{getInvoices,getInvoiceDetail}from\"../../../helpers/fakebackend_helper\";function*fetchInvoices(){try{const response=yield call(getInvoices);yield put(getInvoicesSuccess(response));}catch(error){yield put(getInvoicesFail(error));}}function fetchInvoiceDetail(_ref){let{invoiceId}=_ref;return function*(){try{const response=yield call(getInvoiceDetail,invoiceId);yield put(getInvoiceDetailSuccess(response));}catch(error){yield put(getInvoiceDetailFail(error));}}();}function*invoiceSaga(){yield takeEvery(GET_INVOICES,fetchInvoices);yield takeEvery(GET_INVOICE_DETAIL,fetchInvoiceDetail);}export default invoiceSaga;","map":{"version":3,"names":["call","put","takeEvery","GET_INVOICES","GET_INVOICE_DETAIL","getInvoicesSuccess","getInvoicesFail","getInvoiceDetailSuccess","getInvoiceDetailFail","getInvoices","getInvoiceDetail","fetchInvoices","response","error","fetchInvoiceDetail","_ref","invoiceId","invoiceSaga"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/crypto/invoices/saga.js"],"sourcesContent":["import {\n  call, put, takeEvery \n} from \"redux-saga/effects\";\n\n// Crypto Redux States\nimport { GET_INVOICES, GET_INVOICE_DETAIL } from \"./actionTypes\";\nimport {\n  getInvoicesSuccess,\n  getInvoicesFail,\n  getInvoiceDetailSuccess,\n  getInvoiceDetailFail,\n} from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport { getInvoices, getInvoiceDetail } from \"../../../helpers/fakebackend_helper\";\n\nfunction* fetchInvoices() {\n  try {\n    const response = yield call(getInvoices);\n    yield put(getInvoicesSuccess(response));\n  } catch (error) {\n    yield put(getInvoicesFail(error));\n  }\n}\n\nfunction* fetchInvoiceDetail({ invoiceId }) {\n  try {\n    const response = yield call(getInvoiceDetail, invoiceId);\n    yield put(getInvoiceDetailSuccess(response));\n  } catch (error) {\n    yield put(getInvoiceDetailFail(error));\n  }\n}\n\nfunction* invoiceSaga() {\n  yield takeEvery(GET_INVOICES, fetchInvoices);\n  yield takeEvery(GET_INVOICE_DETAIL, fetchInvoiceDetail);\n}\n\nexport default invoiceSaga;\n"],"mappings":"AAAA,OACEA,IAAI,CAAEC,GAAG,CAAEC,SAAS,KACf,oBAAoB,CAE3B;AACA,OAASC,YAAY,CAAEC,kBAAkB,KAAQ,eAAe,CAChE,OACEC,kBAAkB,CAClBC,eAAe,CACfC,uBAAuB,CACvBC,oBAAoB,KACf,WAAW,CAElB;AACA,OAASC,WAAW,CAAEC,gBAAgB,KAAQ,qCAAqC,CAEnF,SAAUC,aAAaA,CAAA,CAAG,CACxB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,IAAI,CAACS,WAAW,CAAC,CACxC,KAAM,CAAAR,GAAG,CAACI,kBAAkB,CAACO,QAAQ,CAAC,CAAC,CACzC,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAZ,GAAG,CAACK,eAAe,CAACO,KAAK,CAAC,CAAC,CACnC,CACF,CAEA,QAAU,CAAAC,kBAAkBA,CAAAC,IAAA,KAAC,CAAEC,SAAU,CAAC,CAAAD,IAAA,mBAAE,CAC1C,GAAI,CACF,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAZ,IAAI,CAACU,gBAAgB,CAAEM,SAAS,CAAC,CACxD,KAAM,CAAAf,GAAG,CAACM,uBAAuB,CAACK,QAAQ,CAAC,CAAC,CAC9C,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,CAAAZ,GAAG,CAACO,oBAAoB,CAACK,KAAK,CAAC,CAAC,CACxC,CACF,CAAC,IAED,SAAUI,WAAWA,CAAA,CAAG,CACtB,KAAM,CAAAf,SAAS,CAACC,YAAY,CAAEQ,aAAa,CAAC,CAC5C,KAAM,CAAAT,SAAS,CAACE,kBAAkB,CAAEU,kBAAkB,CAAC,CACzD,CAEA,cAAe,CAAAG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}