{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _scale = _interopRequireDefault(require(\"./scale\"));\nvar _offset = _interopRequireDefault(require(\"./offset\"));\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\nvar slice = function slice(start, end, run) {\n  var runScale = (0, _scale[\"default\"])(run);\n  var font = (0, _getFont[\"default\"])(run); // Get glyph start and end indices\n\n  var glyphStartIndex = (0, _glyphIndexAt[\"default\"])(start, run);\n  var glyphEndIndex = (0, _glyphIndexAt[\"default\"])(end, run); // Get start and end glyph\n\n  var startGlyph = R.path(['glyphs', glyphStartIndex], run);\n  var endGlyph = R.path(['glyphs', glyphEndIndex], run); // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset[\"default\"])(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice[\"default\"])(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset[\"default\"])(end, run);\n  var endGlyphs = (0, _slice[\"default\"])(0, endOffset, font, endGlyph);\n  var sliceOffset = Math.min(1, startOffset);\n  return R.evolve({\n    start: R.add(start),\n    end: R.compose(R.apply(R.min), R.juxt([R.identity,\n    // string.end\n    R.o(R.add(end), R.always(run.start)) // end + string.start\n    ])),\n    glyphs: function glyphs(_glyphs) {\n      return R.flatten([startGlyphs, _glyphs.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs]);\n    },\n    positions: function positions(_positions) {\n      return R.flatten([startGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      }), _positions.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      })]);\n    },\n    glyphIndices: R.o(_normalize[\"default\"], R.slice(start, end)),\n    attributes: R.identity\n  })(run);\n};\nvar _default = R.curryN(3, slice);\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","_interopRequireWildcard","exports","__esModule","R","_scale","_offset","_getFont","_slice","_glyphIndexAt","_normalize","slice","start","end","run","runScale","font","glyphStartIndex","glyphEndIndex","startGlyph","path","endGlyph","startOffset","startGlyphs","Infinity","endOffset","endGlyphs","sliceOffset","Math","min","evolve","add","compose","apply","juxt","identity","o","always","glyphs","_glyphs","flatten","positions","_positions","map","g","xAdvance","advanceWidth","glyphIndices","attributes","_default","curryN"],"sources":["/home/ubuntu/king/portal/client-portal-starter/node_modules/@react-pdf/textkit/run/slice.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _scale = _interopRequireDefault(require(\"./scale\"));\n\nvar _offset = _interopRequireDefault(require(\"./offset\"));\n\nvar _getFont = _interopRequireDefault(require(\"./getFont\"));\n\nvar _slice = _interopRequireDefault(require(\"../glyph/slice\"));\n\nvar _glyphIndexAt = _interopRequireDefault(require(\"./glyphIndexAt\"));\n\nvar _normalize = _interopRequireDefault(require(\"../indices/normalize\"));\n\n/**\n * Slice run between glyph indices range\n *\n * @param  {number}  start glyph index\n * @param  {number}  end glyph index\n * @param  {Object}  run\n * @return {Object} sliced run\n */\nvar slice = function slice(start, end, run) {\n  var runScale = (0, _scale[\"default\"])(run);\n  var font = (0, _getFont[\"default\"])(run); // Get glyph start and end indices\n\n  var glyphStartIndex = (0, _glyphIndexAt[\"default\"])(start, run);\n  var glyphEndIndex = (0, _glyphIndexAt[\"default\"])(end, run); // Get start and end glyph\n\n  var startGlyph = R.path(['glyphs', glyphStartIndex], run);\n  var endGlyph = R.path(['glyphs', glyphEndIndex], run); // Get start ligature chunks (if any)\n\n  var startOffset = (0, _offset[\"default\"])(start, run);\n  var startGlyphs = startOffset > 0 ? (0, _slice[\"default\"])(startOffset, Infinity, font, startGlyph) : []; // Get end ligature chunks (if any)\n\n  var endOffset = (0, _offset[\"default\"])(end, run);\n  var endGlyphs = (0, _slice[\"default\"])(0, endOffset, font, endGlyph);\n  var sliceOffset = Math.min(1, startOffset);\n  return R.evolve({\n    start: R.add(start),\n    end: R.compose(R.apply(R.min), R.juxt([R.identity, // string.end\n    R.o(R.add(end), R.always(run.start)) // end + string.start\n    ])),\n    glyphs: function glyphs(_glyphs) {\n      return R.flatten([startGlyphs, _glyphs.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs]);\n    },\n    positions: function positions(_positions) {\n      return R.flatten([startGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      }), _positions.slice(glyphStartIndex + sliceOffset, glyphEndIndex), endGlyphs.map(function (g) {\n        return {\n          xAdvance: g.advanceWidth * runScale\n        };\n      })]);\n    },\n    glyphIndices: R.o(_normalize[\"default\"], R.slice(start, end)),\n    attributes: R.identity\n  })(run);\n};\n\nvar _default = R.curryN(3, slice);\n\nexports[\"default\"] = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}