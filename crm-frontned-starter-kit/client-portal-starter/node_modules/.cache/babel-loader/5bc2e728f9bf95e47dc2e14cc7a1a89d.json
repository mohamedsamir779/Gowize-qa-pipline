{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nvar AuthCode = function AuthCode(_ref) {\n  var _ref$characters = _ref.characters,\n    characters = _ref$characters === void 0 ? 6 : _ref$characters,\n    _ref$allowedCharacter = _ref.allowedCharacters,\n    allowedCharacters = _ref$allowedCharacter === void 0 ? '^[A-Za-z0-9]*$' : _ref$allowedCharacter,\n    onChange = _ref.onChange,\n    password = _ref.password,\n    inputStyle = _ref.inputStyle,\n    containerStyle = _ref.containerStyle,\n    inputClassName = _ref.inputClassName,\n    containerClassName = _ref.containerClassName;\n  var inputsRef = useRef([]);\n  useEffect(function () {\n    inputsRef.current[0].focus();\n  }, []);\n  var sendResult = function sendResult() {\n    var res = inputsRef.current.map(function (input) {\n      return input.value;\n    }).join('');\n    onChange(res);\n  };\n  var handleOnChange = function handleOnChange(e) {\n    if (e.target.value.match(allowedCharacters)) {\n      if (e.target.nextElementSibling !== null) {\n        e.target.nextElementSibling.focus();\n      }\n    } else {\n      e.target.value = '';\n    }\n    sendResult();\n  };\n  var handleOnKeyDown = function handleOnKeyDown(e) {\n    var key = e.key;\n    var target = e.target;\n    if (key === 'Backspace') {\n      if (target.value === '' && target.previousElementSibling !== null) {\n        if (target.previousElementSibling !== null) {\n          target.previousElementSibling.focus();\n          e.preventDefault();\n        }\n      } else {\n        target.value = '';\n      }\n      sendResult();\n    }\n  };\n  var handleOnFocus = function handleOnFocus(e) {\n    e.target.select();\n  };\n  var handleOnPaste = function handleOnPaste(e) {\n    var value = e.clipboardData.getData('Text');\n    if (value.match(allowedCharacters)) {\n      for (var i = 0; i < characters && i < value.length; i++) {\n        inputsRef.current[i].value = value.charAt(i);\n        if (inputsRef.current[i].nextElementSibling !== null) {\n          inputsRef.current[i].nextElementSibling.focus();\n        }\n      }\n      sendResult();\n    }\n    e.preventDefault();\n  };\n  var inputs = [];\n  var _loop = function _loop(i) {\n    inputs.push(React.createElement(\"input\", {\n      key: i,\n      onChange: handleOnChange,\n      onKeyDown: handleOnKeyDown,\n      onFocus: handleOnFocus,\n      onPaste: handleOnPaste,\n      type: password ? 'password' : 'text',\n      ref: function ref(el) {\n        return inputsRef.current[i] = el;\n      },\n      maxLength: 1,\n      className: inputClassName,\n      style: inputStyle\n    }));\n  };\n  for (var i = 0; i < characters; i++) {\n    _loop(i);\n  }\n  return React.createElement(\"div\", {\n    className: containerClassName,\n    style: containerStyle\n  }, inputs);\n};\nexport default AuthCode;","map":{"version":3,"sources":["../src/index.tsx"],"names":["AuthCode","characters","allowedCharacters","onChange","password","inputStyle","containerStyle","inputClassName","containerClassName","inputsRef","useRef","useEffect","current","focus","sendResult","res","map","input","value","join","handleOnChange","e","target","match","nextElementSibling","handleOnKeyDown","key","previousElementSibling","preventDefault","handleOnFocus","select","handleOnPaste","clipboardData","getData","i","length","charAt","inputs","push","onKeyDown","onFocus","onPaste","type","ref","el","maxLength","className","style"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\n\ntype Props = {\n  characters?: number;\n  allowedCharacters?: RegExp;\n  onChange: (res: string) => void;\n  password?: boolean;\n  /**\n   * @deprecated Since version 1.2.0 Will be deleted in version 2.0. Use inputClassName instead.\n   */\n  inputStyle?: React.CSSProperties;\n  /**\n   * @deprecated Since version 1.2.0 Will be deleted in version 2.0. Use containerClassName instead.\n   */\n  containerStyle?: React.CSSProperties;\n  inputClassName?: string;\n  containerClassName?: string;\n};\n\nconst AuthCode: React.FC<Props> = ({\n  characters = 6,\n  allowedCharacters = '^[A-Za-z0-9]*$',\n  onChange,\n  password,\n  inputStyle,\n  containerStyle,\n  inputClassName,\n  containerClassName\n}) => {\n  const inputsRef = useRef<Array<HTMLInputElement>>([]);\n\n  useEffect(() => {\n    inputsRef.current[0].focus();\n  }, []);\n\n  const sendResult = () => {\n    const res = inputsRef.current.map((input) => input.value).join('');\n    onChange(res);\n  };\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value.match(allowedCharacters)) {\n      if (e.target.nextElementSibling !== null) {\n        (e.target.nextElementSibling as HTMLInputElement).focus();\n      }\n    } else {\n      e.target.value = '';\n    }\n    sendResult();\n  };\n\n  const handleOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const { key } = e;\n    const target = e.target as HTMLInputElement;\n    if (key === 'Backspace') {\n      if (target.value === '' && target.previousElementSibling !== null) {\n        if (target.previousElementSibling !== null) {\n          (target.previousElementSibling as HTMLInputElement).focus();\n          e.preventDefault();\n        }\n      } else {\n        target.value = '';\n      }\n      sendResult();\n    }\n  };\n\n  const handleOnFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.select();\n  };\n\n  const handleOnPaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n    const value = e.clipboardData.getData('Text');\n    if (value.match(allowedCharacters)) {\n      for (let i = 0; i < characters && i < value.length; i++) {\n        inputsRef.current[i].value = value.charAt(i);\n        if (inputsRef.current[i].nextElementSibling !== null) {\n          (inputsRef.current[i].nextElementSibling as HTMLInputElement).focus();\n        }\n      }\n      sendResult();\n    }\n    e.preventDefault();\n  };\n\n  const inputs = [];\n  for (let i = 0; i < characters; i++) {\n    inputs.push(\n      <input\n        key={i}\n        onChange={handleOnChange}\n        onKeyDown={handleOnKeyDown}\n        onFocus={handleOnFocus}\n        onPaste={handleOnPaste}\n        type={password ? 'password' : 'text'}\n        ref={(el: HTMLInputElement) => (inputsRef.current[i] = el)}\n        maxLength={1}\n        className={inputClassName}\n        style={inputStyle}\n      />\n    );\n  }\n\n  return (\n    <div className={containerClassName} style={containerStyle}>\n      {inputs}\n    </div>\n  );\n};\n\nexport default AuthCode;\n"]},"metadata":{},"sourceType":"module"}