{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar ATTACHMENT_CODE = 0xfffc; // 65532\n\nvar mapIndexed = R.addIndex(R.map);\nvar getGlyphs = R.propOr([], 'glyphs');\nvar getAttachment = R.pathOr({}, ['attributes', 'attachment']);\nvar isReplaceGlyph = R.o(R.includes(ATTACHMENT_CODE), R.propOr([], 'codePoints'));\n/**\n * Resolve attachments of run\n *\n * @param  {Object}  run\n * @return {Object} run\n */\n\nvar resolveRunAttachments = function resolveRunAttachments(run) {\n  var glyphs = getGlyphs(run);\n  var attachment = getAttachment(run);\n  var attachmentWidth = R.always(attachment.width);\n  return R.evolve({\n    positions: mapIndexed(function (position, i) {\n      var glyph = glyphs[i];\n      if (attachment && attachment.width && isReplaceGlyph(glyph)) {\n        return R.evolve({\n          xAdvance: attachmentWidth\n        }, position);\n      }\n      return R.clone(position);\n    })\n  })(run);\n};\n/**\n * Resolve attachments for multiple paragraphs\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Array}  attributed strings (paragraphs)\n * @return {Array} attributed strings (paragraphs)\n */\n\nvar resolveAttachments = function resolveAttachments() {\n  return R.evolve({\n    runs: R.map(resolveRunAttachments)\n  });\n};\nvar _default = resolveAttachments;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","exports","__esModule","R","ATTACHMENT_CODE","mapIndexed","addIndex","map","getGlyphs","propOr","getAttachment","pathOr","isReplaceGlyph","o","includes","resolveRunAttachments","run","glyphs","attachment","attachmentWidth","always","width","evolve","positions","position","i","glyph","xAdvance","clone","resolveAttachments","runs","_default"],"sources":["/home/ubuntu/king/portal/client-portal-starter/node_modules/@react-pdf/textkit/layout/resolveAttachments.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar ATTACHMENT_CODE = 0xfffc; // 65532\n\nvar mapIndexed = R.addIndex(R.map);\nvar getGlyphs = R.propOr([], 'glyphs');\nvar getAttachment = R.pathOr({}, ['attributes', 'attachment']);\nvar isReplaceGlyph = R.o(R.includes(ATTACHMENT_CODE), R.propOr([], 'codePoints'));\n/**\n * Resolve attachments of run\n *\n * @param  {Object}  run\n * @return {Object} run\n */\n\nvar resolveRunAttachments = function resolveRunAttachments(run) {\n  var glyphs = getGlyphs(run);\n  var attachment = getAttachment(run);\n  var attachmentWidth = R.always(attachment.width);\n  return R.evolve({\n    positions: mapIndexed(function (position, i) {\n      var glyph = glyphs[i];\n\n      if (attachment && attachment.width && isReplaceGlyph(glyph)) {\n        return R.evolve({\n          xAdvance: attachmentWidth\n        }, position);\n      }\n\n      return R.clone(position);\n    })\n  })(run);\n};\n/**\n * Resolve attachments for multiple paragraphs\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Array}  attributed strings (paragraphs)\n * @return {Array} attributed strings (paragraphs)\n */\n\n\nvar resolveAttachments = function resolveAttachments() {\n  return R.evolve({\n    runs: R.map(resolveRunAttachments)\n  });\n};\n\nvar _default = resolveAttachments;\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC;AAEtFC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,IAAIE,CAAC,GAAGJ,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AAEjD,IAAII,eAAe,GAAG,MAAM,CAAC,CAAC;;AAE9B,IAAIC,UAAU,GAAGF,CAAC,CAACG,QAAQ,CAACH,CAAC,CAACI,GAAG,CAAC;AAClC,IAAIC,SAAS,GAAGL,CAAC,CAACM,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC;AACtC,IAAIC,aAAa,GAAGP,CAAC,CAACQ,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;AAC9D,IAAIC,cAAc,GAAGT,CAAC,CAACU,CAAC,CAACV,CAAC,CAACW,QAAQ,CAACV,eAAe,CAAC,EAAED,CAAC,CAACM,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;AACjF;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIM,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,GAAG,EAAE;EAC9D,IAAIC,MAAM,GAAGT,SAAS,CAACQ,GAAG,CAAC;EAC3B,IAAIE,UAAU,GAAGR,aAAa,CAACM,GAAG,CAAC;EACnC,IAAIG,eAAe,GAAGhB,CAAC,CAACiB,MAAM,CAACF,UAAU,CAACG,KAAK,CAAC;EAChD,OAAOlB,CAAC,CAACmB,MAAM,CAAC;IACdC,SAAS,EAAElB,UAAU,CAAC,UAAUmB,QAAQ,EAAEC,CAAC,EAAE;MAC3C,IAAIC,KAAK,GAAGT,MAAM,CAACQ,CAAC,CAAC;MAErB,IAAIP,UAAU,IAAIA,UAAU,CAACG,KAAK,IAAIT,cAAc,CAACc,KAAK,CAAC,EAAE;QAC3D,OAAOvB,CAAC,CAACmB,MAAM,CAAC;UACdK,QAAQ,EAAER;QACZ,CAAC,EAAEK,QAAQ,CAAC;MACd;MAEA,OAAOrB,CAAC,CAACyB,KAAK,CAACJ,QAAQ,CAAC;IAC1B,CAAC;EACH,CAAC,CAAC,CAACR,GAAG,CAAC;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIa,kBAAkB,GAAG,SAASA,kBAAkBA,CAAA,EAAG;EACrD,OAAO1B,CAAC,CAACmB,MAAM,CAAC;IACdQ,IAAI,EAAE3B,CAAC,CAACI,GAAG,CAACQ,qBAAqB;EACnC,CAAC,CAAC;AACJ,CAAC;AAED,IAAIgB,QAAQ,GAAGF,kBAAkB;AACjC5B,OAAO,CAAC,SAAS,CAAC,GAAG8B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}