{"ast":null,"code":"import{GENERATE_QR_CODE_START,GENERATE_QR_CODE_SUCCCESS,GENERATE_QR_CODE_ERROR,VERIFY_TWO_FACTOR_CODE_START,VERIFY_TWO_FACTOR_CODE_SUCCESS,VERIFY_TWO_FACTOR_CODE_FAIL}from\"./actionTypes\";export const verify2FACodeStart=payload=>{return{type:VERIFY_TWO_FACTOR_CODE_START,payload};};export const generateQRCodeStart=payload=>{return{type:GENERATE_QR_CODE_START,payload};};export const verify2FACodeSuccess=payload=>{return{type:VERIFY_TWO_FACTOR_CODE_SUCCESS,payload};};export const verify2FACodeFail=payload=>{return{type:VERIFY_TWO_FACTOR_CODE_FAIL,payload};};export const generateQRCodeSuccess=payload=>{return{type:GENERATE_QR_CODE_SUCCCESS,payload};};export const generateQRCodeError=payload=>{return{type:GENERATE_QR_CODE_ERROR,payload};};","map":{"version":3,"names":["GENERATE_QR_CODE_START","GENERATE_QR_CODE_SUCCCESS","GENERATE_QR_CODE_ERROR","VERIFY_TWO_FACTOR_CODE_START","VERIFY_TWO_FACTOR_CODE_SUCCESS","VERIFY_TWO_FACTOR_CODE_FAIL","verify2FACodeStart","payload","type","generateQRCodeStart","verify2FACodeSuccess","verify2FACodeFail","generateQRCodeSuccess","generateQRCodeError"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/store/general/auth/twoFactorAuth/actions.js"],"sourcesContent":["import {\n  GENERATE_QR_CODE_START, \n  GENERATE_QR_CODE_SUCCCESS,\n  GENERATE_QR_CODE_ERROR,\n  VERIFY_TWO_FACTOR_CODE_START,\n  VERIFY_TWO_FACTOR_CODE_SUCCESS,\n  VERIFY_TWO_FACTOR_CODE_FAIL \n} from \"./actionTypes\";\n\nexport const verify2FACodeStart = (payload) =>{\n  return {\n    type: VERIFY_TWO_FACTOR_CODE_START,\n    payload\n  };\n};\n\nexport const generateQRCodeStart = (payload)=>{\n  return {\n    type: GENERATE_QR_CODE_START,\n    payload\n  };\n};\n\nexport const verify2FACodeSuccess = (payload)=>{\n  return {\n    type: VERIFY_TWO_FACTOR_CODE_SUCCESS,\n    payload\n  };\n};\n\nexport const verify2FACodeFail = (payload)=>{\n  return {\n    type: VERIFY_TWO_FACTOR_CODE_FAIL,\n    payload\n  };\n};\n\nexport const generateQRCodeSuccess = (payload)=>{\n  return {\n    type: GENERATE_QR_CODE_SUCCCESS,\n    payload\n  };\n};\n\nexport const generateQRCodeError = (payload)=>{\n  return {\n    type: GENERATE_QR_CODE_ERROR,\n    payload\n  };\n};"],"mappings":"AAAA,OACEA,sBAAsB,CACtBC,yBAAyB,CACzBC,sBAAsB,CACtBC,4BAA4B,CAC5BC,8BAA8B,CAC9BC,2BAA2B,KACtB,eAAe,CAEtB,MAAO,MAAM,CAAAC,kBAAkB,CAAIC,OAAO,EAAI,CAC5C,MAAO,CACLC,IAAI,CAAEL,4BAA4B,CAClCI,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAE,mBAAmB,CAAIF,OAAO,EAAG,CAC5C,MAAO,CACLC,IAAI,CAAER,sBAAsB,CAC5BO,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAG,oBAAoB,CAAIH,OAAO,EAAG,CAC7C,MAAO,CACLC,IAAI,CAAEJ,8BAA8B,CACpCG,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAI,iBAAiB,CAAIJ,OAAO,EAAG,CAC1C,MAAO,CACLC,IAAI,CAAEH,2BAA2B,CACjCE,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAK,qBAAqB,CAAIL,OAAO,EAAG,CAC9C,MAAO,CACLC,IAAI,CAAEP,yBAAyB,CAC/BM,OACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAM,mBAAmB,CAAIN,OAAO,EAAG,CAC5C,MAAO,CACLC,IAAI,CAAEN,sBAAsB,CAC5BK,OACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}