{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/king/portal/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import CardWrapper from\"components/Common/CardWrapper\";import PageHeader from\"components/Forex/Common/PageHeader\";import{useEffect,useState}from\"react\";import{useTranslation}from\"react-i18next\";import{MetaTags}from\"react-meta-tags\";import{Button,Col,Container,FormGroup,Input,Label,Row,Spinner}from\"reactstrap\";import{AvForm,AvField}from\"availity-reactstrap-validation\";import AvFieldSelecvt from\"../../../../components/Common/AvFieldSelect\";import{useDispatch,useSelector}from\"react-redux\";import{createIbWalletTransfer,getAccountsStart,getClientIbAccounts}from\"store/actions\";import{getIbClients,getAllClientsIbAccounts}from\"store/forex/ib/clients/actions\";import{useHistory}from\"react-router-dom\";import IbNotApproved from\"components/Common/IbNotApproved\";import{CUSTOMER_SUB_PORTALS,PORTALS}from\"common/constants\";import{getIbWallet}from\"apis/forex/ib\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function InternalTransfer(){const{t}=useTranslation();const[transferDestination,setTransferDestination]=useState(1);const[ibAccounts,setIbAccounts]=useState([]);// client own accounts (from accounts) options\nconst[ownAccountsOptions,setOwnAccountsOptions]=useState([]);// client accounts (to accounts owned by the client) options \nconst[ibClients,setIbClients]=useState([]);const[toClientAccountOptions,setToClientAccountOptions]=useState([]);// eslint-disable-next-line no-unused-vars\nconst[allClientsAccounts,setAllClientsAccounts]=useState([]);const[fromAccountBalance,setFromAccountBalance]=useState();const{clients}=useSelector(state=>state.forex.ib.clients);const{loading}=useSelector(state=>state.forex.ib.transactions.ibInternalTransfer);const{subPortal,portal}=useSelector(state=>state.Layout);const{accounts}=useSelector(state=>state.forex.accounts);const{clientAccounts}=useSelector(state=>state.forex.ib.clients);// ib accounts owned by the client (from account)\nconst{ibClientAccounts}=useSelector(state=>state.forex.ib.clients);// all accounts under the IB user\nconst{allIbClientsAccounts,allIbClientsLoading}=useSelector(state=>state.forex.ib.clients);const{transferLoading,clearingCounter}=useSelector(state=>state.walletReducer);const partnershipAgreement=useSelector(state=>{var _state$Profile$client,_state$Profile$client2;return(_state$Profile$client=state.Profile.clientData.stages)===null||_state$Profile$client===void 0?void 0:(_state$Profile$client2=_state$Profile$client.ib)===null||_state$Profile$client2===void 0?void 0:_state$Profile$client2.partnershipAgreement;});const[isIbPortal]=useState(subPortal===CUSTOMER_SUB_PORTALS.IB);const history=useHistory();const dispatch=useDispatch();if(subPortal!==CUSTOMER_SUB_PORTALS.IB||portal&&!portal.includes(PORTALS.FOREX))history.push(\"/\");const handleSubmit=(e,v)=>{v.amount=parseInt(v.amount);// const fromAccount = ibClientAccounts.filter((account) => {\n//   return (\n//     account.login == v.tradingAccountFrom\n//   );\n// });\n// const fromAccountBalace = parseFloat(fromAccount[0]?.Equity);\n// if (fromAccountBalace > v.amount) {\n//   dispatch(ibInternalTransfer(v));\n// }\ndispatch(createIbWalletTransfer(_objectSpread({},v)));};const fromAccountChangeHandler=e=>{var _fromAccount$;const fromAccount=ibClientAccounts.filter(account=>{return account.login==e;});const result=parseFloat((_fromAccount$=fromAccount[0])===null||_fromAccount$===void 0?void 0:_fromAccount$.Equity);setFromAccountBalance(result);};const amountValidation=(value,ctx,input,cb)=>{if(parseFloat(value)>fromAccountBalance)cb(\"Not enought balance\");else cb(true);};useEffect(()=>{if((ibClientAccounts===null||ibClientAccounts===void 0?void 0:ibClientAccounts.length)>0){setIbAccounts(ibClientAccounts.map(account=>{return{label:account.login+\" - \"+account.Equity,value:account.login};}));}},[ibClientAccounts]);useEffect(()=>{// ib accounts owned by the client (from account)\ndispatch(getClientIbAccounts());// ib accounts owned by the client (to account) \ndispatch(getAccountsStart({type:\"LIVE\"}));dispatch(getIbClients({type:\"live\"}));},[clearingCounter]);useEffect(()=>{if((accounts===null||accounts===void 0?void 0:accounts.length)>0){setOwnAccountsOptions(accounts.map(account=>{return{label:account.login+\" - \"+account.Equity,value:account._id};}));}},[accounts]);useEffect(()=>{if((clients===null||clients===void 0?void 0:clients.length)>0){setIbClients(clients.map(client=>{return client._id;}));}},[clients]);const getIbClientsFunction=()=>{if((ibClients===null||ibClients===void 0?void 0:ibClients.length)>0){dispatch(getAllClientsIbAccounts({type:\"LIVE\",customersId:Object.values(ibClients)}));}setAllClientsAccounts(clientAccounts);};useEffect(()=>{if((allIbClientsAccounts===null||allIbClientsAccounts===void 0?void 0:allIbClientsAccounts.length)>0){let options=[];allIbClientsAccounts.map(account=>{account.docs.map(doc=>{options.push({label:doc.login+\" - \"+doc.Equity,value:doc._id});});});setToClientAccountOptions(options);}},[allIbClientsAccounts]);const[wallet,setWallet]=useState({amount:0,frozenAmount:0});const[walletLoading,setWalletLoading]=useState(false);useEffect(()=>{setWalletLoading(true);getIbWallet().then(res=>{if(res.isSuccess){setWallet(_objectSpread({},res.result));}else{throw new Error(res.message);}}).catch(err=>{console.log(err);}).finally(()=>{setWalletLoading(false);});},[clearingCounter]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MetaTags,{children:/*#__PURE__*/_jsx(\"title\",{children:t(\"Internal Transfer\")})}),/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",children:/*#__PURE__*/_jsxs(Container,{className:\"pt-5\",children:[isIbPortal&&!partnershipAgreement&&/*#__PURE__*/_jsx(IbNotApproved,{}),/*#__PURE__*/_jsx(PageHeader,{title:\"Internal Transfer\"}),/*#__PURE__*/_jsxs(CardWrapper,{className:\"mt-4 shadow glass-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between heading pb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"color-primary\",children:t(\"Internal Transfer\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsxs(FormGroup,{check:true,className:\"my-auto me-3\",children:[/*#__PURE__*/_jsx(Input,{name:\"toMyAccount\",id:\"toMyAccount\",type:\"radio\",checked:transferDestination===1,onChange:()=>{setTransferDestination(1);}}),/*#__PURE__*/_jsx(Label,{check:true,for:\"toMyAccount\",children:t(\"To My Account\")})]}),/*#__PURE__*/_jsxs(FormGroup,{check:true,className:\"my-auto\",children:[/*#__PURE__*/_jsx(Input,{name:\"toClientAccount\",type:\"radio\",id:\"toClientAccount\",checked:transferDestination===2,onChange:()=>{setTransferDestination(2);},onClick:()=>{getIbClientsFunction();}}),/*#__PURE__*/_jsx(Label,{check:true,for:\"toClientAccount\",children:t(\"To Client Account\")})]})]})]}),/*#__PURE__*/_jsxs(AvForm,{className:\"custom-form mt-4\",onValidSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,className:\"mb-3\",children:walletLoading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(AvFieldSelecvt,{name:\"fromId\",label:t(\"From Account\"),className:\"form-control\",type:\"select\",required:true,options:[{label:t(\"IB Wallet\")+\" - \"+wallet.amount,value:wallet===null||wallet===void 0?void 0:wallet._id}],onChange:fromAccountChangeHandler,maxHeight:150})})}),transferLoading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[transferDestination===1&&/*#__PURE__*/_jsx(Col,{xs:6,className:\"mb-3\",children:/*#__PURE__*/_jsx(AvFieldSelecvt,{name:\"toId\",label:t(\"To Account\"),type:\"select\",errorMessage:t(\"Enter To Account\"),validate:{required:{value:true}},options:ownAccountsOptions,disabled:(ownAccountsOptions===null||ownAccountsOptions===void 0?void 0:ownAccountsOptions.length)===0,maxHeight:150})}),transferDestination===2&&/*#__PURE__*/_jsx(Col,{xs:6,className:\"mb-3\",children:/*#__PURE__*/_jsx(AvFieldSelecvt,{name:\"toId\",label:t(\"To Account\"),type:\"select\",errorMessage:t(\"Enter To Account\"),validate:{required:{value:true}},options:toClientAccountOptions,loading:allIbClientsLoading,maxHeight:150})})]}),/*#__PURE__*/_jsx(Col,{xs:6,className:\"mb-3\",children:/*#__PURE__*/_jsx(AvField,{name:\"amount\",label:t(\"Amount\"),placeholder:t(\"Enter Amount\"),type:\"number\",min:\"0\",errorMessage:t(\"Enter Amount\"),validate:{required:{value:true},custom:amountValidation}})}),/*#__PURE__*/_jsx(Col,{xs:12,className:\"mb-3\",children:/*#__PURE__*/_jsx(AvField,{name:\"note\",label:t(\"Note\"),placeholder:t(\"Enter Note\"),type:\"text\",errorMessage:t(\"Enter Note\")})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center pt-3\",children:/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"color-bg-btn border-0 w-lg\",disabled:loading||transferLoading,children:loading||transferLoading?/*#__PURE__*/_jsx(Spinner,{}):t(\"Transfer\")})})]})]})]})})]});}export default InternalTransfer;","map":{"version":3,"names":["CardWrapper","PageHeader","useEffect","useState","useTranslation","MetaTags","Button","Col","Container","FormGroup","Input","Label","Row","Spinner","AvForm","AvField","AvFieldSelecvt","useDispatch","useSelector","createIbWalletTransfer","getAccountsStart","getClientIbAccounts","getIbClients","getAllClientsIbAccounts","useHistory","IbNotApproved","CUSTOMER_SUB_PORTALS","PORTALS","getIbWallet","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","InternalTransfer","t","transferDestination","setTransferDestination","ibAccounts","setIbAccounts","ownAccountsOptions","setOwnAccountsOptions","ibClients","setIbClients","toClientAccountOptions","setToClientAccountOptions","allClientsAccounts","setAllClientsAccounts","fromAccountBalance","setFromAccountBalance","clients","state","forex","ib","loading","transactions","ibInternalTransfer","subPortal","portal","Layout","accounts","clientAccounts","ibClientAccounts","allIbClientsAccounts","allIbClientsLoading","transferLoading","clearingCounter","walletReducer","partnershipAgreement","_state$Profile$client","_state$Profile$client2","Profile","clientData","stages","isIbPortal","IB","history","dispatch","includes","FOREX","push","handleSubmit","e","v","amount","parseInt","_objectSpread","fromAccountChangeHandler","_fromAccount$","fromAccount","filter","account","login","result","parseFloat","Equity","amountValidation","value","ctx","input","cb","length","map","label","type","_id","client","getIbClientsFunction","customersId","Object","values","options","docs","doc","wallet","setWallet","frozenAmount","walletLoading","setWalletLoading","then","res","isSuccess","Error","message","catch","err","console","log","finally","children","className","title","check","name","id","checked","onChange","for","onClick","onValidSubmit","xs","required","maxHeight","errorMessage","validate","disabled","placeholder","min","custom"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/pages/Forex/Partnership/InternalTransfer/index.js"],"sourcesContent":["import CardWrapper from \"components/Common/CardWrapper\";\nimport PageHeader from \"components/Forex/Common/PageHeader\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MetaTags } from \"react-meta-tags\";\nimport {\n  Button,\n  Col,\n  Container, FormGroup, Input, Label, Row, Spinner\n} from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport AvFieldSelecvt from \"../../../../components/Common/AvFieldSelect\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createIbWalletTransfer,\n  getAccountsStart,\n  getClientIbAccounts\n} from \"store/actions\";\nimport { getIbClients, getAllClientsIbAccounts } from \"store/forex/ib/clients/actions\";\nimport { useHistory } from \"react-router-dom\";\nimport IbNotApproved from \"components/Common/IbNotApproved\";\nimport { CUSTOMER_SUB_PORTALS, PORTALS } from \"common/constants\";\nimport { getIbWallet } from \"apis/forex/ib\";\n\nfunction InternalTransfer() {\n  const { t } = useTranslation();\n  const [transferDestination, setTransferDestination] = useState(1);\n  const [ibAccounts, setIbAccounts] = useState([]); // client own accounts (from accounts) options\n  const [ownAccountsOptions, setOwnAccountsOptions] = useState([]);  // client accounts (to accounts owned by the client) options \n  const [ibClients, setIbClients] = useState([]);\n  const [toClientAccountOptions, setToClientAccountOptions] = useState([]);\n  // eslint-disable-next-line no-unused-vars\n  const [allClientsAccounts, setAllClientsAccounts] = useState([]);\n  const [fromAccountBalance, setFromAccountBalance] = useState();\n  const { clients } = useSelector(state => state.forex.ib.clients);\n  const { loading } = useSelector(state => state.forex.ib.transactions.ibInternalTransfer);\n  const { subPortal, portal } = useSelector(state => state.Layout);\n  const { accounts } = useSelector(state => state.forex.accounts);\n  const { clientAccounts } = useSelector(state => state.forex.ib.clients);\n  // ib accounts owned by the client (from account)\n  const { ibClientAccounts } = useSelector(state => state.forex.ib.clients);\n  // all accounts under the IB user\n  const { allIbClientsAccounts, allIbClientsLoading } = useSelector(state => state.forex.ib.clients);\n  const { transferLoading, clearingCounter } = useSelector(state => state.walletReducer);\n\n  const partnershipAgreement = useSelector((state) => (state.Profile.clientData.stages?.ib?.partnershipAgreement));\n  const [isIbPortal] = useState(subPortal === CUSTOMER_SUB_PORTALS.IB);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  if (subPortal !== CUSTOMER_SUB_PORTALS.IB || (portal && !portal.includes(PORTALS.FOREX)))\n    history.push(\"/\");\n\n  const handleSubmit = (e, v) => {\n    v.amount = parseInt(v.amount);\n    // const fromAccount = ibClientAccounts.filter((account) => {\n    //   return (\n    //     account.login == v.tradingAccountFrom\n    //   );\n    // });\n    // const fromAccountBalace = parseFloat(fromAccount[0]?.Equity);\n    // if (fromAccountBalace > v.amount) {\n    //   dispatch(ibInternalTransfer(v));\n    // }\n    dispatch(createIbWalletTransfer({\n      ...v,\n    }));\n  };\n\n  const fromAccountChangeHandler = (e) => {\n    const fromAccount = ibClientAccounts.filter((account) => {\n      return (\n        account.login == e\n      );\n    });\n    const result = parseFloat(fromAccount[0]?.Equity);\n    setFromAccountBalance(result);\n  };\n\n  const amountValidation = (value, ctx, input, cb) => {\n    if (parseFloat(value) > fromAccountBalance) cb(\"Not enought balance\");\n    else cb(true);\n  };\n\n  useEffect(() => {\n    if (ibClientAccounts?.length > 0) {\n      setIbAccounts(ibClientAccounts.map((account) => {\n        return (\n          {\n            label: account.login + \" - \" + account.Equity,\n            value: account.login\n          }\n        );\n      }));\n    }\n  }, [ibClientAccounts]);\n\n  useEffect(() => {\n    // ib accounts owned by the client (from account)\n    dispatch(getClientIbAccounts());\n\n    // ib accounts owned by the client (to account) \n    dispatch(getAccountsStart({\n      type: \"LIVE\"\n    }));\n    dispatch(getIbClients({\n      type: \"live\"\n    }));\n  }, [clearingCounter]);\n\n  useEffect(() => {\n    if (accounts?.length > 0) {\n      setOwnAccountsOptions(\n        accounts.map((account) => {\n          return (\n            {\n              label: account.login + \" - \" + account.Equity,\n              value: account._id,\n            }\n          );\n        })\n      );\n    }\n  }, [accounts]);\n\n  useEffect(() => {\n    if (clients?.length > 0) {\n      setIbClients(clients.map((client) => {\n        return (\n          client._id\n        );\n      }));\n    }\n  }, [clients]);\n\n  const getIbClientsFunction = () => {\n    if (ibClients?.length > 0) {\n      dispatch(getAllClientsIbAccounts({\n        type: \"LIVE\",\n        customersId: Object.values(ibClients)\n      }));\n    }\n    setAllClientsAccounts(clientAccounts);\n  };\n\n  useEffect(() => {\n    if (allIbClientsAccounts?.length > 0) {\n      let options = [];\n      allIbClientsAccounts.map((account) => {\n        account.docs.map((doc) => {\n          options.push({\n            label: doc.login + \" - \" + doc.Equity,\n            value: doc._id,\n          });\n        });\n      }\n      );\n      setToClientAccountOptions(options);\n    }\n  }, [allIbClientsAccounts]);\n\n  const [wallet, setWallet] = useState({\n    amount: 0,\n    frozenAmount: 0,\n  });\n  const [walletLoading, setWalletLoading] = useState(false);\n\n  useEffect(()=>{\n    setWalletLoading(true);\n    getIbWallet().then((res)=>{\n      if (res.isSuccess) {\n        setWallet({\n          ...res.result,\n        });\n      } else {\n        throw new Error(res.message);\n      }\n    }).catch((err)=>{\n      console.log(err);\n    }).finally(()=>{\n      setWalletLoading(false);\n    });\n  }, [clearingCounter]);\n\n  return (<>\n    <MetaTags>\n      <title>{t(\"Internal Transfer\")}</title>\n    </MetaTags>\n    <div className=\"page-content\">\n      <Container className=\"pt-5\">\n        {isIbPortal && !partnershipAgreement && <IbNotApproved />}\n        <PageHeader title=\"Internal Transfer\"></PageHeader>\n        <CardWrapper className=\"mt-4 shadow glass-card\">\n          <div className=\"d-flex justify-content-between heading pb-2\">\n            <h4 className=\"color-primary\">{t(\"Internal Transfer\")}</h4>\n            <div className=\"d-flex\">\n              <FormGroup\n                check\n                className=\"my-auto me-3\"\n              >\n                <Input\n                  name=\"toMyAccount\"\n                  id=\"toMyAccount\"\n                  type=\"radio\"\n                  checked={transferDestination === 1}\n                  onChange={() => { setTransferDestination(1) }}\n                />\n                <Label check for=\"toMyAccount\">\n                  {t(\"To My Account\")}\n                </Label>\n              </FormGroup>\n              <FormGroup check className=\"my-auto\">\n                <Input\n                  name=\"toClientAccount\"\n                  type=\"radio\"\n                  id=\"toClientAccount\"\n                  checked={transferDestination === 2}\n                  onChange={() => { setTransferDestination(2) }}\n                  onClick={() => { getIbClientsFunction() }}\n                />\n                <Label check for=\"toClientAccount\">\n                  {t(\"To Client Account\")}\n                </Label>\n              </FormGroup>\n            </div>\n          </div>\n          <AvForm\n            className=\"custom-form mt-4\"\n            onValidSubmit={handleSubmit}\n          >\n            <Row>\n              <Col xs={12} className=\"mb-3\">\n                {\n                  walletLoading ? <Spinner /> :\n                    <>\n                      <AvFieldSelecvt\n                        name=\"fromId\"\n                        label={t(\"From Account\")}\n                        className=\"form-control\"\n                        type=\"select\"\n                        required\n                        options={[\n                          {\n                            label: t(\"IB Wallet\") + \" - \" + wallet.amount,\n                            value: wallet?._id\n                          }\n                        ]}\n                        onChange={fromAccountChangeHandler}\n                        maxHeight={150}\n                      />\n                    </>\n                }\n              </Col>\n              {\n                transferLoading ? <Spinner /> :\n                  <>\n                    {transferDestination === 1 && <Col xs={6} className=\"mb-3\">\n                      <AvFieldSelecvt\n                        name=\"toId\"\n                        label={t(\"To Account\")}\n                        type=\"select\"\n                        errorMessage={t(\"Enter To Account\")}\n                        validate={{ required: { value: true } }}\n                        options={ownAccountsOptions}\n                        disabled={ownAccountsOptions?.length === 0}\n                        maxHeight={150}\n                      />\n                    </Col>}\n                    {transferDestination === 2 && <Col xs={6} className=\"mb-3\">\n                      <AvFieldSelecvt\n                        name=\"toId\"\n                        label={t(\"To Account\")}\n                        type=\"select\"\n                        errorMessage={t(\"Enter To Account\")}\n                        validate={{ required: { value: true } }}\n                        options={toClientAccountOptions}\n                        loading={allIbClientsLoading}\n                        maxHeight={150}\n                      />\n                    </Col>}\n                  </>\n              }\n              <Col xs={6} className=\"mb-3\">\n                <AvField\n                  name=\"amount\"\n                  label={t(\"Amount\")}\n                  placeholder={t(\"Enter Amount\")}\n                  type=\"number\"\n                  min=\"0\"\n                  errorMessage={t(\"Enter Amount\")}\n                  validate={\n                    {\n                      required: { value: true },\n                      custom: amountValidation\n                    }\n                  }\n                />\n              </Col>\n              <Col xs={12} className=\"mb-3\">\n                <AvField\n                  name=\"note\"\n                  label={t(\"Note\")}\n                  placeholder={t(\"Enter Note\")}\n                  type=\"text\"\n                  errorMessage={t(\"Enter Note\")}\n                />\n              </Col>\n            </Row>\n            <div className=\"text-center pt-3\">\n              <Button type=\"submit\" className=\"color-bg-btn border-0 w-lg\" disabled={loading || transferLoading}>\n                {(loading || transferLoading) ? <Spinner></Spinner> : t(\"Transfer\")}\n              </Button>\n            </div>\n          </AvForm>\n        </CardWrapper>\n      </Container>\n    </div>\n  </>);\n}\n\nexport default InternalTransfer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}