{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{GET_IB_CLIENTS_START,GET_IB_CLIENTS_SUCCESS,GET_IB_CLIENT_ACCOUNTS_START,GET_IB_CLIENT_ACCOUNTS_SUCCESS,GET_IB_CLIENT_ACCOUNT_ACTIVITIES_START,GET_IB_CLIENT_ACCOUNT_ACTIVITIES_SUCCESS,GET_CLIENT_IB_ACCOUNTS_START,GET_CLIENT_IB_ACCOUNTS_SUCCESS,GET_CLIENT_IB_ACCOUNTS_FAILURE,GET_ALL_CLIENTS_IB_ACCOUNTS_START,GET_ALL_CLIENTS_IB_ACCOUNTS_SUCCESS,GET_ALL_CLIENTS_IB_ACCOUNTS_FAILURE}from\"./actionTypes\";const initialState={clients:[],loading:false,clientAccounts:[],clientAccountsLoading:false,clientAccountActivity:{docs:[],loading:false}};const ibClients=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_IB_CLIENTS_START:return _objectSpread(_objectSpread({},state),{},{loading:true});case GET_IB_CLIENTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,clients:action.payload?action.payload[0].childs:[]});case GET_IB_CLIENT_ACCOUNTS_START:return _objectSpread(_objectSpread({},state),{},{clientAccountsLoading:true,clientAccounts:[]});case GET_IB_CLIENT_ACCOUNTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{clientAccountsLoading:false,clientAccounts:action.payload.docs});case GET_IB_CLIENT_ACCOUNT_ACTIVITIES_START:return _objectSpread(_objectSpread({},state),{},{clientAccountActivity:{docs:[],loading:true}});case GET_IB_CLIENT_ACCOUNT_ACTIVITIES_SUCCESS:return _objectSpread(_objectSpread({},state),{},{clientAccountActivity:_objectSpread(_objectSpread({},action.payload),{},{loading:false})});// get ib client accounts (owned by the client ibMT4 + ibMT5)\ncase GET_CLIENT_IB_ACCOUNTS_START:return _objectSpread({},state);case GET_CLIENT_IB_ACCOUNTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{ibClientAccounts:action.payload.result});case GET_CLIENT_IB_ACCOUNTS_FAILURE:return _objectSpread(_objectSpread({},state),{},{ibClientAccountsError:action.payload.error});// get all clients accounts\ncase GET_ALL_CLIENTS_IB_ACCOUNTS_START:return _objectSpread(_objectSpread({},state),{},{allIbClientsLoading:true});case GET_ALL_CLIENTS_IB_ACCOUNTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{allIbClientsAccounts:action.payload.result,allIbClientsLoading:false});case GET_ALL_CLIENTS_IB_ACCOUNTS_FAILURE:return _objectSpread(_objectSpread({},state),{},{allIbClientsAccountsError:action.payload.error,allIbClientsLoading:false});default:return state;}};export default ibClients;","map":{"version":3,"names":["GET_IB_CLIENTS_START","GET_IB_CLIENTS_SUCCESS","GET_IB_CLIENT_ACCOUNTS_START","GET_IB_CLIENT_ACCOUNTS_SUCCESS","GET_IB_CLIENT_ACCOUNT_ACTIVITIES_START","GET_IB_CLIENT_ACCOUNT_ACTIVITIES_SUCCESS","GET_CLIENT_IB_ACCOUNTS_START","GET_CLIENT_IB_ACCOUNTS_SUCCESS","GET_CLIENT_IB_ACCOUNTS_FAILURE","GET_ALL_CLIENTS_IB_ACCOUNTS_START","GET_ALL_CLIENTS_IB_ACCOUNTS_SUCCESS","GET_ALL_CLIENTS_IB_ACCOUNTS_FAILURE","initialState","clients","loading","clientAccounts","clientAccountsLoading","clientAccountActivity","docs","ibClients","state","arguments","length","undefined","action","type","_objectSpread","payload","childs","ibClientAccounts","result","ibClientAccountsError","error","allIbClientsLoading","allIbClientsAccounts","allIbClientsAccountsError"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/store/forex/ib/clients/reducer.js"],"sourcesContent":["import {\n  GET_IB_CLIENTS_START, GET_IB_CLIENTS_SUCCESS, \n  GET_IB_CLIENT_ACCOUNTS_START, GET_IB_CLIENT_ACCOUNTS_SUCCESS,\n  GET_IB_CLIENT_ACCOUNT_ACTIVITIES_START,\n  GET_IB_CLIENT_ACCOUNT_ACTIVITIES_SUCCESS,\n\n  GET_CLIENT_IB_ACCOUNTS_START,\n  GET_CLIENT_IB_ACCOUNTS_SUCCESS,\n  GET_CLIENT_IB_ACCOUNTS_FAILURE,\n\n  GET_ALL_CLIENTS_IB_ACCOUNTS_START,\n  GET_ALL_CLIENTS_IB_ACCOUNTS_SUCCESS,\n  GET_ALL_CLIENTS_IB_ACCOUNTS_FAILURE,\n} from \"./actionTypes\";\n\nconst initialState = {\n  clients: [],\n  loading: false,\n  clientAccounts:[],\n  clientAccountsLoading:false,\n  clientAccountActivity:{\n    docs:[],\n    loading:false\n  },\n\n};\nconst ibClients = (state = initialState, action)=>{\n  switch (action.type) {\n    case GET_IB_CLIENTS_START:\n      return {\n        ...state,\n        loading:true,\n      };\n    case GET_IB_CLIENTS_SUCCESS:\n      return {\n        ...state,\n        loading:false,\n        clients:action.payload ? action.payload[0].childs : []\n      };    \n    case GET_IB_CLIENT_ACCOUNTS_START:\n      return {\n        ...state,\n        clientAccountsLoading:true,\n        clientAccounts:[]\n      };\n    case GET_IB_CLIENT_ACCOUNTS_SUCCESS:\n      return {\n        ...state,\n        clientAccountsLoading: false,\n        clientAccounts:action.payload.docs,\n      };\n    case GET_IB_CLIENT_ACCOUNT_ACTIVITIES_START:\n      return {\n        ...state,\n        clientAccountActivity: {\n          docs:[],\n          loading: true\n        },\n      };\n    case GET_IB_CLIENT_ACCOUNT_ACTIVITIES_SUCCESS:\n      return {\n        ...state,\n        clientAccountActivity:{\n          ...action.payload,\n          loading: false\n        }\n      };\n    \n    // get ib client accounts (owned by the client ibMT4 + ibMT5)\n    case GET_CLIENT_IB_ACCOUNTS_START:\n      return {\n        ...state,\n      };\n    case GET_CLIENT_IB_ACCOUNTS_SUCCESS:\n      return {\n        ...state,\n        ibClientAccounts: action.payload.result\n      };\n    case GET_CLIENT_IB_ACCOUNTS_FAILURE:\n      return {\n        ...state,\n        ibClientAccountsError: action.payload.error\n      };\n\n    // get all clients accounts\n    case GET_ALL_CLIENTS_IB_ACCOUNTS_START:\n      return {\n        ...state,\n        allIbClientsLoading: true\n      };\n    case GET_ALL_CLIENTS_IB_ACCOUNTS_SUCCESS:\n      return {\n        ...state,\n        allIbClientsAccounts: action.payload.result,\n        allIbClientsLoading: false\n      };\n    case GET_ALL_CLIENTS_IB_ACCOUNTS_FAILURE:\n      return {\n        ...state,\n        allIbClientsAccountsError: action.payload.error,\n        allIbClientsLoading: false\n      };\n    \n    default:\n      return state;\n  }\n};\nexport default ibClients;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}