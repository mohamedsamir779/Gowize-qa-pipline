{"ast":null,"code":"import e from \"react\";\nvar r = \"undefined\" != typeof globalThis ? globalThis : \"undefined\" != typeof window ? window : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : {},\n  t = {\n    visa: {\n      niceType: \"Visa\",\n      type: \"visa\",\n      patterns: [4],\n      gaps: [4, 8, 12],\n      lengths: [16, 18, 19],\n      code: {\n        name: \"CVV\",\n        size: 3\n      }\n    },\n    mastercard: {\n      niceType: \"Mastercard\",\n      type: \"mastercard\",\n      patterns: [[51, 55], [2221, 2229], [223, 229], [23, 26], [270, 271], 2720],\n      gaps: [4, 8, 12],\n      lengths: [16],\n      code: {\n        name: \"CVC\",\n        size: 3\n      }\n    },\n    \"american-express\": {\n      niceType: \"American Express\",\n      type: \"american-express\",\n      patterns: [34, 37],\n      gaps: [4, 10],\n      lengths: [15],\n      code: {\n        name: \"CID\",\n        size: 4\n      }\n    },\n    \"diners-club\": {\n      niceType: \"Diners Club\",\n      type: \"diners-club\",\n      patterns: [[300, 305], 36, 38, 39],\n      gaps: [4, 10],\n      lengths: [14, 16, 19],\n      code: {\n        name: \"CVV\",\n        size: 3\n      }\n    },\n    discover: {\n      niceType: \"Discover\",\n      type: \"discover\",\n      patterns: [6011, [644, 649], 65],\n      gaps: [4, 8, 12],\n      lengths: [16, 19],\n      code: {\n        name: \"CID\",\n        size: 3\n      }\n    },\n    jcb: {\n      niceType: \"JCB\",\n      type: \"jcb\",\n      patterns: [2131, 1800, [3528, 3589]],\n      gaps: [4, 8, 12],\n      lengths: [16, 17, 18, 19],\n      code: {\n        name: \"CVV\",\n        size: 3\n      }\n    },\n    unionpay: {\n      niceType: \"UnionPay\",\n      type: \"unionpay\",\n      patterns: [620, [624, 626], [62100, 62182], [62184, 62187], [62185, 62197], [62200, 62205], [622010, 622999], 622018, [622019, 622999], [62207, 62209], [622126, 622925], [623, 626], 6270, 6272, 6276, [627700, 627779], [627781, 627799], [6282, 6289], 6291, 6292, 810, [8110, 8131], [8132, 8151], [8152, 8163], [8164, 8171]],\n      gaps: [4, 8, 12],\n      lengths: [14, 15, 16, 17, 18, 19],\n      code: {\n        name: \"CVN\",\n        size: 3\n      }\n    },\n    maestro: {\n      niceType: \"Maestro\",\n      type: \"maestro\",\n      patterns: [493698, [5e5, 504174], [504176, 506698], [506779, 508999], [56, 59], 63, 67, 6],\n      gaps: [4, 8, 12],\n      lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n      code: {\n        name: \"CVC\",\n        size: 3\n      }\n    },\n    elo: {\n      niceType: \"Elo\",\n      type: \"elo\",\n      patterns: [401178, 401179, 438935, 457631, 457632, 431274, 451416, 457393, 504175, [506699, 506778], [509e3, 509999], 627780, 636297, 636368, [650031, 650033], [650035, 650051], [650405, 650439], [650485, 650538], [650541, 650598], [650700, 650718], [650720, 650727], [650901, 650978], [651652, 651679], [655e3, 655019], [655021, 655058]],\n      gaps: [4, 8, 12],\n      lengths: [16],\n      code: {\n        name: \"CVE\",\n        size: 3\n      }\n    },\n    mir: {\n      niceType: \"Mir\",\n      type: \"mir\",\n      patterns: [[2200, 2204]],\n      gaps: [4, 8, 12],\n      lengths: [16, 17, 18, 19],\n      code: {\n        name: \"CVP2\",\n        size: 3\n      }\n    },\n    hiper: {\n      niceType: \"Hiper\",\n      type: \"hiper\",\n      patterns: [637095, 63737423, 63743358, 637568, 637599, 637609, 637612],\n      gaps: [4, 8, 12],\n      lengths: [16],\n      code: {\n        name: \"CVC\",\n        size: 3\n      }\n    },\n    hipercard: {\n      niceType: \"Hipercard\",\n      type: \"hipercard\",\n      patterns: [606282],\n      gaps: [4, 8, 12],\n      lengths: [16],\n      code: {\n        name: \"CVC\",\n        size: 3\n      }\n    }\n  },\n  n = {},\n  a = {};\nObject.defineProperty(a, \"__esModule\", {\n  value: !0\n}), a.clone = void 0, a.clone = function (e) {\n  return e ? JSON.parse(JSON.stringify(e)) : null;\n};\nvar s = {};\nObject.defineProperty(s, \"__esModule\", {\n  value: !0\n}), s.matches = void 0, s.matches = function (e, r) {\n  return Array.isArray(r) ? function (e, r, t) {\n    var n = String(r).length,\n      a = e.substr(0, n),\n      s = parseInt(a, 10);\n    return r = parseInt(String(r).substr(0, a.length), 10), t = parseInt(String(t).substr(0, a.length), 10), s >= r && s <= t;\n  }(e, r[0], r[1]) : function (e, r) {\n    return (r = String(r)).substring(0, e.length) === e.substring(0, r.length);\n  }(e, r);\n}, Object.defineProperty(n, \"__esModule\", {\n  value: !0\n}), n.addMatchingCardsToResults = void 0;\nvar c = a,\n  i = s;\nn.addMatchingCardsToResults = function (e, r, t) {\n  var n, a;\n  for (n = 0; n < r.patterns.length; n++) {\n    var s = r.patterns[n];\n    if (i.matches(e, s)) {\n      var o = c.clone(r);\n      a = Array.isArray(s) ? String(s[0]).length : String(s).length, e.length >= a && (o.matchStrength = a), t.push(o);\n      break;\n    }\n  }\n};\nvar o = {};\nObject.defineProperty(o, \"__esModule\", {\n  value: !0\n}), o.isValidInputType = void 0, o.isValidInputType = function (e) {\n  return \"string\" == typeof e || e instanceof String;\n};\nvar l = {};\nObject.defineProperty(l, \"__esModule\", {\n  value: !0\n}), l.findBestMatch = void 0, l.findBestMatch = function (e) {\n  return function (e) {\n    var r = e.filter(function (e) {\n      return e.matchStrength;\n    }).length;\n    return r > 0 && r === e.length;\n  }(e) ? e.reduce(function (e, r) {\n    return e ? Number(e.matchStrength) < Number(r.matchStrength) ? r : e : r;\n  }) : null;\n};\nvar d = r && r.__assign || function () {\n    return d = Object.assign || function (e) {\n      for (var r, t = 1, n = arguments.length; t < n; t++) for (var a in r = arguments[t]) Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a]);\n      return e;\n    }, d.apply(this, arguments);\n  },\n  u = t,\n  p = n,\n  m = o,\n  f = l,\n  v = a,\n  g = {},\n  h = {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    AMERICAN_EXPRESS: \"american-express\",\n    DINERS_CLUB: \"diners-club\",\n    DISCOVER: \"discover\",\n    JCB: \"jcb\",\n    UNIONPAY: \"unionpay\",\n    MAESTRO: \"maestro\",\n    ELO: \"elo\",\n    MIR: \"mir\",\n    HIPER: \"hiper\",\n    HIPERCARD: \"hipercard\"\n  },\n  y = [h.VISA, h.MASTERCARD, h.AMERICAN_EXPRESS, h.DINERS_CLUB, h.DISCOVER, h.JCB, h.UNIONPAY, h.MAESTRO, h.ELO, h.MIR, h.HIPER, h.HIPERCARD],\n  _ = v.clone(y);\nfunction b(e) {\n  return g[e] || u[e];\n}\nfunction C(e, r) {\n  void 0 === r && (r = !1);\n  var t = _.indexOf(e);\n  if (!r && -1 === t) throw new Error('\"' + e + '\" is not a supported card type.');\n  return t;\n}\nfunction E(e) {\n  var r = [];\n  if (!m.isValidInputType(e)) return r;\n  if (0 === e.length) return _.map(function (e) {\n    return v.clone(b(e));\n  });\n  _.forEach(function (t) {\n    var n = b(t);\n    p.addMatchingCardsToResults(e, n, r);\n  });\n  var t = f.findBestMatch(r);\n  return t ? [t] : r;\n}\nE.getTypeInfo = function (e) {\n  return v.clone(b(e));\n}, E.removeCard = function (e) {\n  var r = C(e);\n  _.splice(r, 1);\n}, E.addCard = function (e) {\n  var r = C(e.type, !0);\n  g[e.type] = e, -1 === r && _.push(e.type);\n}, E.updateCard = function (e, r) {\n  var t = g[e] || u[e];\n  if (!t) throw new Error('\"' + e + \"\\\" is not a recognized type. Use `addCard` instead.'\");\n  if (r.type && t.type !== r.type) throw new Error(\"Cannot overwrite type parameter.\");\n  var n = v.clone(t);\n  n = d(d({}, n), r), g[n.type] = n;\n}, E.changeOrder = function (e, r) {\n  var t = C(e);\n  _.splice(t, 1), _.splice(r, 0, e);\n}, E.resetModifications = function () {\n  _ = v.clone(y), g = {};\n}, E.types = h;\nvar S = E,\n  N = {\n    niceType: \"Dankort\",\n    type: \"dankort\",\n    patterns: [5019],\n    gaps: [4, 8, 12],\n    lengths: [16],\n    code: {\n      name: \"CVC\",\n      size: 3\n    }\n  },\n  M = {\n    niceType: \"Laser\",\n    type: \"laser\",\n    patterns: [6706, 6771, 6709],\n    gaps: [4, 8, 12],\n    lengths: [16, 19],\n    code: {\n      name: \"CVV\",\n      size: 3\n    }\n  },\n  R = {\n    niceType: \"Visa Electron\",\n    type: \"visa-electron\",\n    patterns: [4026, 417500, 4405, 4508, 4844, 49137],\n    gaps: [4, 8, 12],\n    lengths: [16],\n    code: {\n      name: \"CVV\",\n      size: 3\n    }\n  },\n  T = {\n    validate: function (e) {\n      var r,\n        t,\n        n = String(e).replace(/[\\s]/g, \"\"),\n        a = n.length,\n        s = !1,\n        c = 0;\n      if (!/^[0-9]+$/.test(n)) return !1;\n      for (var i = a; i > 0; i--) {\n        if (r = parseInt(n.charAt(i - 1)), s) {\n          switch (t = 2 * r) {\n            case 10:\n              t = 1;\n              break;\n            case 12:\n              t = 3;\n              break;\n            case 14:\n              t = 5;\n              break;\n            case 16:\n              t = 7;\n              break;\n            case 18:\n              t = 9;\n          }\n          c += t;\n        } else c += r;\n        s = !s;\n      }\n      return 0 !== c && c % 10 == 0;\n    }\n  }.validate,\n  I = function (e) {\n    var r = S(e.toString().trim().replace(\" \", \"\"));\n    if (1 === r.length) {\n      var t = r.shift();\n      return (null == t ? void 0 : t.type) || \"unknown\";\n    }\n    return \"unknown\";\n  },\n  V = function () {\n    return S.updateCard(S.types.MAESTRO, {\n      patterns: [493698, [5e3, 5018], [502e3, 506698], [506779, 508999], [56, 59], 63, 67, 6]\n    }), S.updateCard(S.types.HIPERCARD, {\n      patterns: [384100, 384140, 384160, 606282, 637095, 637568]\n    }), S.addCard(N), S.addCard(M), S.addCard(R), Object.values(S.types).concat([\"dankort\", \"laser\", \"visa-electron\"]);\n  },\n  A = {\n    amex: [\"amex\", \"americanexpress\", \"american-express\"],\n    dinersclub: [\"diners\", \"dinersclub\", \"diners-club\"],\n    visaelectron: [\"visaelectron\", \"visa-electron\"]\n  };\nfunction O(r) {\n  var t = r.acceptedCards,\n    n = void 0 === t ? [] : t,\n    a = r.number,\n    s = r.issuer,\n    c = r.preview,\n    i = void 0 !== c && c,\n    o = r.expiry,\n    l = r.cvc,\n    d = r.focused,\n    u = r.locale,\n    p = void 0 === u ? {\n      valid: \"valid thru\"\n    } : u,\n    m = r.name,\n    f = r.placeholders,\n    v = void 0 === f ? {\n      name: \"YOUR NAME HERE\"\n    } : f,\n    g = r.callback,\n    h = e.useState(V()),\n    y = h[0],\n    _ = h[1],\n    b = e.useMemo(function () {\n      return (null == n ? void 0 : n.length) ? y.filter(function (e) {\n        return n.includes(e);\n      }) : y;\n    }, [n, y]),\n    C = e.useMemo(function () {\n      var e = \"unknown\";\n      if (a) {\n        var r = I(a);\n        b.includes(r) && (e = r);\n      }\n      var t = 16;\n      return A.amex.includes(e) ? t = 15 : (null == A ? void 0 : A.dinersclub.includes(e)) ? t = 14 : [\"hipercard\", \"mastercard\", \"visa\"].includes(e) && (t = 19), {\n        issuer: e,\n        maxLength: t\n      };\n    }, [a, b]),\n    E = e.useMemo(function () {\n      return i && s ? s.toLowerCase() : C.issuer;\n    }, [C.issuer, s, i]),\n    S = e.useMemo(function () {\n      var e = i ? 19 : C.maxLength,\n        r = \"number\" == typeof a ? a.toString() : String(a).replace(/[A-Za-z]| /g, \"\");\n      for (isNaN(parseInt(r, 10)) && !i && (r = \"\"), e > 16 && (e = r.length <= 16 ? 16 : e), r.length > e && (r = r.slice(0, e)); r.length < e;) r += \"•\";\n      if (A.amex.includes(E) || A.dinersclub.includes(E)) {\n        var t = [0, 4, 10],\n          n = [4, 6, 5];\n        r = \"\".concat(r.substr(t[0], n[0]), \" \").concat(r.substr(t[1], n[1]), \" \").concat(r.substr(t[2], n[2]));\n      } else if (r.length > 16) {\n        t = [0, 4, 8, 12], n = [4, 7];\n        r = \"\".concat(r.substr(t[0], n[0]), \" \").concat(r.substr(t[1], n[0]), \" \").concat(r.substr(t[2], n[0]), \" \").concat(r.substr(t[3], n[1]));\n      } else for (var s = 1; s < e / 4; s++) {\n        var c = 4 * s + (s - 1);\n        r = \"\".concat(r.slice(0, c), \" \").concat(r.slice(c));\n      }\n      return r;\n    }, [C.maxLength, E, a, i]),\n    N = e.useMemo(function () {\n      var e,\n        r = \"number\" == typeof o ? o.toString() : o,\n        t = \"\",\n        n = \"\";\n      for (r.includes(\"/\") ? (t = (e = r.split(\"/\"))[0], n = e[1]) : r.length && (t = r.substr(0, 2), n = r.substr(2, 6)); t.length < 2;) t += \"•\";\n      for (n.length > 2 && (n = n.substr(2, 4)); n.length < 2;) n += \"•\";\n      return \"\".concat(t, \"/\").concat(n);\n    }, [o]),\n    M = e.useCallback(function (e) {\n      if (e.length) _(y.filter(function (r) {\n        return e.includes(r);\n      }));else {\n        var r = V();\n        _(r);\n      }\n    }, [y]);\n  return e.useEffect(function () {\n    S !== a && \"function\" == typeof g && g(C, T(String(a))), V().toString() !== y.toString() && M(n);\n  }, [n, g, C, S, M, a, y]), e.createElement(\"div\", {\n    key: \"Cards\",\n    className: \"rccs\",\n    \"data-testid\": \"rccs\"\n  }, e.createElement(\"div\", {\n    \"data-testid\": \"rccs__card\",\n    className: [\"rccs__card\", \"rccs__card--\".concat(E), \"cvc\" === d && \"american-express\" !== E ? \"rccs__card--flipped\" : \"\"].join(\" \").trim()\n  }, e.createElement(\"div\", {\n    className: \"rccs__card--front\"\n  }, e.createElement(\"div\", {\n    className: \"rccs__card__background\"\n  }), e.createElement(\"div\", {\n    className: \"rccs__issuer\"\n  }), e.createElement(\"div\", {\n    className: [\"rccs__cvc__front\", \"cvc\" === d ? \"rccs--focused\" : \"\"].join(\" \").trim()\n  }, l), e.createElement(\"div\", {\n    className: [\"rccs__number\", S.replace(/ /g, \"\").length > 16 ? \"rccs__number--large\" : \"\", \"number\" === d ? \"rccs--focused\" : \"\", \"•\" !== S.substr(0, 1) ? \"rccs--filled\" : \"\"].join(\" \").trim()\n  }, S), e.createElement(\"div\", {\n    className: [\"rccs__name\", \"name\" === d ? \"rccs--focused\" : \"\", m ? \"rccs--filled\" : \"\"].join(\" \").trim()\n  }, m || v.name), e.createElement(\"div\", {\n    className: [\"rccs__expiry\", \"expiry\" === d ? \"rccs--focused\" : \"\", \"•\" !== N.substr(0, 1) ? \"rccs--filled\" : \"\"].join(\" \").trim()\n  }, e.createElement(\"div\", {\n    className: \"rccs__expiry__valid\"\n  }, p.valid), e.createElement(\"div\", {\n    className: \"rccs__expiry__value\"\n  }, N)), e.createElement(\"div\", {\n    className: \"rccs__chip\"\n  })), e.createElement(\"div\", {\n    className: \"rccs__card--back\"\n  }, e.createElement(\"div\", {\n    className: \"rccs__card__background\"\n  }), e.createElement(\"div\", {\n    className: \"rccs__stripe\"\n  }), e.createElement(\"div\", {\n    className: \"rccs__signature\"\n  }), e.createElement(\"div\", {\n    className: [\"rccs__cvc\", \"cvc\" === d ? \"rccs--focused\" : \"\"].join(\" \").trim()\n  }, l), e.createElement(\"div\", {\n    className: \"rccs__issuer\"\n  }))));\n}\nexport { O as default };","map":{"version":3,"sources":["../../node_modules/credit-card-type/dist/lib/card-types.js","../../node_modules/credit-card-type/dist/lib/clone.js","../../node_modules/credit-card-type/dist/lib/matches.js","../../node_modules/credit-card-type/dist/lib/add-matching-cards-to-results.js","../../node_modules/credit-card-type/dist/lib/is-valid-input-type.js","../../node_modules/credit-card-type/dist/lib/find-best-match.js","../../node_modules/credit-card-type/dist/index.js","../../src/utils/cardTypes.ts","../../src/utils/cardHelpers.ts","../../node_modules/luhn/src/luhn.js","../../src/ReactCreditCards.tsx"],"names":["visa","niceType","type","patterns","gaps","lengths","code","name","size","mastercard","discover","jcb","unionpay","maestro","elo","mir","hiper","hipercard","cardTypes_1","Object","defineProperty","clone_1","value","originalObject","JSON","parse","stringify","matches_1","cardNumber","min","max","maxLengthToCheck","String","length","substr","integerRepresentationOfCardNumber","parseInt","pattern","substring","Array","isArray","matchesRange","matchesPattern","addMatchingCardsToResults_1","require$$0","require$$1","cardConfiguration","results","i","patternLength","matches","clonedCardConfiguration","clone","matchStrength","push","isValidInputType_1","findBestMatch_1","numberOfResultsWithMaxStrengthProperty","filter","result","hasEnoughResultsToDetermineBestMatch","reduce","bestMatch","Number","__assign","this","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","cardTypes","add_matching_cards_to_results_1","is_valid_input_type_1","require$$2","find_best_match_1","require$$3","require$$4","customCards","cardNames","VISA","MASTERCARD","AMERICAN_EXPRESS","DINERS_CLUB","DISCOVER","JCB","UNIONPAY","MAESTRO","ELO","MIR","HIPER","HIPERCARD","ORIGINAL_TEST_ORDER","testOrder","findType","cardType","map","getCardPosition","ignoreErrorForNotExisting","position","indexOf","Error","creditCardType","isValidInputType","forEach","addMatchingCardsToResults","findBestMatch","getTypeInfo","removeCard","splice","addCard","config","existingCardPosition","updateCard","updates","clonedCard","changeOrder","currentPosition","resetModifications","types","dankort","laser","visaElectron","validateLuhn","validate","toString","trim","replace","getCardType","potentialCardTypes","firstResult","shift","setInitialValidCardTypes","values","concat","cardTypesMap","amex","dinersclub","visaelectron","trimmed","odd","total","calc","calc2","test","charAt","ReactCreditCards","props","acceptedCards","number","issuer","_b","expiry","cvc","focused","_c","valid","_d","callback","preview","_e","setCardTypes","React","useState","validCardTypes","useMemo","card","includes","cardOptions","updatedIssuer","validatedIssuer","maxLength","cardIssuer","toLowerCase","nextNumber","isNaN","slice","format","limit","space_index","cardExpiry","date","month","year","_a","split","updateValidCardTypes","useCallback","acceptedCardsInput","initialValidCardTypes","useEffect","createElement","className","join","placeholders","locale"],"mappings":";;EAoMAkB,CAAAA,GAnMgB;IACZlB,IAAAA,EAAM;MACFC,QAAAA,EAAU,MAAA;MACVC,IAAAA,EAAM,MAAA;MACNC,QAAAA,EAAU,CAAC,CAAA,CAAA;MACXC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,EAAI,EAAA,CAAA;MAClBC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdC,UAAAA,EAAY;MACRR,QAAAA,EAAU,YAAA;MACVC,IAAAA,EAAM,YAAA;MACNC,QAAAA,EAAU,CAAC,CAAC,EAAA,EAAI,EAAA,CAAA,EAAK,CAAC,IAAA,EAAM,IAAA,CAAA,EAAO,CAAC,GAAA,EAAK,GAAA,CAAA,EAAM,CAAC,EAAA,EAAI,EAAA,CAAA,EAAK,CAAC,GAAA,EAAK,GAAA,CAAA,EAAM,IAAA,CAAA;MACrEC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,CAAA;MACVC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGd,kBAAA,EAAoB;MAChBP,QAAAA,EAAU,kBAAA;MACVC,IAAAA,EAAM,kBAAA;MACNC,QAAAA,EAAU,CAAC,EAAA,EAAI,EAAA,CAAA;MACfC,IAAAA,EAAM,CAAC,CAAA,EAAG,EAAA,CAAA;MACVC,OAAAA,EAAS,CAAC,EAAA,CAAA;MACVC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGd,aAAA,EAAe;MACXP,QAAAA,EAAU,aAAA;MACVC,IAAAA,EAAM,aAAA;MACNC,QAAAA,EAAU,CAAC,CAAC,GAAA,EAAK,GAAA,CAAA,EAAM,EAAA,EAAI,EAAA,EAAI,EAAA,CAAA;MAC/BC,IAAAA,EAAM,CAAC,CAAA,EAAG,EAAA,CAAA;MACVC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,EAAI,EAAA,CAAA;MAClBC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdE,QAAAA,EAAU;MACNT,QAAAA,EAAU,UAAA;MACVC,IAAAA,EAAM,UAAA;MACNC,QAAAA,EAAU,CAAC,IAAA,EAAM,CAAC,GAAA,EAAK,GAAA,CAAA,EAAM,EAAA,CAAA;MAC7BC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,CAAA;MACdC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdG,GAAAA,EAAK;MACDV,QAAAA,EAAU,KAAA;MACVC,IAAAA,EAAM,KAAA;MACNC,QAAAA,EAAU,CAAC,IAAA,EAAM,IAAA,EAAM,CAAC,IAAA,EAAM,IAAA,CAAA,CAAA;MAC9BC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAA;MACtBC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdI,QAAAA,EAAU;MACNX,QAAAA,EAAU,UAAA;MACVC,IAAAA,EAAM,UAAA;MACNC,QAAAA,EAAU,CACN,GAAA,EACA,CAAC,GAAA,EAAK,GAAA,CAAA,EACN,CAAC,KAAA,EAAO,KAAA,CAAA,EACR,CAAC,KAAA,EAAO,KAAA,CAAA,EACR,CAAC,KAAA,EAAO,KAAA,CAAA,EACR,CAAC,KAAA,EAAO,KAAA,CAAA,EACR,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,MAAA,EACA,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,KAAA,EAAO,KAAA,CAAA,EACR,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,GAAA,EAAK,GAAA,CAAA,EACN,IAAA,EACA,IAAA,EACA,IAAA,EACA,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,IAAA,EAAM,IAAA,CAAA,EACP,IAAA,EACA,IAAA,EACA,GAAA,EACA,CAAC,IAAA,EAAM,IAAA,CAAA,EACP,CAAC,IAAA,EAAM,IAAA,CAAA,EACP,CAAC,IAAA,EAAM,IAAA,CAAA,EACP,CAAC,IAAA,EAAM,IAAA,CAAA,CAAA;MAEXC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAA;MAC9BC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdK,OAAAA,EAAS;MACLZ,QAAAA,EAAU,SAAA;MACVC,IAAAA,EAAM,SAAA;MACNC,QAAAA,EAAU,CACN,MAAA,EACA,CAAC,GAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,EAAA,EAAI,EAAA,CAAA,EACL,EAAA,EACA,EAAA,EACA,CAAA,CAAA;MAEJC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAA;MACtCC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdM,GAAAA,EAAK;MACDb,QAAAA,EAAU,KAAA;MACVC,IAAAA,EAAM,KAAA;MACNC,QAAAA,EAAU,CACN,MAAA,EACA,MAAA,EACA,MAAA,EACA,MAAA,EACA,MAAA,EACA,MAAA,EACA,MAAA,EACA,MAAA,EACA,MAAA,EACA,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,KAAA,EAAQ,MAAA,CAAA,EACT,MAAA,EACA,MAAA,EACA,MAAA,EACA,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,KAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,CAAA;MAEbC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,CAAA;MACVC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdO,GAAAA,EAAK;MACDd,QAAAA,EAAU,KAAA;MACVC,IAAAA,EAAM,KAAA;MACNC,QAAAA,EAAU,CAAC,CAAC,IAAA,EAAM,IAAA,CAAA,CAAA;MAClBC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,EAAI,EAAA,EAAI,EAAA,CAAA;MACtBC,IAAAA,EAAM;QACFC,IAAAA,EAAM,MAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdQ,KAAAA,EAAO;MACHf,QAAAA,EAAU,OAAA;MACVC,IAAAA,EAAM,OAAA;MACNC,QAAAA,EAAU,CAAC,MAAA,EAAQ,QAAA,EAAU,QAAA,EAAU,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,CAAA;MAC/DC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,CAAA;MACVC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA,CAAA;IAGdS,SAAAA,EAAW;MACPhB,QAAAA,EAAU,WAAA;MACVC,IAAAA,EAAM,WAAA;MACNC,QAAAA,EAAU,CAAC,MAAA,CAAA;MACXC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;MACbC,OAAAA,EAAS,CAAC,EAAA,CAAA;MACVC,IAAAA,EAAM;QACFC,IAAAA,EAAM,KAAA;QACNC,IAAAA,EAAM;MAAA;IAAA;EAAA,CAAA;EAAA,CAAA,GAAA,CAAA,CAAA;EAAA,CAAA,GAAA,CAAA,CAAA;AC/LlBW,MAAAA,CAAOC,cAAAA,CAAeC,CAAAA,EAAS,YAAA,EAAc;EAAEC,KAAAA,EAAAA,CAAO;AAAA,CAAA,CAAA,EACzCD,CAAAA,CAAAA,KAAAA,GAAAA,KAAG,CAAA,EAOhBA,CAAAA,CAAAA,KAAAA,GANA,UAAeE,CAAAA,EAAAA;EACX,OAAKA,CAAAA,GAGEC,IAAAA,CAAKC,KAAAA,CAAMD,IAAAA,CAAKE,SAAAA,CAAUH,CAAAA,CAAAA,CAAAA,GAFtB,IAGf;AAAA,CAAA;AAAA,IAAA,CAAA,GAAA,CAAA,CAAA;ACJAJ,MAAAA,CAAOC,cAAAA,CAAeO,CAAAA,EAAS,YAAA,EAAc;EAAEL,KAAAA,EAAAA,CAAO;AAAA,CAAA,CAAA,EACvCK,CAAAA,CAAAA,OAAAA,GAAAA,KAAG,CAAA,EAqBlBA,CAAAA,CAAAA,OAAAA,GANA,UAAiBC,CAAAA,EAAYS,CAAAA,EAAAA;EACzB,OAAIE,KAAAA,CAAMC,OAAAA,CAAQH,CAAAA,CAAAA,GAftB,UAAsBT,CAAAA,EAAYC,CAAAA,EAAKC,CAAAA,EAAAA;IACnC,IAAIC,CAAAA,GAAmBC,MAAAA,CAAOH,CAAAA,CAAAA,CAAKI,MAAAA;MAC/BC,CAAAA,GAASN,CAAAA,CAAWM,MAAAA,CAAO,CAAA,EAAGH,CAAAA,CAAAA;MAC9BI,CAAAA,GAAoCC,QAAAA,CAASF,CAAAA,EAAQ,EAAA,CAAA;IAGzD,OAFAL,CAAAA,GAAMO,QAAAA,CAASJ,MAAAA,CAAOH,CAAAA,CAAAA,CAAKK,MAAAA,CAAO,CAAA,EAAGA,CAAAA,CAAOD,MAAAA,CAAAA,EAAS,EAAA,CAAA,EACrDH,CAAAA,GAAMM,QAAAA,CAASJ,MAAAA,CAAOF,CAAAA,CAAAA,CAAKI,MAAAA,CAAO,CAAA,EAAGA,CAAAA,CAAOD,MAAAA,CAAAA,EAAS,EAAA,CAAA,EAC7CE,CAAAA,IAAqCN,CAAAA,IACzCM,CAAAA,IAAqCL,CAC7C;EAAA,CAQeW,CAAab,CAAAA,EAAYS,CAAAA,CAAQ,CAAA,CAAA,EAAIA,CAAAA,CAAQ,CAAA,CAAA,CAAA,GAP5D,UAAwBT,CAAAA,EAAYS,CAAAA,EAAAA;IAEhC,OAAA,CADAA,CAAAA,GAAUL,MAAAA,CAAOK,CAAAA,CAAAA,EACDC,SAAAA,CAAU,CAAA,EAAGV,CAAAA,CAAWK,MAAAA,CAAAA,KACpCL,CAAAA,CAAWU,SAAAA,CAAU,CAAA,EAAGD,CAAAA,CAAQJ,MAAAA,CACxC;EAAA,CAKWS,CAAed,CAAAA,EAAYS,CAAAA,CACtC;AAAA,CAAA,ECxBAlB,MAAAA,CAAOC,cAAAA,CAAeuB,CAAAA,EAAS,YAAA,EAAc;EAAErB,KAAAA,EAAAA,CAAO;AAAA,CAAA,CAAA,EACrBqB,CAAAA,CAAAA,yBAAAA,GAAAA,KAAG,CAAA;AACpC,IAAItB,CAAAA,GAAUuB,CAAAA;EACVjB,CAAAA,GAAYkB,CAAAA;AAsBhBF,CAAAA,CAAAA,yBAAAA,GArBA,UAAmCf,CAAAA,EAAYkB,CAAAA,EAAmBC,CAAAA,EAAAA;EAC9D,IAAIC,CAAAA,EAAGC,CAAAA;EACP,KAAKD,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIF,CAAAA,CAAkB3C,QAAAA,CAAS8B,MAAAA,EAAQe,CAAAA,EAAAA,EAAK;IACpD,IAAIX,CAAAA,GAAUS,CAAAA,CAAkB3C,QAAAA,CAAS6C,CAAAA,CAAAA;IACzC,IAAKrB,CAAAA,CAAUuB,OAAAA,CAAQtB,CAAAA,EAAYS,CAAAA,CAAAA,EAAnC;MAGA,IAAIc,CAAAA,GAA0B9B,CAAAA,CAAQ+B,KAAAA,CAAMN,CAAAA,CAAAA;MAExCG,CAAAA,GADAV,KAAAA,CAAMC,OAAAA,CAAQH,CAAAA,CAAAA,GACEL,MAAAA,CAAOK,CAAAA,CAAQ,CAAA,CAAA,CAAA,CAAIJ,MAAAA,GAGnBD,MAAAA,CAAOK,CAAAA,CAAAA,CAASJ,MAAAA,EAEhCL,CAAAA,CAAWK,MAAAA,IAAUgB,CAAAA,KACrBE,CAAAA,CAAwBE,aAAAA,GAAgBJ,CAAAA,CAAAA,EAE5CF,CAAAA,CAAQO,IAAAA,CAAKH,CAAAA,CAAAA;MACb;IAZC;EAaJ;AACL,CAAA;AAAA,IAAA,CAAA,GAAA,CAAA,CAAA;ACxBAhC,MAAAA,CAAOC,cAAAA,CAAemC,CAAAA,EAAS,YAAA,EAAc;EAAEjC,KAAAA,EAAAA,CAAO;AAAA,CAAA,CAAA,EAC9BiC,CAAAA,CAAAA,gBAAAA,GAAAA,KAAG,CAAA,EAI3BA,CAAAA,CAAAA,gBAAAA,GAHA,UAA0B3B,CAAAA,EAAAA;EACtB,OAA6B,QAAA,IAAA,OAAfA,CAAAA,IAA2BA,CAAAA,YAAsBI,MACnE;AAAA,CAAA;AAAA,IAAA,CAAA,GAAA,CAAA,CAAA;ACJAb,MAAAA,CAAOC,cAAAA,CAAeoC,CAAAA,EAAS,YAAA,EAAc;EAAElC,KAAAA,EAAAA,CAAO;AAAA,CAAA,CAAA,EACjCkC,CAAAA,CAAAA,aAAAA,GAAAA,KAAG,CAAA,EA6BxBA,CAAAA,CAAAA,aAAAA,GAlBA,UAAuBT,CAAAA,EAAAA;EACnB,OAXJ,UAA8CA,CAAAA,EAAAA;IAC1C,IAAIU,CAAAA,GAAyCV,CAAAA,CAAQW,MAAAA,CAAO,UAAUC,CAAAA,EAAAA;MAAU,OAAOA,CAAAA,CAAON,aAAAA;IAAAA,CAAAA,CAAAA,CAAkBpB,MAAAA;IAMhH,OAAQwB,CAAAA,GAAyC,CAAA,IAC7CA,CAAAA,KAA2CV,CAAAA,CAAQd,MAC3D;EAAA,CAES2B,CAAqCb,CAAAA,CAAAA,GAGnCA,CAAAA,CAAQc,MAAAA,CAAO,UAAUC,CAAAA,EAAWH,CAAAA,EAAAA;IACvC,OAAKG,CAAAA,GAODC,MAAAA,CAAOD,CAAAA,CAAUT,aAAAA,CAAAA,GAAiBU,MAAAA,CAAOJ,CAAAA,CAAON,aAAAA,CAAAA,GACzCM,CAAAA,GAEJG,CAAAA,GATIH,CAUnB;EAAA,CAAA,CAAA,GAde,IAef;AAAA,CAAA;AC7BA,IAAIK,CAAAA,GAAYC,CAAAA,IAAQA,CAAAA,CAAKD,QAAAA,IAAa,YAAA;IAStC,OARAA,CAAAA,GAAW7C,MAAAA,CAAO+C,MAAAA,IAAU,UAASC,CAAAA,EAAAA;MACjC,KAAK,IAAIC,CAAAA,EAAGpB,CAAAA,GAAI,CAAA,EAAGqB,CAAAA,GAAIC,SAAAA,CAAUrC,MAAAA,EAAQe,CAAAA,GAAIqB,CAAAA,EAAGrB,CAAAA,EAAAA,EAE5C,KAAK,IAAIuB,CAAAA,IADTH,CAAAA,GAAIE,SAAAA,CAAUtB,CAAAA,CAAAA,EACO7B,MAAAA,CAAOqD,SAAAA,CAAUC,cAAAA,CAAeC,IAAAA,CAAKN,CAAAA,EAAGG,CAAAA,CAAAA,KACzDJ,CAAAA,CAAEI,CAAAA,CAAAA,GAAKH,CAAAA,CAAEG,CAAAA,CAAAA,CAAAA;MAEjB,OAAOJ,CACf;IAAA,CAAA,EACWH,CAAAA,CAASW,KAAAA,CAAMV,IAAAA,EAAMK,SAAAA,CAChC;EAAA,CAAA;EACIM,CAAAA,GAAYhC,CAAAA;EACZiC,CAAAA,GAAkChC,CAAAA;EAClCiC,CAAAA,GAAwBC,CAAAA;EACxBC,CAAAA,GAAoBC,CAAAA;EACpB5D,CAAAA,GAAU6D,CAAAA;EACVC,CAAAA,GAAc,CAAA,CAAA;EACdC,CAAAA,GAAY;IACZC,IAAAA,EAAM,MAAA;IACNC,UAAAA,EAAY,YAAA;IACZC,gBAAAA,EAAkB,kBAAA;IAClBC,WAAAA,EAAa,aAAA;IACbC,QAAAA,EAAU,UAAA;IACVC,GAAAA,EAAK,KAAA;IACLC,QAAAA,EAAU,UAAA;IACVC,OAAAA,EAAS,SAAA;IACTC,GAAAA,EAAK,KAAA;IACLC,GAAAA,EAAK,KAAA;IACLC,KAAAA,EAAO,OAAA;IACPC,SAAAA,EAAW;EAAA,CAAA;EAEXC,CAAAA,GAAsB,CACtBb,CAAAA,CAAUC,IAAAA,EACVD,CAAAA,CAAUE,UAAAA,EACVF,CAAAA,CAAUG,gBAAAA,EACVH,CAAAA,CAAUI,WAAAA,EACVJ,CAAAA,CAAUK,QAAAA,EACVL,CAAAA,CAAUM,GAAAA,EACVN,CAAAA,CAAUO,QAAAA,EACVP,CAAAA,CAAUQ,OAAAA,EACVR,CAAAA,CAAUS,GAAAA,EACVT,CAAAA,CAAUU,GAAAA,EACVV,CAAAA,CAAUW,KAAAA,EACVX,CAAAA,CAAUY,SAAAA,CAAAA;EAEVE,CAAAA,GAAY7E,CAAAA,CAAQ+B,KAAAA,CAAM6C,CAAAA,CAAAA;AAC9B,SAASE,CAAAA,CAASC,CAAAA,EAAAA;EACd,OAAOjB,CAAAA,CAAYiB,CAAAA,CAAAA,IAAaxB,CAAAA,CAAUwB,CAAAA,CAC9C;AAAA;AAIA,SAASE,CAAAA,CAAgB/F,CAAAA,EAAMgG,CAAAA,EAAAA;EAAAA,KACO,CAAA,KAA9BA,CAAAA,KAAwCA,CAAAA,GAAAA,CAA4B,CAAA,CAAA;EACxE,IAAIC,CAAAA,GAAWN,CAAAA,CAAUO,OAAAA,CAAQlG,CAAAA,CAAAA;EACjC,IAAA,CAAKgG,CAAAA,IAAAA,CAA2C,CAAA,KAAdC,CAAAA,EAC9B,MAAM,IAAIE,KAAAA,CAAM,GAAA,GAAMnG,CAAAA,GAAO,iCAAA,CAAA;EAEjC,OAAOiG,CACX;AAAA;AACA,SAASG,CAAAA,CAAe/E,CAAAA,EAAAA;EACpB,IAAImB,CAAAA,GAAU,EAAA;EACd,IAAA,CAAK+B,CAAAA,CAAsB8B,gBAAAA,CAAiBhF,CAAAA,CAAAA,EACxC,OAAOmB,CAAAA;EAEX,IAA0B,CAAA,KAAtBnB,CAAAA,CAAWK,MAAAA,EACX,OAhBGiE,CAAAA,CAAUG,GAAAA,CAAI,UAAUD,CAAAA,EAAAA;IAAY,OAAO/E,CAAAA,CAAQ+B,KAAAA,CAAM+C,CAAAA,CAASC,CAAAA,CAAAA,CAAa;EAAA,CAAA,CAAA;EAkBtFF,CAAAA,CAAUW,OAAAA,CAAQ,UAAUT,CAAAA,EAAAA;IACxB,IAAItD,CAAAA,GAAoBqD,CAAAA,CAASC,CAAAA,CAAAA;IACjCvB,CAAAA,CAAgCiC,yBAAAA,CAA0BlF,CAAAA,EAAYkB,CAAAA,EAAmBC,CAAAA,CACjG;EAAA,CAAA,CAAA;EACI,IAAIe,CAAAA,GAAYkB,CAAAA,CAAkB+B,aAAAA,CAAchE,CAAAA,CAAAA;EAChD,OAAIe,CAAAA,GACO,CAACA,CAAAA,CAAAA,GAELf,CACX;AAAA;AACA4D,CAAAA,CAAeK,WAAAA,GAAc,UAAUZ,CAAAA,EAAAA;EACnC,OAAO/E,CAAAA,CAAQ+B,KAAAA,CAAM+C,CAAAA,CAASC,CAAAA,CAAAA,CAClC;AAAA,CAAA,EACAO,CAAAA,CAAeM,UAAAA,GAAa,UAAU1G,CAAAA,EAAAA;EAClC,IAAIiG,CAAAA,GAAWF,CAAAA,CAAgB/F,CAAAA,CAAAA;EAC/B2F,CAAAA,CAAUgB,MAAAA,CAAOV,CAAAA,EAAU,CAAA,CAC/B;AAAA,CAAA,EACAG,CAAAA,CAAeQ,OAAAA,GAAU,UAAUC,CAAAA,EAAAA;EAC/B,IAAIC,CAAAA,GAAuBf,CAAAA,CAAgBc,CAAAA,CAAOlH,IAAAA,EAAAA,CAAM,CAAA,CAAA;EACxDiF,CAAAA,CAAYiC,CAAAA,CAAOlH,IAAAA,CAAAA,GAAQkH,CAAAA,EAAAA,CACG,CAAA,KAA1BC,CAAAA,IACAnB,CAAAA,CAAU5C,IAAAA,CAAK8D,CAAAA,CAAOlH,IAAAA,CAE9B;AAAA,CAAA,EACAyG,CAAAA,CAAeW,UAAAA,GAAa,UAAUlB,CAAAA,EAAUmB,CAAAA,EAAAA;EAC5C,IAAIhG,CAAAA,GAAiB4D,CAAAA,CAAYiB,CAAAA,CAAAA,IAAaxB,CAAAA,CAAUwB,CAAAA,CAAAA;EACxD,IAAA,CAAK7E,CAAAA,EACD,MAAM,IAAImF,KAAAA,CAAM,GAAA,GAAON,CAAAA,GAAW,sDAAA,CAAA;EAEtC,IAAImB,CAAAA,CAAQrH,IAAAA,IAAQqB,CAAAA,CAAerB,IAAAA,KAASqH,CAAAA,CAAQrH,IAAAA,EAChD,MAAM,IAAIwG,KAAAA,CAAM,kCAAA,CAAA;EAEpB,IAAIc,CAAAA,GAAanG,CAAAA,CAAQ+B,KAAAA,CAAM7B,CAAAA,CAAAA;EAC/BiG,CAAAA,GAAaxD,CAAAA,CAASA,CAAAA,CAAS,CAAE,CAAA,EAAEwD,CAAAA,CAAAA,EAAaD,CAAAA,CAAAA,EAChDpC,CAAAA,CAAYqC,CAAAA,CAAWtH,IAAAA,CAAAA,GAAQsH,CACnC;AAAA,CAAA,EACAb,CAAAA,CAAec,WAAAA,GAAc,UAAUlH,CAAAA,EAAMiG,CAAAA,EAAAA;EACzC,IAAIkB,CAAAA,GAAkBpB,CAAAA,CAAgB/F,CAAAA,CAAAA;EACtC2F,CAAAA,CAAUgB,MAAAA,CAAOQ,CAAAA,EAAiB,CAAA,CAAA,EAClCxB,CAAAA,CAAUgB,MAAAA,CAAOV,CAAAA,EAAU,CAAA,EAAGjG,CAAAA,CAClC;AAAA,CAAA,EACAoG,CAAAA,CAAegB,kBAAAA,GAAqB,YAAA;EAChCzB,CAAAA,GAAY7E,CAAAA,CAAQ+B,KAAAA,CAAM6C,CAAAA,CAAAA,EAC1Bd,CAAAA,GAAc,CAAA,CAClB;AAAA,CAAA,EACAwB,CAAAA,CAAeiB,KAAAA,GAAQxC,CAAAA;AACvB,IAAA,CAAA,GAAiBuB,CAAAA;EC/GJkB,CAAAA,GAAU;IACrB5H,QAAAA,EAAU,SAAA;IACVC,IAAAA,EAAM,SAAA;IACNC,QAAAA,EAAU,CAAC,IAAA,CAAA;IACXC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;IACbC,OAAAA,EAAS,CAAC,EAAA,CAAA;IACVC,IAAAA,EAAM;MACJC,IAAAA,EAAM,KAAA;MACNC,IAAAA,EAAM;IAAA;EAAA,CAAA;EAIGsH,CAAAA,GAAQ;IACnB7H,QAAAA,EAAU,OAAA;IACVC,IAAAA,EAAM,OAAA;IACNC,QAAAA,EAAU,CAAC,IAAA,EAAM,IAAA,EAAM,IAAA,CAAA;IACvBC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;IACbC,OAAAA,EAAS,CAAC,EAAA,EAAI,EAAA,CAAA;IACdC,IAAAA,EAAM;MACJC,IAAAA,EAAM,KAAA;MACNC,IAAAA,EAAM;IAAA;EAAA,CAAA;EAIGuH,CAAAA,GAAe;IAC1B9H,QAAAA,EAAU,eAAA;IACVC,IAAAA,EAAM,eAAA;IACNC,QAAAA,EAAU,CAAC,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,KAAA,CAAA;IAC3CC,IAAAA,EAAM,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;IACbC,OAAAA,EAAS,CAAC,EAAA,CAAA;IACVC,IAAAA,EAAM;MACJC,IAAAA,EAAM,KAAA;MACNC,IAAAA,EAAM;IAAA;EAAA,CAAA;EC5BGwH,CAAAA,GC6BJ;IACNC,QAAAA,EApCF,SAAA,CAAkBrG,CAAAA,EAAAA;MACjB,IAIGuH,CAAAA;QACAC,CAAAA;QALCJ,CAAAA,GAAUhH,MAAAA,CAAOJ,CAAAA,CAAAA,CAAYwG,OAAAA,CAAQ,OAAA,EAAS,EAAA,CAAA;QAC/CnG,CAAAA,GAAS+G,CAAAA,CAAQ/G,MAAAA;QACjBgH,CAAAA,GAAAA,CAAM,CAAA;QACNC,CAAAA,GAAQ,CAAA;MAIV,IAAA,CAAK,UAAA,CAAWG,IAAAA,CAAKL,CAAAA,CAAAA,EACpB,OAAA,CAAO,CAAA;MAGR,KAAK,IAAIhG,CAAAA,GAAIf,CAAAA,EAAQe,CAAAA,GAAI,CAAA,EAAGA,CAAAA,EAAAA,EAAK;QAEhC,IADAmG,CAAAA,GAAO/G,QAAAA,CAAS4G,CAAAA,CAAQM,MAAAA,CAAOtG,CAAAA,GAAI,CAAA,CAAA,CAAA,EAC9BiG,CAAAA,EAEE;UAGN,QAFAG,CAAAA,GAAe,CAAA,GAAPD,CAAAA;YAGR,KAAK,EAAA;cAAIC,CAAAA,GAAQ,CAAA;cAAG;YACpB,KAAK,EAAA;cAAIA,CAAAA,GAAQ,CAAA;cAAG;YACpB,KAAK,EAAA;cAAIA,CAAAA,GAAQ,CAAA;cAAG;YACpB,KAAK,EAAA;cAAIA,CAAAA,GAAQ,CAAA;cAAG;YACpB,KAAK,EAAA;cAAIA,CAAAA,GAAQ,CAAA;UAAA;UAGjBF,CAAAA,IAASE,CACT;QAAA,CAAA,MAbAF,CAAAA,IAASC,CAAAA;QAcVF,CAAAA,GAAAA,CAAOA,CACP;MAAA;MAED,OAAkB,CAAA,KAAVC,CAAAA,IAAgBA,CAAAA,GAAQ,EAAA,IAAQ,CACxC;IAAA;EAAA,CAAA,CD3B8BjB,QAAAA;EAWpBI,CAAAA,GAAc,SAAA,CAACzG,CAAAA,EAAAA;IAC1B,IAAM0G,CAAAA,GAAqB3B,CAAAA,CAA8B/E,CAAAA,CANlDsG,QAAAA,CAAAA,CAAAA,CAAWC,IAAAA,CAAAA,CAAAA,CAAOC,OAAAA,CAAQ,GAAA,EAAK,EAAA,CAAA,CAAA;IAQtC,IAAkC,CAAA,KAA9BE,CAAAA,CAAmBrG,MAAAA,EAAc;MACnC,IAAMsG,CAAAA,GAAcD,CAAAA,CAAmBE,KAAAA,CAAAA,CAAAA;MAEvC,OAAA,CAAOD,IAAAA,IAAAA,CAAAA,GAAAA,KAAW,CAAA,GAAXA,CAAAA,CAAarI,IAAAA,KAAQ,SAC7B;IAAA;IAED,OAAO,SACT;EAAA,CAAA;EAKauI,CAAAA,GAA2B,SAAA,CAAA,EAAA;IAsBtC,OArBA9B,CAAAA,CAAeW,UAAAA,CAAW1C,CAAAA,CAASgD,KAAAA,CAAChC,OAAAA,EAAS;MAC3CzF,QAAAA,EAAU,CACR,MAAA,EACA,CAAC,GAAA,EAAM,IAAA,CAAA,EACP,CAAC,KAAA,EAAQ,MAAA,CAAA,EACT,CAAC,MAAA,EAAQ,MAAA,CAAA,EACT,CAAC,EAAA,EAAI,EAAA,CAAA,EACL,EAAA,EACA,EAAA,EACA,CAAA;IAAA,CAAA,CAAA,EAIJwG,CAAAA,CAAeW,UAAAA,CAAW1C,CAAAA,CAASgD,KAAAA,CAAC5B,SAAAA,EAAW;MAC7C7F,QAAAA,EAAU,CAAC,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA,EAAQ,MAAA;IAAA,CAAA,CAAA,EAGrDwG,CAAAA,CAAeQ,OAAAA,CAAQU,CAAAA,CAAAA,EACvBlB,CAAAA,CAAeQ,OAAAA,CAAQW,CAAAA,CAAAA,EACvBnB,CAAAA,CAAeQ,OAAAA,CAAQY,CAAAA,CAAAA,EAEhB5G,MAAAA,CAAOuH,MAAAA,CAAO9D,CAAAA,CAASgD,KAAAA,CAAAA,CAAEe,MAAAA,CAAO,CACrC,SAAA,EACA,OAAA,EACA,eAAA,CAAA,CAEJ;EAAA,CAAA;EAKaC,CAAAA,GAAe;IAC1BC,IAAAA,EAAM,CAAC,MAAA,EAAQ,iBAAA,EAAmB,kBAAA,CAAA;IAClCC,UAAAA,EAAY,CAAC,QAAA,EAAU,YAAA,EAAc,aAAA,CAAA;IACrCC,YAAAA,EAAc,CAAC,cAAA,EAAgB,eAAA;EAAA,CAAA;AEvC3B,SAAUQ,CAAAA,CAAiBC,CAAAA,EAAAA;EAE7B,IAAA,CAAA,GAeEA,CAAAA,CAfgBC,aAAAA;IAAlB,CAAA,GAAA,KAAgB,CAAA,KAAA,CAAA,GAAA,EAAA,GAAEA,CAAAA;IAClBC,CAAAA,GAcEF,CAAAA,CAdIE,MAAAA;IACNC,CAAAA,GAaEH,CAAAA,CAAAA,MAAAA;IAZFI,CAAAA,GAYEJ,CAAAA,CAAKY,OAAAA;IAZPR,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,IAAeA,CAAAA;IACfC,CAAAA,GAWEL,CAAAA,CAXIK,MAAAA;IACNC,CAAAA,GAUEN,CAAAA,CAAKY,GAAAA;IATPL,CAAAA,GASEP,CAAAA,CATKO,OAAAA;IACPC,CAAAA,GAQER,CAAAA,CAAKY,MAAAA;IARPJ,CAAAA,GAAAA,KAAS,CAAA,KAAA,CAAA,GAAA;MACPC,KAAAA,EAAO;IAAA,CAAA,GACRD,CAAAA;IACDzJ,CAAAA,GAKEiJ,CAAAA,CAAKY,IAAAA;IAJPF,CAAAA,GAIEV,CAAAA,CAAKY,YAAAA;IAJPF,CAAAA,GAAAA,KAAe,CAAA,KAAA,CAAA,GAAA;MACb3J,IAAAA,EAAM;IAAA,CAAA,GACP2J,CAAAA;IACDC,CAAAA,GACEX,CAAAA,CAAAA,QAAAA;IAEEa,CAAAA,GAA4BE,CAAAA,CAAMC,QAAAA,CAAS/B,CAAAA,CAAAA,CAAAA,CAAAA;IAA1C7D,CAAAA,GAASyF,CAAAA,CAAAA,CAAAA,CAAAA;IAAEC,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;IACZG,CAAAA,GAAiBF,CAAAA,CAAMG,OAAAA,CAAQ,YAAA;MACnC,OAAA,CAAIjB,IAAAA,IAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,CAAexH,MAAAA,IACV2C,CAAAA,CAAUlB,MAAAA,CAAO,UAACiH,CAAAA,EAAAA;QAAS,OAAA,CAAA,CAAcC,QAAAA,CAASD,CAAAA,CAAvB;MAAA,CAAA,CAAA,GAG7B/F,CACT;IAAA,CAAA,EAAG,CAAC6E,CAAAA,EAAe7E,CAAAA,CAAAA,CAAAA;IAEbiG,CAAAA,GAAcN,CAAAA,CAAMG,OAAAA,CAAQ,YAAA;MAChC,IAAII,CAAAA,GAAgB,SAAA;MAEpB,IAAIpB,CAAAA,EAAQ;QACV,IAAMqB,CAAAA,GAAkB1C,CAAAA,CAAYqB,CAAAA,CAAAA;QAEhCe,CAAAA,CAAeG,QAAAA,CAASG,CAAAA,CAAAA,KAC1BD,CAAAA,GAAgBC,CAAAA,CAEnB;MAAA;MAED,IAAIC,CAAAA,GAAY,EAAA;MAUhB,OARIpC,CAAAA,CAAaC,IAAAA,CAAK+B,QAAAA,CAASE,CAAAA,CAAAA,GAC7BE,CAAAA,GAAY,EAAA,GAAA,CACHpC,IAAAA,IAAAA,CAAAA,GAAAA,KAAY,CAAA,GAAZA,CAAAA,CAAcE,UAAAA,CAAW8B,QAAAA,CAASE,CAAAA,CAAAA,IAC3CE,CAAAA,GAAY,EAAA,GACH,CAAC,WAAA,EAAa,YAAA,EAAc,MAAA,CAAA,CAAQJ,QAAAA,CAASE,CAAAA,CAAAA,KACtDE,CAAAA,GAAY,EAAA,CAAA,EAGP;QACLrB,MAAAA,EAAQmB,CAAAA;QACRE,SAAAA,EAASA;MAAAA,CAEb;IAAA,CAAA,EAAG,CAACtB,CAAAA,EAAQe,CAAAA,CAAAA,CAAAA;IAENQ,CAAAA,GAAaV,CAAAA,CAAMG,OAAAA,CACvB,YAAA;MAAM,OAACN,CAAAA,IAAWT,CAAAA,GAASA,CAAAA,CAAOuB,WAAAA,CAAAA,CAAAA,GAAgBL,CAAAA,CAAYlB,MAAO;IAAA,CAAA,EACrE,CAACkB,CAAAA,CAAYlB,MAAAA,EAAQA,CAAAA,EAAQS,CAAAA,CAAAA,CAAAA;IAGzBxI,CAAAA,GAAa2I,CAAAA,CAAMG,OAAAA,CAAQ,YAAA;MAC/B,IAAIM,CAAAA,GAAYZ,CAAAA,GAAU,EAAA,GAAKS,CAAAA,CAAYG,SAAAA;QACvCG,CAAAA,GACgB,QAAA,IAAA,OAAXzB,CAAAA,GACHA,CAAAA,CAAOxB,QAAAA,CAAAA,CAAAA,GACPlG,MAAAA,CAAO0H,CAAAA,CAAAA,CAAQtB,OAAAA,CAAQ,aAAA,EAAe,EAAA,CAAA;MAc5C,KAZIgD,KAAAA,CAAMhJ,QAAAA,CAAS+I,CAAAA,EAAY,EAAA,CAAA,CAAA,IAAA,CAASf,CAAAA,KACtCe,CAAAA,GAAa,EAAA,CAAA,EAGXH,CAAAA,GAAY,EAAA,KACdA,CAAAA,GAAYG,CAAAA,CAAWlJ,MAAAA,IAAU,EAAA,GAAK,EAAA,GAAK+I,CAAAA,CAAAA,EAGzCG,CAAAA,CAAWlJ,MAAAA,GAAS+I,CAAAA,KACtBG,CAAAA,GAAaA,CAAAA,CAAWE,KAAAA,CAAM,CAAA,EAAGL,CAAAA,CAAAA,CAAAA,EAG5BG,CAAAA,CAAWlJ,MAAAA,GAAS+I,CAAAA,GACzBG,CAAAA,IAAc,GAAA;MAGhB,IACEvC,CAAAA,CAAaC,IAAAA,CAAK+B,QAAAA,CAASK,CAAAA,CAAAA,IAC3BrC,CAAAA,CAAaE,UAAAA,CAAW8B,QAAAA,CAASK,CAAAA,CAAAA,EACjC;QACA,IAAMK,CAAAA,GAAS,CAAC,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA;UAChBC,CAAAA,GAAQ,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,CAAA;QACrBJ,CAAAA,GAAa,EAAA,CAAA,MAAA,CAAGA,CAAAA,CAAWjJ,MAAAA,CACzBoJ,CAAAA,CAAO,CAAA,CAAA,EACPC,CAAAA,CAAM,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA,MAAA,CACHJ,CAAAA,CAAWjJ,MAAAA,CAAOoJ,CAAAA,CAAO,CAAA,CAAA,EAAIC,CAAAA,CAAM,CAAA,CAAA,CAAA,EAAG,GAAA,CAAA,CAAA,MAAA,CAAIJ,CAAAA,CAAWjJ,MAAAA,CACxDoJ,CAAAA,CAAO,CAAA,CAAA,EACPC,CAAAA,CAAM,CAAA,CAAA,CAAA,CAET;MAAA,CAAA,MAAM,IAAIJ,CAAAA,CAAWlJ,MAAAA,GAAS,EAAA,EAAI;QAC3BqJ,CAAAA,GAAS,CAAC,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,EAAA,CAAA,EACnBC,CAAAA,GAAQ,CAAC,CAAA,EAAG,CAAA,CAAA;QAClBJ,CAAAA,GAAa,EAAA,CAAA,MAAA,CAAGA,CAAAA,CAAWjJ,MAAAA,CACzBoJ,CAAAA,CAAO,CAAA,CAAA,EACPC,CAAAA,CAAM,CAAA,CAAA,CAAA,EACH,GAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAWrJ,MAAAA,CAAOoJ,CAAAA,CAAO,CAAA,CAAA,EAAIC,CAAAA,CAAM,CAAA,CAAA,CAAA,EAAO,GAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAWrJ,MAAAA,CACxDoJ,CAAAA,CAAO,CAAA,CAAA,EACPC,CAAAA,CAAM,CAAA,CAAA,CAAA,EACP,GAAA,CAAA,CAAA,MAAA,CAAIJ,CAAAA,CAAWjJ,MAAAA,CAAOoJ,CAAAA,CAAO,CAAA,CAAA,EAAIC,CAAAA,CAAM,CAAA,CAAA,CAAA,CACzC;MAAA,CAAA,MACC,KAAK,IAAIvI,CAAAA,GAAI,CAAA,EAAGA,CAAAA,GAAIgI,CAAAA,GAAY,CAAA,EAAGhI,CAAAA,EAAAA,EAAK;QACtC,IAAMwI,CAAAA,GAAkB,CAAA,GAAJxI,CAAAA,IAASA,CAAAA,GAAI,CAAA,CAAA;QACjCmI,CAAAA,GAAa,EAAA,CAAGxC,MAAAA,CAAAA,CAAAA,CAAW0C,KAAAA,CAAM,CAAA,EAAGG,CAAAA,CAAAA,EAAY,GAAA,CAAA,CAAA,MAAA,CAAIL,CAAAA,CAAWE,KAAAA,CAC7DG,CAAAA,CAAAA,CAEH;MAAA;MAGH,OAAOL,CACT;IAAA,CAAA,EAAG,CAACN,CAAAA,CAAYG,SAAAA,EAAWC,CAAAA,EAAYvB,CAAAA,EAAQU,CAAAA,CAAAA,CAAAA;IAEzCqB,CAAAA,GAAalB,CAAAA,CAAMG,OAAAA,CAAQ,YAAA;MAAA,IAAA,CAAA;QACzBgB,CAAAA,GAAyB,QAAA,IAAA,OAAX7B,CAAAA,GAAsBA,CAAAA,CAAO3B,QAAAA,CAAAA,CAAAA,GAAa2B,CAAAA;QAC1D8B,CAAAA,GAAQ,EAAA;QACRC,CAAAA,GAAO,EAAA;MASX,KAPIF,CAAAA,CAAKd,QAAAA,CAAS,GAAA,CAAA,IACfe,CAAAA,GAAAA,CAADE,CAAAA,GAAgBH,CAAAA,CAAKI,KAAAA,CAAM,GAAA,CAAA,EAArB,CAAA,CAAA,EAAEF,CAAAA,GAAIC,CAAAA,CAAAA,CAAAA,CAAAA,IACHH,CAAAA,CAAKzJ,MAAAA,KACd0J,CAAAA,GAAQD,CAAAA,CAAKxJ,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,EACvB0J,CAAAA,GAAOF,CAAAA,CAAKxJ,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,CAAA,EAGjByJ,CAAAA,CAAM1J,MAAAA,GAAS,CAAA,GACpB0J,CAAAA,IAAS,GAAA;MAOX,KAJIC,CAAAA,CAAK3J,MAAAA,GAAS,CAAA,KAChB2J,CAAAA,GAAOA,CAAAA,CAAK1J,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,CAAA,EAGjB0J,CAAAA,CAAK3J,MAAAA,GAAS,CAAA,GACnB2J,CAAAA,IAAQ,GAAA;MAGV,OAAO,EAAA,CAAGjD,MAAAA,CAAAA,CAAAA,EAAS,GAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CACrB;IAAA,CAAA,EAAG,CAACkB,CAAAA,CAAAA,CAAAA;IAEEkC,CAAAA,GAAuBxB,CAAAA,CAAMyB,WAAAA,CACjC,UAACC,CAAAA,EAAAA;MACC,IAAIA,CAAAA,CAAmBhK,MAAAA,EACrBqI,CAAAA,CACE1F,CAAAA,CAAUlB,MAAAA,CAAO,UAACiH,CAAAA,EAAAA;QAAS,OAAA,CAAA,CAAmBC,QAAAA,CAASD,CAAAA,CAAAA;MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAF3D;QAOA,IAAMuB,CAAAA,GAAwBzD,CAAAA,CAAAA,CAAAA;QAC9B6B,CAAAA,CAAa4B,CAAAA,CAHZ;MAAA;IAIH,CAAA,EACA,CAACtH,CAAAA,CAAAA,CAAAA;EAyBH,OAtBA2F,CAAAA,CAAM4B,SAAAA,CAAU,YAAA;IACVvK,CAAAA,KAAe8H,CAAAA,IAEO,UAAA,IAAA,OAAbS,CAAAA,IACTA,CAAAA,CAASU,CAAAA,EAAa7C,CAAAA,CAAahG,MAAAA,CAAO0H,CAAAA,CAAAA,CAAAA,CAAAA,EAIhBjB,CAAAA,CAAAA,CAAAA,CACJP,QAAAA,CAAAA,CAAAA,KAAetD,CAAAA,CAAUsD,QAAAA,CAAAA,CAAAA,IACjD6D,CAAAA,CAAqBtC,CAAAA,CAEzB;EAAA,CAAA,EAAG,CACDA,CAAAA,EACAU,CAAAA,EACAU,CAAAA,EACAjJ,CAAAA,EACAmK,CAAAA,EACArC,CAAAA,EACA9E,CAAAA,CAAAA,CAAAA,EAIA2F,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,GAAAA,EAAI,OAAA;IAAQC,SAAAA,EAAU,MAAA;IAAM,aAAA,EAAa;EAAA,CAAA,EAC5C9B,CAAAA,CACc6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,aAAAA,EAAAA,YAAAA;IACZC,SAAAA,EAAW,CACT,YAAA,EACA,cAAA,CAAA,MAAA,CAAepB,CAAAA,CAAAA,EACH,KAAA,KAAZlB,CAAAA,IAAoC,kBAAA,KAAfkB,CAAAA,GACjB,qBAAA,GACA,EAAA,CAAA,CAEHqB,IAAAA,CAAK,GAAA,CAAA,CACLnE,IAAAA,CAAAA;EAAAA,CAAAA,EAEHoC,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,EACb7B,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,CAAA,EACf7B,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,CAAA,EACf7B,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IACE8B,SAAAA,EAAW,CACT,kBAAA,EACY,KAAA,KAAZtC,CAAAA,GAAoB,eAAA,GAAkB,EAAA,CAAA,CAErCuC,IAAAA,CAAK,GAAA,CAAA,CACLnE,IAAAA,CAAAA;EAAAA,CAAAA,EAEF2B,CAAAA,CAAAA,EAEHS,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IACE8B,SAAAA,EAAW,CACT,cAAA,EACAzK,CAAAA,CAAWwG,OAAAA,CAAQ,IAAA,EAAM,EAAA,CAAA,CAAInG,MAAAA,GAAS,EAAA,GAClC,qBAAA,GACA,EAAA,EACQ,QAAA,KAAZ8H,CAAAA,GAAuB,eAAA,GAAkB,EAAA,EACb,GAAA,KAA5BnI,CAAAA,CAAWM,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,GAAa,cAAA,GAAiB,EAAA,CAAA,CAElDoK,IAAAA,CAAK,GAAA,CAAA,CACLnE,IAAAA,CAAAA;EAAAA,CAAAA,EAEFvG,CAAAA,CAAAA,EAEH2I,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IACE8B,SAAAA,EAAW,CACT,YAAA,EACY,MAAA,KAAZtC,CAAAA,GAAqB,eAAA,GAAkB,EAAA,EACvCxJ,CAAAA,GAAO,cAAA,GAAiB,EAAA,CAAA,CAEvB+L,IAAAA,CAAK,GAAA,CAAA,CACLnE,IAAAA,CAAAA;EAAAA,CAAAA,EAEF5H,CAAAA,IAAQgM,CAAAA,CAAahM,IAAAA,CAAAA,EAExBgK,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IACE8B,SAAAA,EAAW,CACT,cAAA,EACY,QAAA,KAAZtC,CAAAA,GAAuB,eAAA,GAAkB,EAAA,EACb,GAAA,KAA5B0B,CAAAA,CAAWvJ,MAAAA,CAAO,CAAA,EAAG,CAAA,CAAA,GAAa,cAAA,GAAiB,EAAA,CAAA,CAElDoK,IAAAA,CAAK,GAAA,CAAA,CACLnE,IAAAA,CAAAA;EAAAA,CAAAA,EAEHoC,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IAAK8B,SAAAA,EAAU;EAAA,CAAA,EAAuBG,CAAAA,CAAOvC,KAAAA,CAAAA,EAC7CM,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IAAK8B,SAAAA,EAAU;EAAA,CAAA,EAAuBZ,CAAAA,CAAAA,CAAAA,EAExClB,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IAAK8B,SAAAA,EAAU;EAAA,CAAA,CAAA,CAAA,EAEjB9B,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,EACb7B,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,CAAA,EACf7B,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,CAAA,EACf7B,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,CAAA,EACf7B,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;IACE8B,SAAAA,EAAW,CAAC,WAAA,EAAyB,KAAA,KAAZtC,CAAAA,GAAoB,eAAA,GAAkB,EAAA,CAAA,CAC5DuC,IAAAA,CAAK,GAAA,CAAA,CACLnE,IAAAA,CAAAA;EAAAA,CAAAA,EAEF2B,CAAAA,CAAAA,EAEHS,CAAAA,CAAK6B,aAAAA,CAAAA,KAAAA,EAAAA;IAAAA,SAAAA,EAAU;EAAA,CAAA,CAAA,CAAA,CAAA,CAKzB;AAAA;AAAA,SAAA,CAAA,IAAA,OAAA","sourcesContent":["\"use strict\";\nvar cardTypes = {\n    visa: {\n        niceType: \"Visa\",\n        type: \"visa\",\n        patterns: [4],\n        gaps: [4, 8, 12],\n        lengths: [16, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    mastercard: {\n        niceType: \"Mastercard\",\n        type: \"mastercard\",\n        patterns: [[51, 55], [2221, 2229], [223, 229], [23, 26], [270, 271], 2720],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    \"american-express\": {\n        niceType: \"American Express\",\n        type: \"american-express\",\n        patterns: [34, 37],\n        gaps: [4, 10],\n        lengths: [15],\n        code: {\n            name: \"CID\",\n            size: 4,\n        },\n    },\n    \"diners-club\": {\n        niceType: \"Diners Club\",\n        type: \"diners-club\",\n        patterns: [[300, 305], 36, 38, 39],\n        gaps: [4, 10],\n        lengths: [14, 16, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    discover: {\n        niceType: \"Discover\",\n        type: \"discover\",\n        patterns: [6011, [644, 649], 65],\n        gaps: [4, 8, 12],\n        lengths: [16, 19],\n        code: {\n            name: \"CID\",\n            size: 3,\n        },\n    },\n    jcb: {\n        niceType: \"JCB\",\n        type: \"jcb\",\n        patterns: [2131, 1800, [3528, 3589]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    unionpay: {\n        niceType: \"UnionPay\",\n        type: \"unionpay\",\n        patterns: [\n            620,\n            [624, 626],\n            [62100, 62182],\n            [62184, 62187],\n            [62185, 62197],\n            [62200, 62205],\n            [622010, 622999],\n            622018,\n            [622019, 622999],\n            [62207, 62209],\n            [622126, 622925],\n            [623, 626],\n            6270,\n            6272,\n            6276,\n            [627700, 627779],\n            [627781, 627799],\n            [6282, 6289],\n            6291,\n            6292,\n            810,\n            [8110, 8131],\n            [8132, 8151],\n            [8152, 8163],\n            [8164, 8171],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVN\",\n            size: 3,\n        },\n    },\n    maestro: {\n        niceType: \"Maestro\",\n        type: \"maestro\",\n        patterns: [\n            493698,\n            [500000, 504174],\n            [504176, 506698],\n            [506779, 508999],\n            [56, 59],\n            63,\n            67,\n            6,\n        ],\n        gaps: [4, 8, 12],\n        lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    elo: {\n        niceType: \"Elo\",\n        type: \"elo\",\n        patterns: [\n            401178,\n            401179,\n            438935,\n            457631,\n            457632,\n            431274,\n            451416,\n            457393,\n            504175,\n            [506699, 506778],\n            [509000, 509999],\n            627780,\n            636297,\n            636368,\n            [650031, 650033],\n            [650035, 650051],\n            [650405, 650439],\n            [650485, 650538],\n            [650541, 650598],\n            [650700, 650718],\n            [650720, 650727],\n            [650901, 650978],\n            [651652, 651679],\n            [655000, 655019],\n            [655021, 655058],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVE\",\n            size: 3,\n        },\n    },\n    mir: {\n        niceType: \"Mir\",\n        type: \"mir\",\n        patterns: [[2200, 2204]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVP2\",\n            size: 3,\n        },\n    },\n    hiper: {\n        niceType: \"Hiper\",\n        type: \"hiper\",\n        patterns: [637095, 63737423, 63743358, 637568, 637599, 637609, 637612],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    hipercard: {\n        niceType: \"Hipercard\",\n        type: \"hipercard\",\n        patterns: [606282],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n};\nmodule.exports = cardTypes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = void 0;\nfunction clone(originalObject) {\n    if (!originalObject) {\n        return null;\n    }\n    return JSON.parse(JSON.stringify(originalObject));\n}\nexports.clone = clone;\n","\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMatchingCardsToResults = void 0;\nvar clone_1 = require(\"./clone\");\nvar matches_1 = require(\"./matches\");\nfunction addMatchingCardsToResults(cardNumber, cardConfiguration, results) {\n    var i, patternLength;\n    for (i = 0; i < cardConfiguration.patterns.length; i++) {\n        var pattern = cardConfiguration.patterns[i];\n        if (!matches_1.matches(cardNumber, pattern)) {\n            continue;\n        }\n        var clonedCardConfiguration = clone_1.clone(cardConfiguration);\n        if (Array.isArray(pattern)) {\n            patternLength = String(pattern[0]).length;\n        }\n        else {\n            patternLength = String(pattern).length;\n        }\n        if (cardNumber.length >= patternLength) {\n            clonedCardConfiguration.matchStrength = patternLength;\n        }\n        results.push(clonedCardConfiguration);\n        break;\n    }\n}\nexports.addMatchingCardsToResults = addMatchingCardsToResults;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidInputType = void 0;\nfunction isValidInputType(cardNumber) {\n    return typeof cardNumber === \"string\" || cardNumber instanceof String;\n}\nexports.isValidInputType = isValidInputType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findBestMatch = void 0;\nfunction hasEnoughResultsToDetermineBestMatch(results) {\n    var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) { return result.matchStrength; }).length;\n    /*\n     * if all possible results have a maxStrength property that means the card\n     * number is sufficiently long enough to determine conclusively what the card\n     * type is\n     * */\n    return (numberOfResultsWithMaxStrengthProperty > 0 &&\n        numberOfResultsWithMaxStrengthProperty === results.length);\n}\nfunction findBestMatch(results) {\n    if (!hasEnoughResultsToDetermineBestMatch(results)) {\n        return null;\n    }\n    return results.reduce(function (bestMatch, result) {\n        if (!bestMatch) {\n            return result;\n        }\n        /*\n         * If the current best match pattern is less specific than this result, set\n         * the result as the new best match\n         * */\n        if (Number(bestMatch.matchStrength) < Number(result.matchStrength)) {\n            return result;\n        }\n        return bestMatch;\n    });\n}\nexports.findBestMatch = findBestMatch;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar cardTypes = require(\"./lib/card-types\");\nvar add_matching_cards_to_results_1 = require(\"./lib/add-matching-cards-to-results\");\nvar is_valid_input_type_1 = require(\"./lib/is-valid-input-type\");\nvar find_best_match_1 = require(\"./lib/find-best-match\");\nvar clone_1 = require(\"./lib/clone\");\nvar customCards = {};\nvar cardNames = {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    AMERICAN_EXPRESS: \"american-express\",\n    DINERS_CLUB: \"diners-club\",\n    DISCOVER: \"discover\",\n    JCB: \"jcb\",\n    UNIONPAY: \"unionpay\",\n    MAESTRO: \"maestro\",\n    ELO: \"elo\",\n    MIR: \"mir\",\n    HIPER: \"hiper\",\n    HIPERCARD: \"hipercard\",\n};\nvar ORIGINAL_TEST_ORDER = [\n    cardNames.VISA,\n    cardNames.MASTERCARD,\n    cardNames.AMERICAN_EXPRESS,\n    cardNames.DINERS_CLUB,\n    cardNames.DISCOVER,\n    cardNames.JCB,\n    cardNames.UNIONPAY,\n    cardNames.MAESTRO,\n    cardNames.ELO,\n    cardNames.MIR,\n    cardNames.HIPER,\n    cardNames.HIPERCARD,\n];\nvar testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\nfunction findType(cardType) {\n    return customCards[cardType] || cardTypes[cardType];\n}\nfunction getAllCardTypes() {\n    return testOrder.map(function (cardType) { return clone_1.clone(findType(cardType)); });\n}\nfunction getCardPosition(name, ignoreErrorForNotExisting) {\n    if (ignoreErrorForNotExisting === void 0) { ignoreErrorForNotExisting = false; }\n    var position = testOrder.indexOf(name);\n    if (!ignoreErrorForNotExisting && position === -1) {\n        throw new Error('\"' + name + '\" is not a supported card type.');\n    }\n    return position;\n}\nfunction creditCardType(cardNumber) {\n    var results = [];\n    if (!is_valid_input_type_1.isValidInputType(cardNumber)) {\n        return results;\n    }\n    if (cardNumber.length === 0) {\n        return getAllCardTypes();\n    }\n    testOrder.forEach(function (cardType) {\n        var cardConfiguration = findType(cardType);\n        add_matching_cards_to_results_1.addMatchingCardsToResults(cardNumber, cardConfiguration, results);\n    });\n    var bestMatch = find_best_match_1.findBestMatch(results);\n    if (bestMatch) {\n        return [bestMatch];\n    }\n    return results;\n}\ncreditCardType.getTypeInfo = function (cardType) {\n    return clone_1.clone(findType(cardType));\n};\ncreditCardType.removeCard = function (name) {\n    var position = getCardPosition(name);\n    testOrder.splice(position, 1);\n};\ncreditCardType.addCard = function (config) {\n    var existingCardPosition = getCardPosition(config.type, true);\n    customCards[config.type] = config;\n    if (existingCardPosition === -1) {\n        testOrder.push(config.type);\n    }\n};\ncreditCardType.updateCard = function (cardType, updates) {\n    var originalObject = customCards[cardType] || cardTypes[cardType];\n    if (!originalObject) {\n        throw new Error(\"\\\"\" + cardType + \"\\\" is not a recognized type. Use `addCard` instead.'\");\n    }\n    if (updates.type && originalObject.type !== updates.type) {\n        throw new Error(\"Cannot overwrite type parameter.\");\n    }\n    var clonedCard = clone_1.clone(originalObject);\n    clonedCard = __assign(__assign({}, clonedCard), updates);\n    customCards[clonedCard.type] = clonedCard;\n};\ncreditCardType.changeOrder = function (name, position) {\n    var currentPosition = getCardPosition(name);\n    testOrder.splice(currentPosition, 1);\n    testOrder.splice(position, 0, name);\n};\ncreditCardType.resetModifications = function () {\n    testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\n    customCards = {};\n};\ncreditCardType.types = cardNames;\nmodule.exports = creditCardType;\n",null,null,"\"use strict\";\nmodule.exports = (function(){\n\tfunction validate(cardNumber){\n\t\tvar trimmed = String(cardNumber).replace(/[\\s]/g, \"\")\n\t\t\t, length = trimmed.length\n\t\t\t, odd = false\n\t\t\t, total = 0\n\t\t\t, calc\n\t\t\t, calc2;\n\n\t\t\tif (!/^[0-9]+$/.test(trimmed)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor (var i = length; i > 0; i--) {\n\t\t\t\tcalc = parseInt(trimmed.charAt(i - 1));\n\t\t\t\tif (!odd) {\n\t\t\t\t\ttotal += calc;\n\t\t\t\t} else {\n\t\t\t\t\tcalc2 = calc * 2;\n\n\t\t\t\t\tswitch (calc2) {\n\t\t\t\t\tcase 10: calc2 = 1; break;\n\t\t\t\t\tcase 12: calc2 = 3; break;\n\t\t\t\t\tcase 14: calc2 = 5; break;\n\t\t\t\t\tcase 16: calc2 = 7; break;\n\t\t\t\t\tcase 18: calc2 = 9; break;\n\t\t\t\t\tdefault: calc2 = calc2;\n\t\t\t\t\t}\n\t\t\t\t\ttotal += calc2;\n\t\t\t\t}\n\t\t\t\todd = !odd;\n\t\t\t}\n\n\t\t\treturn (total !== 0 && (total % 10) === 0);\n\t\t}\n\n\t\treturn {\n\t\t\tvalidate: validate\n\t\t};\n} ());\n",null]},"metadata":{},"sourceType":"module"}