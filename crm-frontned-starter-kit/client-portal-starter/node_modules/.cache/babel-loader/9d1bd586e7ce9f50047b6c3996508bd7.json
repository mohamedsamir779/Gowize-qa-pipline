{"ast":null,"code":"import React,{useEffect}from\"react\";import CardWrapper from\"../../../../components/Common/CardWrapper\";//i18n\nimport{withTranslation}from\"react-i18next\";import{useDispatch,connect}from\"react-redux\";import{withRouter}from\"react-router-dom\";import Loader from\"components/Common/Loader\";import{fetchLogs}from\"store/actions\";import{getHeaderStatusMessage}from\"helpers/getLogMessages\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LatestActivities=props=>{const dispatch=useDispatch();const{t,logsLoaded,logs,loading}=props;useEffect(()=>{if(!logsLoaded){dispatch(fetchLogs({page:1,limit:10}));}},[logsLoaded]);const getDashboardActivityCards=()=>{const activtites=logs&&logs.length&&logs.splice(0,4);let rt=activtites&&activtites.map(a=>{const{type,recordId,createdAt}=a;const d=new Date(createdAt);const month=d.toLocaleString(\"default\",{month:\"short\"});const year=d.getFullYear();const date=d.getDate();const{header,status,message}=getHeaderStatusMessage(a,t);return/*#__PURE__*/_jsx(\"div\",{className:\"card__item\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card__details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card__line\",children:/*#__PURE__*/_jsx(\"div\",{children:t(type)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between activity-info\",children:[/*#__PURE__*/_jsx(\"div\",{children:header}),/*#__PURE__*/_jsx(\"div\",{children:\"\".concat(month,\" \").concat(date,\", \").concat(year)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card__status color-green\",children:status}),/*#__PURE__*/_jsx(\"div\",{children:message})]})},recordId);});return rt;// return (\n//   <div className=\"card__item\">\n//     <div className=\"card__details\">\n//       <div className=\"card__line\">\n//         <div>{t(\"Withdraw USDT\")}</div>\n//       </div>\n//       <div className='d-flex justify-content-between activity-info'>\n//         <div>{t(\"Estimated best price\")}</div>\n//         <div>Nov 22, 2020</div>\n//       </div>\n//       <div className=\"card__status color-green\">{t(\"Complete\")}</div>\n//       <div>969.06654889 USDT</div>\n//     </div>\n//   </div> \n// );\n};return/*#__PURE__*/_jsx(CardWrapper,{className:\"mb-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"activity-list\",children:[loading&&/*#__PURE__*/_jsx(Loader,{}),getDashboardActivityCards(),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",className:\"btn btn-soft-link waves-effect w-100\",onClick:()=>{props.history.push(\"/activities\");},children:[/*#__PURE__*/_jsx(\"i\",{className:\"icofont-long-arrow-right icofont-2x\"}),/*#__PURE__*/_jsx(\"span\",{style:{verticalAlign:\"super\"},children:t(\"View all activity\")})]})})]})});};const mapStateToProps=state=>({logs:state.logs.logs&&state.logs.logs.docs||[],logsLoaded:state.logs.logsLoaded,loading:state.logs.loading});export default connect(mapStateToProps,null)(withTranslation()(withRouter(LatestActivities)));","map":{"version":3,"names":["React","useEffect","CardWrapper","withTranslation","useDispatch","connect","withRouter","Loader","fetchLogs","getHeaderStatusMessage","jsx","_jsx","jsxs","_jsxs","LatestActivities","props","dispatch","t","logsLoaded","logs","loading","page","limit","getDashboardActivityCards","activtites","length","splice","rt","map","a","type","recordId","createdAt","d","Date","month","toLocaleString","year","getFullYear","date","getDate","header","status","message","className","children","concat","onClick","history","push","style","verticalAlign","mapStateToProps","state","docs"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/pages/Crypto/Dashboard/RightContent/LatestActivities.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport CardWrapper from \"../../../../components/Common/CardWrapper\";\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport { useDispatch, connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Loader from \"components/Common/Loader\";\nimport { fetchLogs } from \"store/actions\";\nimport { getHeaderStatusMessage } from \"helpers/getLogMessages\";\n\nconst LatestActivities = (props) => {\n  const dispatch = useDispatch();\n  const {\n    t,\n    logsLoaded,\n    logs,\n    loading,\n  } = props;\n\n  useEffect(()=>{\n    if (!logsLoaded) {\n      dispatch(fetchLogs({\n        page: 1,\n        limit: 10,\n      }));\n    }\n  }, [logsLoaded]);\n\n  const getDashboardActivityCards = () => {\n    const activtites = logs && logs.length && logs.splice(0, 4);\n    let rt = activtites && activtites.map((a) => {\n      const {\n        type,\n        recordId,\n        createdAt,\n      } = a;\n      const d = new Date(createdAt);\n      const month = d.toLocaleString(\"default\", { month: \"short\" });\n      const year = d.getFullYear();\n      const date = d.getDate();\n      const {\n        header,\n        status,\n        message,\n      } = getHeaderStatusMessage(a, t);\n      return (\n        <div key={recordId} className=\"card__item\">\n          <div className=\"card__details\">\n            <div className=\"card__line\">\n              <div>{t(type)}</div>\n            </div>\n            <div className='d-flex justify-content-between activity-info'>\n              <div>{header}</div>\n              <div>{`${month} ${date}, ${year}`}</div>\n            </div>\n            <div className=\"card__status color-green\">{status}</div>\n            <div>{message}</div>\n          </div>\n        </div> \n      );\n    });\n    return rt;\n    // return (\n    //   <div className=\"card__item\">\n    //     <div className=\"card__details\">\n    //       <div className=\"card__line\">\n    //         <div>{t(\"Withdraw USDT\")}</div>\n    //       </div>\n    //       <div className='d-flex justify-content-between activity-info'>\n    //         <div>{t(\"Estimated best price\")}</div>\n    //         <div>Nov 22, 2020</div>\n    //       </div>\n    //       <div className=\"card__status color-green\">{t(\"Complete\")}</div>\n    //       <div>969.06654889 USDT</div>\n    //     </div>\n    //   </div> \n    // );\n  };\n\n  return (\n    <CardWrapper className=\"mb-5\">\n      <div className=\"activity-list\">\n        {loading && <Loader />}\n        {getDashboardActivityCards()}\n        <div className='text-center'>\n          <button \n            type=\"button\" \n            className=\"btn btn-soft-link waves-effect w-100\"\n            onClick={()=>{props.history.push(\"/activities\")}}\n          > \n            <i className=\"icofont-long-arrow-right icofont-2x\"></i>\n            <span style={{ verticalAlign: \"super\" }}>{t(\"View all activity\")}</span>\n          </button>\n        </div>\n      </div>\n    </CardWrapper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  logs: state.logs.logs && state.logs.logs.docs || [],\n  logsLoaded: state.logs.logsLoaded,\n  loading: state.logs.loading,\n});\n\nexport default connect(mapStateToProps, null)(withTranslation()(withRouter(LatestActivities)));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}