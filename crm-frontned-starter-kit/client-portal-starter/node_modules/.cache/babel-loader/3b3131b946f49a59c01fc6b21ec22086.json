{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/king/portal/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{FETCH_WITHDRAWALS_GATEWAYS_START,FETCH_WITHDRAWALS_GATEWAYS_SUCCESS,ADD_WITHDRAWAL_REQUESTED,ADD_WITHDRAWAL_SUCCESS,ADD_WITHDRAWAL_FAIL,GET_IB_WITHDRAWS_START,GET_IB_WITHDRAWS_SUCCCESS,GET_IB_DEPOSITS_START,GET_IB_DEPOSITS_SUCCCESS,IB_INTERNAL_TRANSFER_START,IB_INTERNAL_TRANSFER_SUCCESS,IB_INTERNAL_TRANSFER_FAILED}from\"./actionTypes\";const initialState={loading:false,deposits:{docs:[]},withdraws:{docs:[],gateways:[],loading:false,submitting:false},ibInternalTransfer:{}};const ibTransactions=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_WITHDRAWALS_GATEWAYS_START:return state=_objectSpread(_objectSpread({},state),{},{withdraws:_objectSpread(_objectSpread({},state.withdraws),{},{loading:true})});case FETCH_WITHDRAWALS_GATEWAYS_SUCCESS:return state=_objectSpread(_objectSpread({},state),{},{withdraws:_objectSpread(_objectSpread({},state.withdraws),{},{gateways:_objectSpread({},action.payload.result),loading:false})});case ADD_WITHDRAWAL_REQUESTED:return state=_objectSpread(_objectSpread({},state),{},{withdraws:_objectSpread(_objectSpread({},state.withdraws),{},{submitting:true})});case ADD_WITHDRAWAL_SUCCESS:return state=_objectSpread(_objectSpread({},state),{},{withdraws:_objectSpread(_objectSpread({},state.withdraws),{},{docs:[...state.withdraws.docs,action.payload.result],submitting:false})});case ADD_WITHDRAWAL_FAIL:return state=_objectSpread(_objectSpread({},state),{},{withdraws:_objectSpread(_objectSpread({},state.withdraws),{},{submitting:false,error:action.payload.error})});case GET_IB_WITHDRAWS_START:return _objectSpread(_objectSpread({},state),{},{withdraws:_objectSpread(_objectSpread({},state.withdraws),{},{loading:true})});case GET_IB_DEPOSITS_START:return _objectSpread(_objectSpread({},state),{},{deposits:_objectSpread(_objectSpread({},state.deposits),{},{loading:true})});case GET_IB_WITHDRAWS_SUCCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,withdraws:_objectSpread({loading:false},action.payload)});case GET_IB_DEPOSITS_SUCCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,deposits:_objectSpread({loading:false},action.payload)});case IB_INTERNAL_TRANSFER_START:return _objectSpread(_objectSpread({},state),{},{ibInternalTransfer:_objectSpread(_objectSpread({},state.ibInternalTransfer),{},{loading:true})});case IB_INTERNAL_TRANSFER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{ibInternalTransfer:_objectSpread(_objectSpread({},state.ibInternalTransfer),{},{loading:false})});case IB_INTERNAL_TRANSFER_FAILED:return _objectSpread(_objectSpread({},state),{},{ibInternalTransfer:_objectSpread(_objectSpread({},state.ibInternalTransfer),{},{loading:false})});default:return state;}};export default ibTransactions;","map":{"version":3,"names":["FETCH_WITHDRAWALS_GATEWAYS_START","FETCH_WITHDRAWALS_GATEWAYS_SUCCESS","ADD_WITHDRAWAL_REQUESTED","ADD_WITHDRAWAL_SUCCESS","ADD_WITHDRAWAL_FAIL","GET_IB_WITHDRAWS_START","GET_IB_WITHDRAWS_SUCCCESS","GET_IB_DEPOSITS_START","GET_IB_DEPOSITS_SUCCCESS","IB_INTERNAL_TRANSFER_START","IB_INTERNAL_TRANSFER_SUCCESS","IB_INTERNAL_TRANSFER_FAILED","initialState","loading","deposits","docs","withdraws","gateways","submitting","ibInternalTransfer","ibTransactions","state","arguments","length","undefined","action","type","_objectSpread","payload","result","error"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/store/forex/ib/transactions/reducer.js"],"sourcesContent":["import {\n  FETCH_WITHDRAWALS_GATEWAYS_START, FETCH_WITHDRAWALS_GATEWAYS_SUCCESS,\n  ADD_WITHDRAWAL_REQUESTED, ADD_WITHDRAWAL_SUCCESS, ADD_WITHDRAWAL_FAIL,\n  GET_IB_WITHDRAWS_START, GET_IB_WITHDRAWS_SUCCCESS,\n  GET_IB_DEPOSITS_START, GET_IB_DEPOSITS_SUCCCESS,\n  IB_INTERNAL_TRANSFER_START, IB_INTERNAL_TRANSFER_SUCCESS, IB_INTERNAL_TRANSFER_FAILED\n} from \"./actionTypes\";\n\nconst initialState = {\n  loading: false,\n  deposits: { docs: [] },\n  withdraws: { \n    docs: [],\n    gateways: [],\n    loading: false,\n    submitting: false,\n  },\n  ibInternalTransfer: {}\n};\n\nconst ibTransactions = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_WITHDRAWALS_GATEWAYS_START:\n      return state = {\n        ...state,\n        withdraws: {\n          ...state.withdraws,\n          loading: true\n        }\n      };\n    case FETCH_WITHDRAWALS_GATEWAYS_SUCCESS:\n      return state = {\n        ...state,\n        withdraws: {\n          ...state.withdraws,\n          gateways: { ...action.payload.result },\n          loading: false,\n        }\n      };\n    case ADD_WITHDRAWAL_REQUESTED:\n      return state = {\n        ...state,\n        withdraws: {\n          ...state.withdraws,\n          submitting: true,\n        }\n      };\n    case ADD_WITHDRAWAL_SUCCESS:\n      return state = {\n        ...state,\n        withdraws: {\n          ...state.withdraws,\n          docs: [...state.withdraws.docs, action.payload.result],\n          submitting: false\n        }\n      };\n    case ADD_WITHDRAWAL_FAIL:\n      return state = {\n        ...state,\n        withdraws: {\n          ...state.withdraws,\n          submitting: false,\n          error: action.payload.error,\n        }\n      };\n    case GET_IB_WITHDRAWS_START:\n      return {\n        ...state,\n        withdraws: {\n          ...state.withdraws,\n          loading: true\n        }\n      };\n    case GET_IB_DEPOSITS_START:\n      return {\n        ...state,\n        deposits: {\n          ...state.deposits,\n          loading: true\n        }\n      };\n    case GET_IB_WITHDRAWS_SUCCCESS:\n      return {\n        ...state,\n        loading: false,\n        withdraws: {\n          loading: false,\n          ...action.payload\n        }\n      };\n    case GET_IB_DEPOSITS_SUCCCESS:\n      return {\n        ...state,\n        loading: false,\n        deposits: {\n          loading: false,\n          ...action.payload\n        }\n      };\n    case IB_INTERNAL_TRANSFER_START:\n      return {\n        ...state,\n        ibInternalTransfer: {\n          ...state.ibInternalTransfer,\n          loading: true,\n        }\n      };\n    case IB_INTERNAL_TRANSFER_SUCCESS:\n      return {\n        ...state,\n        ibInternalTransfer: {\n          ...state.ibInternalTransfer,\n          loading: false,\n        }\n      };\n    case IB_INTERNAL_TRANSFER_FAILED:\n      return {\n        ...state,\n        ibInternalTransfer: {\n          ...state.ibInternalTransfer,\n          loading: false\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport default ibTransactions;"],"mappings":"mIAAA,OACEA,gCAAgC,CAAEC,kCAAkC,CACpEC,wBAAwB,CAAEC,sBAAsB,CAAEC,mBAAmB,CACrEC,sBAAsB,CAAEC,yBAAyB,CACjDC,qBAAqB,CAAEC,wBAAwB,CAC/CC,0BAA0B,CAAEC,4BAA4B,CAAEC,2BAA2B,KAChF,eAAe,CAEtB,KAAM,CAAAC,YAAY,CAAG,CACnBC,OAAO,CAAE,KAAK,CACdC,QAAQ,CAAE,CAAEC,IAAI,CAAE,EAAG,CAAC,CACtBC,SAAS,CAAE,CACTD,IAAI,CAAE,EAAE,CACRE,QAAQ,CAAE,EAAE,CACZJ,OAAO,CAAE,KAAK,CACdK,UAAU,CAAE,KACd,CAAC,CACDC,kBAAkB,CAAE,CAAC,CACvB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGV,YAAY,IAAE,CAAAa,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAClD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,CAAA1B,gCAAgC,CACnC,MAAO,CAAAqB,KAAK,CAAAM,aAAA,CAAAA,aAAA,IACPN,KAAK,MACRL,SAAS,CAAAW,aAAA,CAAAA,aAAA,IACJN,KAAK,CAACL,SAAS,MAClBH,OAAO,CAAE,IAAI,EACd,EACF,CACH,IAAK,CAAAZ,kCAAkC,CACrC,MAAO,CAAAoB,KAAK,CAAAM,aAAA,CAAAA,aAAA,IACPN,KAAK,MACRL,SAAS,CAAAW,aAAA,CAAAA,aAAA,IACJN,KAAK,CAACL,SAAS,MAClBC,QAAQ,CAAAU,aAAA,IAAOF,MAAM,CAACG,OAAO,CAACC,MAAM,CAAE,CACtChB,OAAO,CAAE,KAAK,EACf,EACF,CACH,IAAK,CAAAX,wBAAwB,CAC3B,MAAO,CAAAmB,KAAK,CAAAM,aAAA,CAAAA,aAAA,IACPN,KAAK,MACRL,SAAS,CAAAW,aAAA,CAAAA,aAAA,IACJN,KAAK,CAACL,SAAS,MAClBE,UAAU,CAAE,IAAI,EACjB,EACF,CACH,IAAK,CAAAf,sBAAsB,CACzB,MAAO,CAAAkB,KAAK,CAAAM,aAAA,CAAAA,aAAA,IACPN,KAAK,MACRL,SAAS,CAAAW,aAAA,CAAAA,aAAA,IACJN,KAAK,CAACL,SAAS,MAClBD,IAAI,CAAE,CAAC,GAAGM,KAAK,CAACL,SAAS,CAACD,IAAI,CAAEU,MAAM,CAACG,OAAO,CAACC,MAAM,CAAC,CACtDX,UAAU,CAAE,KAAK,EAClB,EACF,CACH,IAAK,CAAAd,mBAAmB,CACtB,MAAO,CAAAiB,KAAK,CAAAM,aAAA,CAAAA,aAAA,IACPN,KAAK,MACRL,SAAS,CAAAW,aAAA,CAAAA,aAAA,IACJN,KAAK,CAACL,SAAS,MAClBE,UAAU,CAAE,KAAK,CACjBY,KAAK,CAAEL,MAAM,CAACG,OAAO,CAACE,KAAK,EAC5B,EACF,CACH,IAAK,CAAAzB,sBAAsB,CACzB,OAAAsB,aAAA,CAAAA,aAAA,IACKN,KAAK,MACRL,SAAS,CAAAW,aAAA,CAAAA,aAAA,IACJN,KAAK,CAACL,SAAS,MAClBH,OAAO,CAAE,IAAI,EACd,GAEL,IAAK,CAAAN,qBAAqB,CACxB,OAAAoB,aAAA,CAAAA,aAAA,IACKN,KAAK,MACRP,QAAQ,CAAAa,aAAA,CAAAA,aAAA,IACHN,KAAK,CAACP,QAAQ,MACjBD,OAAO,CAAE,IAAI,EACd,GAEL,IAAK,CAAAP,yBAAyB,CAC5B,OAAAqB,aAAA,CAAAA,aAAA,IACKN,KAAK,MACRR,OAAO,CAAE,KAAK,CACdG,SAAS,CAAAW,aAAA,EACPd,OAAO,CAAE,KAAK,EACXY,MAAM,CAACG,OAAO,CAClB,GAEL,IAAK,CAAApB,wBAAwB,CAC3B,OAAAmB,aAAA,CAAAA,aAAA,IACKN,KAAK,MACRR,OAAO,CAAE,KAAK,CACdC,QAAQ,CAAAa,aAAA,EACNd,OAAO,CAAE,KAAK,EACXY,MAAM,CAACG,OAAO,CAClB,GAEL,IAAK,CAAAnB,0BAA0B,CAC7B,OAAAkB,aAAA,CAAAA,aAAA,IACKN,KAAK,MACRF,kBAAkB,CAAAQ,aAAA,CAAAA,aAAA,IACbN,KAAK,CAACF,kBAAkB,MAC3BN,OAAO,CAAE,IAAI,EACd,GAEL,IAAK,CAAAH,4BAA4B,CAC/B,OAAAiB,aAAA,CAAAA,aAAA,IACKN,KAAK,MACRF,kBAAkB,CAAAQ,aAAA,CAAAA,aAAA,IACbN,KAAK,CAACF,kBAAkB,MAC3BN,OAAO,CAAE,KAAK,EACf,GAEL,IAAK,CAAAF,2BAA2B,CAC9B,OAAAgB,aAAA,CAAAA,aAAA,IACKN,KAAK,MACRF,kBAAkB,CAAAQ,aAAA,CAAAA,aAAA,IACbN,KAAK,CAACF,kBAAkB,MAC3BN,OAAO,CAAE,KAAK,EACf,GAEL,QACE,MAAO,CAAAQ,KAAK,CAChB,CACF,CAAC,CACD,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}