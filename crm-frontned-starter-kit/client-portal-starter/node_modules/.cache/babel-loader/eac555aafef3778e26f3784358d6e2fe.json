{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/king/portal/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import classNames from\"classnames\";import CardWrapper from\"components/Common/CardWrapper\";import TableLoader from\"components/Common/TableLoader\";import{useEffect,useState}from\"react\";import{useTranslation,withTranslation}from\"react-i18next\";import{useDispatch,useSelector}from\"react-redux\";import{Tbody,Th,Thead,Tr}from\"react-super-responsive-table\";import{Button,ButtonGroup,Table}from\"reactstrap\";import{getClientAccountActivities}from\"store/forex/ib/clients/actions\";import CustomPagination from\"components/Common/CustomPagination\";import moment from\"moment\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function TradingActivity(props){const{t}=useTranslation();const dispatch=useDispatch();const[positionsType,setPositionsType]=useState(\"open-positions\");const state=useSelector(state=>state.forex.ib.clients.clientAccountActivity);const[sizePerPage,setSizePerPage]=useState(10);const loadClientAccountActivities=(page,limit)=>{if(!positionsType)return;if(props.selectedTradingAccount){dispatch(getClientAccountActivities({tradingAccountId:props.selectedTradingAccount._id,type:positionsType,page,limit}));}};useEffect(()=>{if(props.selectedTradingAccount){loadClientAccountActivities(1,sizePerPage);}},[props.selectedTradingAccount,positionsType,sizePerPage]);const togglePositionType=()=>positionsType===\"open-positions\"?setPositionsType(\"closed-positions\"):setPositionsType(\"open-positions\");const columns=positionsType===\"open-positions\"?[{dataField:\"Position\",text:t(\"Position\")},{dataField:\"Symbol\",text:t(\"Symbol\")},// {\n//   dataField: \"Profit\",\n//   text: t(\"Profit\"),\n// },\n{dataField:\"PriceOpen\",text:t(\"PriceOpen\")},// {\n//   dataField: \"Profit\",\n//   text: t(\"Profit\")\n// },\n{dataField:\"CreatedTime\",text:t(\"Created Time\"),formatter:row=>moment(row.TimeCreate).format(\"DD-MM-YYYY HH:mm:ss\")}]:[{dataField:\"Position\",text:\"#\"},{dataField:\"Symbol\",text:t(\"Symbol\")},{dataField:\"Profit\",text:t(\"Profit\")},// {\n//   dataField: \"PriceOpen\",\n//   text: t(\"Open Price\"),\n// },\n{dataField:\"PriceClose\",text:t(\"Close Price\")},{dataField:\"Volume\",text:t(\"Volume\"),formatter:row=>row.Volume/100000},{dataField:\"CreatedTime\",text:t(\"Created Time\"),formatter:row=>moment(row.TimeCreate/* * 1000*/).format(\"DD-MM-YYYY HH:mm:ss\")}];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(CardWrapper,{className:\"nav-tab-custom shadow glass-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"color-primary\",children:t(\"Trading Activities\")}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(Button,{className:classNames(\"btn btn-light shadow-lg mx-1 border-0\",{\"text-white color-bg-btn\":positionsType===\"open-positions\"}),onClick:togglePositionType,children:t(\"Open Trades\")}),/*#__PURE__*/_jsx(Button,{className:classNames(\"btn btn-light shadow-lg mx-1 border-0\",{\"text-white color-bg-btn\":positionsType===\"closed-positions\"}),onClick:togglePositionType,children:t(\"Closed Trades\")})]})]}),props.selectedTradingAccount?/*#__PURE__*/_jsx(_Fragment,{children:state.loading?/*#__PURE__*/_jsx(TableLoader,{colSpan:12,className:\"m-auto\"}):state.docs.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"table-rep-plugin border rounded-3 mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"table-responsive mb-0\",\"data-pattern\":\"priority-columns\",children:[/*#__PURE__*/_jsxs(Table,{id:\"tech-companies-1\",className:\"table table-hover\",children:[/*#__PURE__*/_jsx(Thead,{className:\"text-center table-light\",children:/*#__PURE__*/_jsx(Tr,{children:columns.map((column,index)=>/*#__PURE__*/_jsx(Th,{\"data-priority\":index,className:\"color-primary\",children:column.text},index))})}),/*#__PURE__*/_jsxs(Tbody,{style:{textAlign:\"center\"},children:[state.loading&&/*#__PURE__*/_jsx(TableLoader,{colSpan:12}),!state.loading&&state.docs.length>0&&state.docs.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"tr\",{className:\"border-bottom\",children:columns.map((column,index)=>/*#__PURE__*/_jsx(\"td\",{children:column.formatter?column.formatter(row,rowIndex):row[column.dataField]},\"\".concat(rowIndex,\"-\").concat(index)))},rowIndex))]})]}),/*#__PURE__*/_jsx(CustomPagination,_objectSpread(_objectSpread({},state),{},{setSizePerPage:setSizePerPage,sizePerPage:sizePerPage,onChange:loadClientAccountActivities,docs:state.docs}))]})}):/*#__PURE__*/_jsx(\"p\",{className:\"text-center m-3\",children:t(\"No Trading activities Available\")})}):/*#__PURE__*/_jsx(\"p\",{className:\"text-center m-3\",children:t(\"No Trading activities Selected\")})]})});}export default withTranslation()(TradingActivity);","map":{"version":3,"names":["classNames","CardWrapper","TableLoader","useEffect","useState","useTranslation","withTranslation","useDispatch","useSelector","Tbody","Th","Thead","Tr","Button","ButtonGroup","Table","getClientAccountActivities","CustomPagination","moment","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TradingActivity","props","t","dispatch","positionsType","setPositionsType","state","forex","ib","clients","clientAccountActivity","sizePerPage","setSizePerPage","loadClientAccountActivities","page","limit","selectedTradingAccount","tradingAccountId","_id","type","togglePositionType","columns","dataField","text","formatter","row","TimeCreate","format","Volume","children","className","onClick","loading","colSpan","docs","length","id","map","column","index","style","textAlign","rowIndex","concat","_objectSpread","onChange"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/pages/Forex/Partnership/Clients/TradingActivity.js"],"sourcesContent":["import classNames from \"classnames\";\nimport CardWrapper from \"components/Common/CardWrapper\";\nimport TableLoader from \"components/Common/TableLoader\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Tbody, Th, Thead, Tr \n} from \"react-super-responsive-table\";\nimport {\n  Button, ButtonGroup, Table\n} from \"reactstrap\";\nimport { getClientAccountActivities } from \"store/forex/ib/clients/actions\";\nimport CustomPagination from \"components/Common/CustomPagination\";\nimport moment from \"moment\";\n\n\nfunction TradingActivity(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [positionsType, setPositionsType] = useState(\"open-positions\");\n  const state = useSelector(state=>state.forex.ib.clients.clientAccountActivity);\n  const [sizePerPage, setSizePerPage] = useState(10);\n\n  const loadClientAccountActivities = (page, limit)=>{\n    if (!positionsType) return ;\n    if (props.selectedTradingAccount){\n      dispatch(getClientAccountActivities({\n        tradingAccountId: props.selectedTradingAccount._id,\n        type: positionsType,\n        page,\n        limit\n      }));\n    }\n  };\n\n  useEffect(()=>{\n    if (props.selectedTradingAccount){\n      loadClientAccountActivities(1, sizePerPage);\n    }\n  }, [props.selectedTradingAccount, positionsType, sizePerPage]);\n\n  const togglePositionType = () => positionsType === \"open-positions\" ? setPositionsType(\"closed-positions\") : setPositionsType(\"open-positions\");\n\n  const columns = positionsType === \"open-positions\" ? [\n    {\n      dataField: \"Position\",\n      text: t(\"Position\"),\n    },\n    {\n      dataField:\"Symbol\",\n      text:t(\"Symbol\")\n    },\n    // {\n    //   dataField: \"Profit\",\n    //   text: t(\"Profit\"),\n    // },\n    {\n      dataField: \"PriceOpen\",\n      text: t(\"PriceOpen\"),\n    },\n    // {\n    //   dataField: \"Profit\",\n    //   text: t(\"Profit\")\n    // },\n    {\n      dataField: \"CreatedTime\",\n      text: t(\"Created Time\"),\n      formatter: (row) => moment(row.TimeCreate ).format(\"DD-MM-YYYY HH:mm:ss\")\n    }\n  ] : [\n    {\n      dataField: \"Position\",\n      text: (\"#\"),\n    },\n    {\n      dataField:\"Symbol\",\n      text:t(\"Symbol\")\n    },\n    {\n      dataField: \"Profit\",\n      text: t(\"Profit\"),\n    },\n    // {\n    //   dataField: \"PriceOpen\",\n    //   text: t(\"Open Price\"),\n    // },\n    {\n      dataField: \"PriceClose\",\n      text: t(\"Close Price\"),\n    },\n    {\n      dataField: \"Volume\",\n      text: t(\"Volume\"),\n      formatter: (row) => row.Volume / 100000\n    },\n    {\n      dataField: \"CreatedTime\",\n      text: t(\"Created Time\"),\n      formatter: (row) => moment(row.TimeCreate /* * 1000*/).format(\"DD-MM-YYYY HH:mm:ss\")\n    }\n  ];\n\n\n  return ( \n    <>\n      <CardWrapper className=\"nav-tab-custom shadow glass-card\">\n        <div className=\"d-flex justify-content-between\">\n          <h5 className=\"color-primary\">{t(\"Trading Activities\")}</h5>\n          <ButtonGroup>\n            <Button\n              className={classNames(\"btn btn-light shadow-lg mx-1 border-0\", {\n                \"text-white color-bg-btn\": positionsType === \"open-positions\",\n              })}\n              onClick={togglePositionType}>\n              {t(\"Open Trades\")}\n            </Button>\n            <Button\n              className={classNames(\"btn btn-light shadow-lg mx-1 border-0\", {\n                \"text-white color-bg-btn\": positionsType === \"closed-positions\",\n              })}\n              onClick={togglePositionType}>\n              {t(\"Closed Trades\")}\n            </Button>\n          </ButtonGroup>\n        </div>\n        {props.selectedTradingAccount ? <>\n          {state.loading ? <TableLoader colSpan={12} className=\"m-auto\"/> : state.docs.length > 0 ? \n            <div className=\"table-rep-plugin border rounded-3 mt-4\">\n              <div\n                className=\"table-responsive mb-0\"\n                data-pattern=\"priority-columns\"\n              >\n                <Table\n                  id=\"tech-companies-1\"\n                  className=\"table table-hover\"\n                >\n                  <Thead className=\"text-center table-light\">\n                    <Tr>\n                      {columns.map((column, index) => (\n                        <Th data-priority={index} key={index} className=\"color-primary\">\n                          {column.text}\n                        </Th>\n                      ))}\n                    </Tr>\n                  </Thead>\n                  <Tbody style={{ textAlign: \"center\" }}>\n                    {state.loading && <TableLoader colSpan={12} />}\n                    {!state.loading && state.docs.length > 0 && state.docs.map((row, rowIndex) => (\n                      <tr key={rowIndex} className=\"border-bottom\">\n                        {columns.map((column, index) => (\n                          <td key={`${rowIndex}-${index}`}>\n                            {column.formatter\n                              ? column.formatter(row, rowIndex)\n                              : row[column.dataField]}\n                          </td>\n                        ))}\n                      </tr>))}\n                  </Tbody>\n                </Table>\n                <CustomPagination\n                  {...state}\n                  setSizePerPage={setSizePerPage}\n                  sizePerPage={sizePerPage}\n                  onChange={loadClientAccountActivities}\n                  docs={state.docs}\n                />\n              </div>\n            </div> : <p className=\"text-center m-3\">{t(\"No Trading activities Available\")}</p>}\n        </> : <p className=\"text-center m-3\">{t(\"No Trading activities Selected\")}</p>}\n      </CardWrapper>\n    </> \n  );\n}\n\nexport default withTranslation()(TradingActivity);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}