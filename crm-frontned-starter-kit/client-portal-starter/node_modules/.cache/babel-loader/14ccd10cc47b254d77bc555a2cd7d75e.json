{"ast":null,"code":"import qs from\"qs\";import*as axiosHelper from\"./api_helper\";export const fetchWalletsAPI=async _ref=>{let{payload}=_ref;const result=await axiosHelper.get(\"/wallets/?\".concat(qs.stringify(payload)));if(result.status)return result.result;else throw new Error(result.message);};export const createWalletTransferRequest=async _ref2=>{let{payload}=_ref2;const data=await axiosHelper.post(\"/wallet/transfer\",payload);if(data.isError){throw new Error(data.message);}return data;};export const fetchReportsAPI=async payload=>{const result=await axiosHelper.get(\"/wallet/report/?\".concat(qs.stringify(payload)));if(result.status)return result.result;else throw new Error(result.message);};export const createIbWalletTransferAPI=async _ref3=>{let{payload}=_ref3;const result=await axiosHelper.post(\"/ib-wallet/transfer\",payload);if(result.isError){throw new Error(result.message);}return result;};","map":{"version":3,"names":["qs","axiosHelper","fetchWalletsAPI","_ref","payload","result","get","concat","stringify","status","Error","message","createWalletTransferRequest","_ref2","data","post","isError","fetchReportsAPI","createIbWalletTransferAPI","_ref3"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/wallets.js"],"sourcesContent":["import qs from \"qs\";\nimport * as axiosHelper from \"./api_helper\";\n\nexport const fetchWalletsAPI = async ({ payload }) => {\n  const result = await axiosHelper.get(`/wallets/?${qs.stringify(payload)}`);\n  if (result.status)\n    return result.result;\n  else\n    throw new Error(result.message);\n};\n\nexport const createWalletTransferRequest = async({ payload }) => {\n  const data = await axiosHelper.post(\"/wallet/transfer\", payload);\n  if (data.isError) {\n    throw new Error(data.message);\n  } \n  return data;\n};\n\nexport const fetchReportsAPI = async (payload) => {\n  const result = await axiosHelper.get(`/wallet/report/?${qs.stringify(payload)}`);\n  if (result.status)\n    return result.result;\n  else\n    throw new Error(result.message);\n};\n\nexport const createIbWalletTransferAPI = async ({ payload }) => {\n  const result = await axiosHelper.post(\"/ib-wallet/transfer\", payload);\n  if (result.isError) {\n    throw new Error(result.message);\n  } \n  return result;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,EAAE,KAAM,IAAI,CACnB,MAAO,GAAK,CAAAC,WAAW,KAAM,cAAc,CAE3C,MAAO,MAAM,CAAAC,eAAe,CAAG,MAAAC,IAAA,EAAuB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAAAE,MAAM,CAAG,KAAM,CAAAJ,WAAW,CAACK,GAAG,cAAAC,MAAA,CAAcP,EAAE,CAACQ,SAAS,CAACJ,OAAO,CAAC,CAAE,CAAC,CAC1E,GAAIC,MAAM,CAACI,MAAM,CACf,MAAO,CAAAJ,MAAM,CAACA,MAAM,CAAC,IAErB,MAAM,IAAI,CAAAK,KAAK,CAACL,MAAM,CAACM,OAAO,CAAC,CACnC,CAAC,CAED,MAAO,MAAM,CAAAC,2BAA2B,CAAG,MAAAC,KAAA,EAAsB,IAAhB,CAAET,OAAQ,CAAC,CAAAS,KAAA,CAC1D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAb,WAAW,CAACc,IAAI,CAAC,kBAAkB,CAAEX,OAAO,CAAC,CAChE,GAAIU,IAAI,CAACE,OAAO,CAAE,CAChB,KAAM,IAAI,CAAAN,KAAK,CAACI,IAAI,CAACH,OAAO,CAAC,CAC/B,CACA,MAAO,CAAAG,IAAI,CACb,CAAC,CAED,MAAO,MAAM,CAAAG,eAAe,CAAG,KAAO,CAAAb,OAAO,EAAK,CAChD,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAJ,WAAW,CAACK,GAAG,oBAAAC,MAAA,CAAoBP,EAAE,CAACQ,SAAS,CAACJ,OAAO,CAAC,CAAE,CAAC,CAChF,GAAIC,MAAM,CAACI,MAAM,CACf,MAAO,CAAAJ,MAAM,CAACA,MAAM,CAAC,IAErB,MAAM,IAAI,CAAAK,KAAK,CAACL,MAAM,CAACM,OAAO,CAAC,CACnC,CAAC,CAED,MAAO,MAAM,CAAAO,yBAAyB,CAAG,MAAAC,KAAA,EAAuB,IAAhB,CAAEf,OAAQ,CAAC,CAAAe,KAAA,CACzD,KAAM,CAAAd,MAAM,CAAG,KAAM,CAAAJ,WAAW,CAACc,IAAI,CAAC,qBAAqB,CAAEX,OAAO,CAAC,CACrE,GAAIC,MAAM,CAACW,OAAO,CAAE,CAClB,KAAM,IAAI,CAAAN,KAAK,CAACL,MAAM,CAACM,OAAO,CAAC,CACjC,CACA,MAAO,CAAAN,MAAM,CACf,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}