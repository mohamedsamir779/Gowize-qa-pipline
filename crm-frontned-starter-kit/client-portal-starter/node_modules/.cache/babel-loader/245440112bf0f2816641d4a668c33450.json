{"ast":null,"code":"import QueryString from\"qs\";import*as axiosHelper from\"./api_helper\";export const fetchNotifications=async payload=>{const data=await axiosHelper.get(\"/notifications?\".concat(QueryString.stringify(payload)));if(data.isError){throw new Error(data.message);}return data;};export const markNotificationsRead=async payload=>{const data=await axiosHelper.patch(\"/notifications/mark-read\",payload);if(data.isError){throw new Error(data.message);}return data;};","map":{"version":3,"names":["QueryString","axiosHelper","fetchNotifications","payload","data","get","concat","stringify","isError","Error","message","markNotificationsRead","patch"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/apis/notifications.js"],"sourcesContent":["\nimport QueryString from \"qs\";\nimport * as axiosHelper from \"./api_helper\";\n\nexport const fetchNotifications = async (payload) => {\n  const data = await axiosHelper.get(`/notifications?${QueryString.stringify(payload)}`);\n  if (data.isError) {\n    throw new Error(data.message);\n  }\n  return data;\n};\n\nexport const markNotificationsRead = async (payload) => {\n  const data = await axiosHelper.patch(\"/notifications/mark-read\", payload);\n  if (data.isError) {\n    throw new Error(data.message);\n  }\n  return data;\n};"],"mappings":"AACA,MAAO,CAAAA,WAAW,KAAM,IAAI,CAC5B,MAAO,GAAK,CAAAC,WAAW,KAAM,cAAc,CAE3C,MAAO,MAAM,CAAAC,kBAAkB,CAAG,KAAO,CAAAC,OAAO,EAAK,CACnD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAH,WAAW,CAACI,GAAG,mBAAAC,MAAA,CAAmBN,WAAW,CAACO,SAAS,CAACJ,OAAO,CAAC,CAAE,CAAC,CACtF,GAAIC,IAAI,CAACI,OAAO,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACL,IAAI,CAACM,OAAO,CAAC,CAC/B,CACA,MAAO,CAAAN,IAAI,CACb,CAAC,CAED,MAAO,MAAM,CAAAO,qBAAqB,CAAG,KAAO,CAAAR,OAAO,EAAK,CACtD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAH,WAAW,CAACW,KAAK,CAAC,0BAA0B,CAAET,OAAO,CAAC,CACzE,GAAIC,IAAI,CAACI,OAAO,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACL,IAAI,CAACM,OAAO,CAAC,CAC/B,CACA,MAAO,CAAAN,IAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}