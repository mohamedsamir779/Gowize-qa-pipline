{"ast":null,"code":"import*as axiosHelper from\"./api_helper\";export const getWallets=async()=>{const data=await axiosHelper.get(\"/wallets\");if(data.isError){throw new Error(data.isError);}return data===null||data===void 0?void 0:data.result;};export const addWithdraw=async values=>{// const { id, values } = payload;\nconsole.log(\"Withdraw: \",{values});const data=await axiosHelper.post(\"transactions/withdraw\",values);// if (data.isError) {\n//   throw new Error(data.message);\n// }\nreturn data;};export const addWithdrawCrypto=async values=>{// const { id, values } = payload;\nconsole.log(\"CRYPTO Withdraw: \",{values});const data=await axiosHelper.post({url:\"transactions/withdraw/crypto\",data:values});// if (data.isError) {\n//   throw new Error(data.message);\n// }\nreturn data;};export const addFxWithdraw=async values=>{console.log(\"FX Withdraw: \",{values});const data=await axiosHelper.post(\"fxtransactions/withdrawals\",values);return data;};// export const fetchwallets = async () => {\n//     const data = await axiosHelper.get('wallets');\n//     return data.result;\n// }","map":{"version":3,"names":["axiosHelper","getWallets","data","get","isError","Error","result","addWithdraw","values","console","log","post","addWithdrawCrypto","url","addFxWithdraw"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/src/apis/withdraw.js"],"sourcesContent":["import * as axiosHelper from \"./api_helper\";\n\nexport const getWallets = async () => {\n  const data = await axiosHelper.get(\"/wallets\");\n  if (data.isError) {\n    throw new Error(data.isError);\n  }\n  return data?.result;\n};\nexport const addWithdraw = async (values) => {\n  // const { id, values } = payload;\n  console.log(\"Withdraw: \", { values });\n  const data = await axiosHelper.post(\"transactions/withdraw\", values);\n  // if (data.isError) {\n  //   throw new Error(data.message);\n  // }\n  return data;\n};\nexport const addWithdrawCrypto = async (values) => {\n  // const { id, values } = payload;\n  console.log(\"CRYPTO Withdraw: \", { values });\n  const data = await axiosHelper.post({\n    url:\"transactions/withdraw/crypto\",\n     data: values\n    });\n  // if (data.isError) {\n  //   throw new Error(data.message);\n  // }\n  return data;\n};\nexport const addFxWithdraw = async (values)=>{\n  console.log(\"FX Withdraw: \", { values });  \n  const data = await axiosHelper.post(\"fxtransactions/withdrawals\", values);\n  return data;\n};\n// export const fetchwallets = async () => {\n//     const data = await axiosHelper.get('wallets');\n//     return data.result;\n// }\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,WAAW,KAAM,cAAc,CAE3C,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CACpC,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,WAAW,CAACG,GAAG,CAAC,UAAU,CAAC,CAC9C,GAAID,IAAI,CAACE,OAAO,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACE,OAAO,CAAC,CAC/B,CACA,MAAO,CAAAF,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEI,MAAM,CACrB,CAAC,CACD,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC3C;AACAC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAE,CAAEF,MAAO,CAAC,CAAC,CACrC,KAAM,CAAAN,IAAI,CAAG,KAAM,CAAAF,WAAW,CAACW,IAAI,CAAC,uBAAuB,CAAEH,MAAM,CAAC,CACpE;AACA;AACA;AACA,MAAO,CAAAN,IAAI,CACb,CAAC,CACD,MAAO,MAAM,CAAAU,iBAAiB,CAAG,KAAO,CAAAJ,MAAM,EAAK,CACjD;AACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE,CAAEF,MAAO,CAAC,CAAC,CAC5C,KAAM,CAAAN,IAAI,CAAG,KAAM,CAAAF,WAAW,CAACW,IAAI,CAAC,CAClCE,GAAG,CAAC,8BAA8B,CACjCX,IAAI,CAAEM,MACP,CAAC,CAAC,CACJ;AACA;AACA;AACA,MAAO,CAAAN,IAAI,CACb,CAAC,CACD,MAAO,MAAM,CAAAY,aAAa,CAAG,KAAO,CAAAN,MAAM,EAAG,CAC3CC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAE,CAAEF,MAAO,CAAC,CAAC,CACxC,KAAM,CAAAN,IAAI,CAAG,KAAM,CAAAF,WAAW,CAACW,IAAI,CAAC,4BAA4B,CAAEH,MAAM,CAAC,CACzE,MAAO,CAAAN,IAAI,CACb,CAAC,CACD;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}