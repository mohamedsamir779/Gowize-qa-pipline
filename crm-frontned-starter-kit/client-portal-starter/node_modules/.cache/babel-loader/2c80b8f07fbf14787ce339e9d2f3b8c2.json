{"ast":null,"code":"import i18n from\"i18next\";import detector from\"i18next-browser-languagedetector\";import{initReactI18next}from\"react-i18next\";import backend from\"i18next-http-backend\";// import translationGr from \"./locales/gr/translation.json\";\n// import translationIT from \"./locales/it/translation.json\";\n// import translationRS from \"./locales/rs/translation.json\";\n// import translationSP from \"./locales/sp/translation.json\";\n// import translationENG from \"./locales/eng/translation.json\";\n// import translationAR from \"./locales/ar/translation.json\";\nconst API_URL=process.env.REACT_APP_API_CP_DOMAIN;// the translations\n// const resources = {\n//   gr: {\n//     translation: translationGr,\n//   },\n//   it: {\n//     translation: translationIT,\n//   },\n//   rs: {\n//     translation: translationRS,\n//   },\n//   sp: {\n//     translation: translationSP,\n//   },\n//   eng: {\n//     translation: translationENG,\n//   },\n//   ar: {\n//     translation: translationAR,\n//   }\n// };\nconst language=localStorage.getItem(\"I18N_LANGUAGE\");if(!language){localStorage.setItem(\"I18N_LANGUAGE\",\"en\");}i18n.use(detector).use(backend).use(initReactI18next)// passes i18n down to react-i18next\n.init({// resources,\n// lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\n// keySeparator: false, // we do not use keys in form messages.welcome\n// interpolation: {\n//   escapeValue: false, // react already safes from xss\n// },\nfallbackLng:\"en\",// use en if detected lng is not available\nsaveMissing:true,backend:{// backend,\nloadPath:\"\".concat(API_URL,\"/locales/{{lng}}/{{ns}}.json\"),addPath:\"\".concat(API_URL,\"/locales/add/{{lng}}/{{ns}}\"),crossDomain:true}});export default i18n;","map":{"version":3,"names":["i18n","detector","initReactI18next","backend","API_URL","process","env","REACT_APP_API_CP_DOMAIN","language","localStorage","getItem","setItem","use","init","fallbackLng","saveMissing","loadPath","concat","addPath","crossDomain"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/i18n.js"],"sourcesContent":["import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport backend from \"i18next-http-backend\";\n\n// import translationGr from \"./locales/gr/translation.json\";\n// import translationIT from \"./locales/it/translation.json\";\n// import translationRS from \"./locales/rs/translation.json\";\n// import translationSP from \"./locales/sp/translation.json\";\n// import translationENG from \"./locales/eng/translation.json\";\n// import translationAR from \"./locales/ar/translation.json\";\n\nconst API_URL = process.env.REACT_APP_API_CP_DOMAIN;\n\n// the translations\n// const resources = {\n//   gr: {\n//     translation: translationGr,\n//   },\n//   it: {\n//     translation: translationIT,\n//   },\n//   rs: {\n//     translation: translationRS,\n//   },\n//   sp: {\n//     translation: translationSP,\n//   },\n//   eng: {\n//     translation: translationENG,\n//   },\n//   ar: {\n//     translation: translationAR,\n//   }\n// };\n\nconst language = localStorage.getItem(\"I18N_LANGUAGE\");\nif (!language) {\n  localStorage.setItem(\"I18N_LANGUAGE\", \"en\");\n}\n\ni18n\n  .use(detector)\n  .use(backend)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    // resources,\n    // lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\n    \n    // keySeparator: false, // we do not use keys in form messages.welcome\n    \n    // interpolation: {\n    //   escapeValue: false, // react already safes from xss\n    // },\n    fallbackLng: \"en\", // use en if detected lng is not available\n    saveMissing: true,\n    backend: {\n      // backend,\n      loadPath: `${API_URL}/locales/{{lng}}/{{ns}}.json`,\n      addPath: `${API_URL}/locales/add/{{lng}}/{{ns}}`,\n      crossDomain: true,\n    }\n  });\n\nexport default i18n;\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,SAAS,CAC1B,MAAO,CAAAC,QAAQ,KAAM,kCAAkC,CACvD,OAASC,gBAAgB,KAAQ,eAAe,CAChD,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAE1C;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,CAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,KAAM,CAAAC,QAAQ,CAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CACtD,GAAI,CAACF,QAAQ,CAAE,CACbC,YAAY,CAACE,OAAO,CAAC,eAAe,CAAE,IAAI,CAAC,CAC7C,CAEAX,IAAI,CACDY,GAAG,CAACX,QAAQ,CAAC,CACbW,GAAG,CAACT,OAAO,CAAC,CACZS,GAAG,CAACV,gBAAgB,CAAE;AAAA,CACtBW,IAAI,CAAC,CACJ;AACA;AAEA;AAEA;AACA;AACA;AACAC,WAAW,CAAE,IAAI,CAAE;AACnBC,WAAW,CAAE,IAAI,CACjBZ,OAAO,CAAE,CACP;AACAa,QAAQ,IAAAC,MAAA,CAAKb,OAAO,gCAA8B,CAClDc,OAAO,IAAAD,MAAA,CAAKb,OAAO,+BAA6B,CAChDe,WAAW,CAAE,IACf,CACF,CAAC,CAAC,CAEJ,cAAe,CAAAnB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}