{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var getRuns = R.map(function (fragment) {\n    var run = {\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    };\n    offset += fragment.string.length;\n    return run;\n  });\n  return R.applySpec({\n    runs: getRuns,\n    string: R.o(R.join(''), R.pluck('string'))\n  })(fragments);\n};\nvar _default = fromFragments;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","exports","__esModule","R","fromFragments","fragments","offset","getRuns","map","fragment","run","start","end","string","length","attributes","applySpec","runs","o","join","pluck","_default"],"sources":["/home/ubuntu/Gowize-qa-pipline/client-portal-starter/node_modules/@react-pdf/textkit/attributedString/fromFragments.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var getRuns = R.map(function (fragment) {\n    var run = {\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    };\n    offset += fragment.string.length;\n    return run;\n  });\n  return R.applySpec({\n    runs: getRuns,\n    string: R.o(R.join(''), R.pluck('string'))\n  })(fragments);\n};\n\nvar _default = fromFragments;\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC;AAEtFC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,IAAIE,CAAC,GAAGJ,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,aAAa,GAAG,SAASA,aAAaA,CAACC,SAAS,EAAE;EACpD,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,OAAO,GAAGJ,CAAC,CAACK,GAAG,CAAC,UAAUC,QAAQ,EAAE;IACtC,IAAIC,GAAG,GAAG;MACRC,KAAK,EAAEL,MAAM;MACbM,GAAG,EAAEN,MAAM,GAAGG,QAAQ,CAACI,MAAM,CAACC,MAAM;MACpCC,UAAU,EAAEN,QAAQ,CAACM,UAAU,IAAI,CAAC;IACtC,CAAC;IACDT,MAAM,IAAIG,QAAQ,CAACI,MAAM,CAACC,MAAM;IAChC,OAAOJ,GAAG;EACZ,CAAC,CAAC;EACF,OAAOP,CAAC,CAACa,SAAS,CAAC;IACjBC,IAAI,EAAEV,OAAO;IACbM,MAAM,EAAEV,CAAC,CAACe,CAAC,CAACf,CAAC,CAACgB,IAAI,CAAC,EAAE,CAAC,EAAEhB,CAAC,CAACiB,KAAK,CAAC,QAAQ,CAAC;EAC3C,CAAC,CAAC,CAACf,SAAS,CAAC;AACf,CAAC;AAED,IAAIgB,QAAQ,GAAGjB,aAAa;AAC5BH,OAAO,CAAC,SAAS,CAAC,GAAGoB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script"}