{"ast":null,"code":"import _objectSpread from\"/home/ubuntu/king/portal/client-portal-starter/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from\"react\";import{useDispatch,connect}from\"react-redux\";import{Button,Col,Container,Row,Form as ReactStrapForm,Label,Input,FormGroup,Spinner}from\"reactstrap\";import{Formik,Form as FormikForm}from\"formik\";import*as Yup from\"yup\";//i18n\nimport{withTranslation}from\"react-i18next\";import CardWrapper from\"../../components/Common/CardWrapper\";import{uploadDocsStart}from\"../../store/general/documents/actions\";import{COUNTRIES}from\"../../helpers/countries\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function DocumentUpload(props){var _props$documents,_props$documents2,_issueDateRef$current,_props$documents4,_props$documents5;const dispatch=useDispatch();const frontSideRef=useRef();const backSideRef=useRef();const requiredPassportRef=useRef();const optionalPassportRef=useRef();const additionalRef=useRef();const addressRef=useRef();const documentNumberRef=useRef();const issueDateRef=useRef();const expiryDateRef=useRef();const[memFiles,setMemFiles]=useState({});const[idUploaded,setIdUploaded]=useState((_props$documents=props.documents)!==null&&_props$documents!==void 0&&_props$documents.find(x=>x.type===\"ID\"&&x.status===\"APPROVED\")?true:false);const[addressUploaded,setAddressUploaded]=useState((_props$documents2=props.documents)!==null&&_props$documents2!==void 0&&_props$documents2.find(x=>x.type===\"ADDRESS\"&&x.status===\"APPROVED\")?true:false);const[option,setOption]=useState([]);const[firstSelect,setFirstSelect]=useState(option[0]);const[secondSelect,setSecondSelect]=useState(\"ID\");const initialValues={typeOfDocument:\"\",proofOfId:\"ID\",countryOfIssue:\"None\"};// max file size to uplaod = 2 MB\nconst maxFileSize=5;const acceptedExtensions=[\"image/jpeg\",\"image/png\",\"application/pdf\"];const fileSizeError=\"File is too large, It has to be 5MB at most\";const fileExtensionError=\"Only accepts files with the following extensions *jpg, *png, *pdf\";const addFile=(name,files)=>{if((files===null||files===void 0?void 0:files.size)/1000000<=maxFileSize){setMemFiles(_objectSpread(_objectSpread({},memFiles),{},{[name]:files}));}};const validationSchema=Yup.object().shape({frontSideId:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"ID\",then:Yup.mixed().required(\"Front side id is required\")}),backSideId:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"ID\",then:Yup.mixed().required(\"Back side id is required\")}),proofOfPassport:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"proofOfId\",{is:\"Passport\",then:Yup.mixed().required(\"Passport is required\")}),proofOfPassportOptional:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}),proofOfAddress:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"Proof of address\",then:Yup.mixed().required(\"Proof Of Address is required\")}),Additional:Yup.mixed().test(\"fileSize\",fileSizeError,value=>{if(value){return value&&(value===null||value===void 0?void 0:value.size)/1000000<=maxFileSize;}else{return true;}}).test(\"fileExtension\",fileExtensionError,value=>{if(value){return acceptedExtensions.includes(value.type);}else{return true;}}).when(\"typeOfDocument\",{is:\"Additional\",then:Yup.mixed().required(\"Additional file is required\")}),documentNumber:Yup.number().typeError(\"Document number must be a number\"),dateOfIssue:Yup.date().max(new Date()),dateOfExpiry:Yup.date().min(Date(issueDateRef===null||issueDateRef===void 0?void 0:(_issueDateRef$current=issueDateRef.current)===null||_issueDateRef$current===void 0?void 0:_issueDateRef$current.value))});useEffect(()=>{var _props$documents3;if(((_props$documents3=props.documents)===null||_props$documents3===void 0?void 0:_props$documents3.length)>0){const{documents}=props;const idFound=documents.find(x=>x.type===\"ID\"&&x.status===\"APPROVED\");const addressFound=documents.find(x=>x.type===\"ADDRESS\"&&x.status===\"APPROVED\");if(idFound)setIdUploaded(true);if(addressFound)setAddressUploaded(true);}},[props.documents,props.documents.map(item=>item.status)]);const uploadDoc=async()=>{try{var formData=new FormData();if(firstSelect===\"Proof of ID\"){formData.append(\"type\",\"ID\");formData.append(\"images\",memFiles[\"ID1\"]);if(memFiles[\"ID2\"]){formData.append(\"images\",memFiles[\"ID2\"]);}}else if(firstSelect===\"Proof of address\"){formData.append(\"type\",\"ADDRESS\");formData.append(\"images\",memFiles[\"ADDRESS\"]);}else if(firstSelect===\"Additional\"){formData.append(\"type\",\"ADDITIONAL_DOCUMENTS\");formData.append(\"images\",memFiles[\"ADDITIONAL_DOCUMENTS\"]);}dispatch(uploadDocsStart(formData));}catch(error){}};const secondSelectChangeHandler=e=>{let value=e.target.value;setSecondSelect(value);};const resetForm=()=>{setMemFiles({});addressRef.current?addressRef.current.value=\"\":addressRef.current=\"\";frontSideRef.current?frontSideRef.current.value=\"\":frontSideRef.current=\"\";backSideRef.current?backSideRef.current.value=\"\":backSideRef.current=\"\";requiredPassportRef.current?requiredPassportRef.current.value=\"\":requiredPassportRef.current=\"\";optionalPassportRef.current?optionalPassportRef.current.value=\"\":optionalPassportRef.current=\"\";additionalRef.current?additionalRef.current.value=\"\":additionalRef.current=\"\";documentNumberRef.current?documentNumberRef.current.value=\"\":documentNumberRef.current=\"\";issueDateRef.current?issueDateRef.current.value=\"\":issueDateRef.current=\"\";expiryDateRef.current?expiryDateRef.current.value=\"\":expiryDateRef.current=\"\";};useEffect(()=>{const testArray=[!idUploaded&&\"Proof of ID\",!addressUploaded&&\"Proof of address\",\"Additional\"];const newOptions=testArray.filter(option=>option!==false);setOption(newOptions);setFirstSelect(newOptions[0]);},[idUploaded,addressUploaded]);return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{lg:9,children:/*#__PURE__*/_jsx(CardWrapper,{className:\"h-100 glass-card shadow\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Formik,{validationSchema:validationSchema,initialValues:initialValues,onSubmit:values=>{if(values.countryOfIssue===\"None\"){delete values.countryOfIssue;}delete values.typeOfDocument;delete values.proofOfId;delete values.proofOfPassport;delete values.proofOfAddress;delete values.Additional;delete values.proofOfPassportOptional;uploadDoc(values);resetForm();},children:_ref=>{var _frontSideRef$current,_backSideRef$current,_requiredPassportRef$,_addressRef$current,_additionalRef$curren;let{errors,touched,values,setFieldValue}=_ref;return/*#__PURE__*/_jsxs(ReactStrapForm,{tag:FormikForm,children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"typeOfDocument\",children:props.t(\"Type of document\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:true,onChange:e=>{setFirstSelect(e.target.value);setFieldValue(\"typeOfDocument\",e.target.value);// eslint-disable-next-line\nif(e.target.value===\"Additional\"||\"Proof of address\"){setFieldValue(\"proofOfId\",\"\");setSecondSelect(\"ID\");}},id:\"typeOfDocument\",type:\"select\",name:\"typeOfDocument\",value:firstSelect,children:[!idUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"Proof of ID\",children:props.t(\"Proof of ID\")}),!addressUploaded&&/*#__PURE__*/_jsx(\"option\",{value:\"Proof of address\",children:props.t(\"Proof of Address Front Side\")}),/*#__PURE__*/_jsx(\"option\",{value:\"Additional\",children:props.t(\"Proof of Address Back Side\")})]})]}),firstSelect===\"Proof of ID\"&&!idUploaded&&/*#__PURE__*/_jsxs(Col,{xs:12,lg:6,children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",for:\"proofOfId\",children:props.t(\"Proof of ID\")}),/*#__PURE__*/_jsxs(Input,{className:\"form-select form-select-lg\",required:firstSelect===\"Proof of ID\"&&true,onChange:e=>{secondSelectChangeHandler(e);setFieldValue(\"proofOfId\",e.target.value);},id:\"proofOfId\",type:\"select\",name:\"proofOfId\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"ID\",children:props.t(\"ID\")}),/*#__PURE__*/_jsx(\"option\",{value:\"Passport\",children:props.t(\"Passport\")})]})]}),firstSelect===\"Proof of address\"&&!addressUploaded&&/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"proofOfAddress\",children:props.t(\"Proof of Address\")}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control form-control-lg\",id:\"proofOfAddress\",onChange:e=>{addFile(\"ADDRESS\",e.target.files[0]);setFieldValue(\"proofOfAddress\",e.target.files[0]);},name:\"proofOfAddress\",innerRef:addressRef,invalid:errors.proofOfAddress&&touched.proofOfAddress}),(errors===null||errors===void 0?void 0:errors.proofOfAddress)&&touched.proofOfAddress&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.proofOfAddress})]})}),firstSelect===\"Additional\"&&/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"Additional\",children:props.t(\"Additional document\")}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control form-control-lg\",id:\"Additional\",onChange:e=>{addFile(\"ADDITIONAL_DOCUMENTS\",e.target.files[0]);setFieldValue(\"Additional\",e.target.files[0]);},name:\"Additional\",innerRef:additionalRef,invalid:errors.Additional&&touched.Additional}),(errors===null||errors===void 0?void 0:errors.Additional)&&touched.Additional&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.Additional})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[firstSelect===\"Proof of ID\"&&secondSelect===\"ID\"&&!idUploaded&&/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"frontSideId\",children:props.t(\"Proof of ID front side\")}),/*#__PURE__*/_jsx(Input,{innerRef:frontSideRef,type:\"file\",className:\"form-control\",id:\"frontSideId\",onChange:e=>{addFile(\"ID1\",e.target.files[0]);setFieldValue(\"frontSideId\",e.target.files[0]);},name:\"frontSideId\",invalid:errors.frontSideId&&touched.frontSideId,disabled:idUploaded}),(errors===null||errors===void 0?void 0:errors.frontSideId)&&touched.frontSideId&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.frontSideId})]})})}),/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"backSideId\",children:props.t(\"Proof of ID back side\")}),/*#__PURE__*/_jsx(Input,{innerRef:backSideRef,type:\"file\",className:\"form-control\",id:\"backSideId\",onChange:e=>{addFile(\"ID2\",e.target.files[0]);setFieldValue(\"backSideId\",e.target.files[0]);},name:\"backSideId\",invalid:errors.backSideId&&touched.backSideId}),(errors===null||errors===void 0?void 0:errors.backSideId)&&touched.backSideId&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.backSideId})]})})]}),firstSelect===\"Proof of ID\"&&secondSelect===\"Passport\"&&!idUploaded&&/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsxs(Label,{className:\"form-label\",htmlFor:\"proofOfPassport\",children:[props.t(\"Proof of Passport\"),\" (\",props.t(\"Required\"),\")\"]}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control\",id:\"proofOfPassport\",onChange:e=>{addFile(\"ID1\",e.target.files[0]);setFieldValue(\"proofOfPassport\",e.target.files[0]);},name:\"proofOfPassport\",innerRef:requiredPassportRef,invalid:errors.proofOfPassport&&touched.proofOfPassport}),(errors===null||errors===void 0?void 0:errors.proofOfPassport)&&touched.proofOfPassport&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.proofOfPassport})]})})}),/*#__PURE__*/_jsx(Col,{xs:12,lg:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Label,{className:\"form-label\",htmlFor:\"proofOfPassportOptional\",children:[props.t(\"Proof of Passport\"),\" (\",props.t(\"Optional\"),\")\"]}),/*#__PURE__*/_jsx(Input,{type:\"file\",className:\"form-control\",id:\"proofOfPassportOptional\",onChange:e=>{addFile(\"ID2\",e.target.files[0]);setFieldValue(\"proofOfPassportOptional\",e.target.files[0]);},name:\"proofOfPassportOptional\",innerRef:optionalPassportRef,invalid:errors.proofOfPassportOptional&&touched.proofOfPassportOptional}),(errors===null||errors===void 0?void 0:errors.proofOfPassportOptional)&&touched.proofOfPassportOptional&&/*#__PURE__*/_jsx(\"label\",{style:{\"color\":\"red\"},children:errors.proofOfPassportOptional})]})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{}),firstSelect===\"Proof of ID\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3 mb-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fw-bold\",children:props.t(\"Fill in your details for a seamless experience\")}),\" (\",props.t(\"Optional\"),\")\"]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"documentNumber\",children:props.t(\"Document Number\")}),/*#__PURE__*/_jsx(Input,{type:\"text\",className:\"form-control\",id:\"documentNumber\",name:\"documentNumber\",placeholder:props.t(\"Enter Document Number (optional)\"),innerRef:documentNumberRef,onKeyPress:e=>{if(!isNaN(e.key)&&e.target.value.length>0){return true;}if(!/[0-9]/.test(e.key)){e.preventDefault();}}})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{className:\"form-label\",htmlFor:\"countryOfIssue\",children:props.t(\"Country of Issue\")}),/*#__PURE__*/_jsxs(Input,{type:\"select\",className:\"form-select\",id:\"countryOfIssue\",name:\"countryOfIssue\",value:values.countryOfIssue,onChange:e=>{setFieldValue(\"countryOfIssue\",e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"None\",disabled:true,selected:true,hidden:true,children:props.t(\"Select Country (Optional)\")}),COUNTRIES.map((country,key)=>{return/*#__PURE__*/_jsx(\"option\",{value:country.countryEn,children:country.countryEn},key);})]})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"dateOfIssue\",className:\"form-label\",children:props.t(\"Date of Issue\")}),/*#__PURE__*/_jsx(Input,{className:\"form-control\",type:\"date\",defaultValue:\"mm/dd/yy\",id:\"dateOfIssue\",name:\"dateOfIssue\",innerRef:issueDateRef,max:new Date().toISOString().split(\"T\")[0],onChange:e=>{setFieldValue(\"dateOfIssue\",e.target.value);}})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"dateOfExpiry\",className:\"form-label\",children:props.t(\"Date Of Expiry\")}),/*#__PURE__*/_jsx(Input,{disabled:!values.dateOfIssue,className:\"form-control\",type:\"date\",defaultValue:\"mm/dd/yy\",id:\"dateOfExpiry\",name:\"dateOfExpiry\",innerRef:expiryDateRef,onChange:e=>{setFieldValue(\"dateOfExpiry\",e.target.value);},min:values.dateOfIssue})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-end\",children:/*#__PURE__*/_jsx(Button,{className:\"border-0 color-bg-btn w-lg\",type:\"submit\",disabled:// proof of ID + ID \nfirstSelect===\"Proof of ID\"&&secondSelect===\"ID\"&&!((_frontSideRef$current=frontSideRef.current)!==null&&_frontSideRef$current!==void 0&&_frontSideRef$current.value)||firstSelect===\"Proof of ID\"&&secondSelect===\"ID\"&&!((_backSideRef$current=backSideRef.current)!==null&&_backSideRef$current!==void 0&&_backSideRef$current.value)||// proof of ID + passport\nfirstSelect===\"Proof of ID\"&&secondSelect===\"Passport\"&&!((_requiredPassportRef$=requiredPassportRef.current)!==null&&_requiredPassportRef$!==void 0&&_requiredPassportRef$.value)||// proof of address\nfirstSelect===\"Proof of address\"&&!((_addressRef$current=addressRef.current)!==null&&_addressRef$current!==void 0&&_addressRef$current.value)||// additional documents\nfirstSelect===\"Additional\"&&!((_additionalRef$curren=additionalRef.current)!==null&&_additionalRef$curren!==void 0&&_additionalRef$curren.value)||props.uploading,children:props.uploading&&props.uploadClear===0?/*#__PURE__*/_jsx(Spinner,{}):props.t(\"Submit\")})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-muted\",children:[\"(\",props.t(\"Maximum size of document 5MB\"),\") \",props.t(\"Allow File Formats\"),\" *jpg, *png, *pdf\"]})]});}})})})}),/*#__PURE__*/_jsx(Col,{lg:3,children:/*#__PURE__*/_jsx(CardWrapper,{className:\"h-100 glass-card shadow\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"kyc-requirements\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-center fw-bold color-primary\",children:props.t(\"KYC Requirements\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 proofs-container w-100\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-3 border-bottom w-100 border\",style:{boxShadow:idUploaded?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",cursor:idUploaded?\"not-allowed\":\"pointer\"},disabled:(_props$documents4=props.documents)!==null&&_props$documents4!==void 0&&_props$documents4.find(x=>x.type===\"ID\")?true:false,onClick:()=>setFirstSelect(\"Proof of ID\"),children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Proof of ID\")]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn text-start py-3 w-100 border mt-3\",disabled:(_props$documents5=props.documents)!==null&&_props$documents5!==void 0&&_props$documents5.find(x=>x.type===\"ADDRESS\")?true:false,onClick:()=>setFirstSelect(\"Proof of address\"),style:{boxShadow:addressUploaded?\"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\":\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",cursor:addressUploaded?\"not-allowed\":\"pointer\"},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-document-multiple me-3\"}),props.t(\"Proof of Address\")]})]})]})})})]})});}const mapStateToProps=state=>({uploadClear:state.documents.uploadClear,documents:state.documents.documents,uploading:state.documents.uploading,uploadError:state.documents.uploadError,uploadSuccessMessage:state.documents.uploadSuccessMessage});export default connect(mapStateToProps,null)(withTranslation()(DocumentUpload));","map":{"version":3,"names":["React","useState","useEffect","useRef","useDispatch","connect","Button","Col","Container","Row","Form","ReactStrapForm","Label","Input","FormGroup","Spinner","Formik","FormikForm","Yup","withTranslation","CardWrapper","uploadDocsStart","COUNTRIES","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DocumentUpload","props","_props$documents","_props$documents2","_issueDateRef$current","_props$documents4","_props$documents5","dispatch","frontSideRef","backSideRef","requiredPassportRef","optionalPassportRef","additionalRef","addressRef","documentNumberRef","issueDateRef","expiryDateRef","memFiles","setMemFiles","idUploaded","setIdUploaded","documents","find","x","type","status","addressUploaded","setAddressUploaded","option","setOption","firstSelect","setFirstSelect","secondSelect","setSecondSelect","initialValues","typeOfDocument","proofOfId","countryOfIssue","maxFileSize","acceptedExtensions","fileSizeError","fileExtensionError","addFile","name","files","size","_objectSpread","validationSchema","object","shape","frontSideId","mixed","test","value","includes","when","is","then","required","backSideId","proofOfPassport","proofOfPassportOptional","proofOfAddress","Additional","documentNumber","number","typeError","dateOfIssue","date","max","Date","dateOfExpiry","min","current","_props$documents3","length","idFound","addressFound","map","item","uploadDoc","formData","FormData","append","error","secondSelectChangeHandler","e","target","resetForm","testArray","newOptions","filter","children","lg","className","onSubmit","values","_ref","_frontSideRef$current","_backSideRef$current","_requiredPassportRef$","_addressRef$current","_additionalRef$curren","errors","touched","setFieldValue","tag","xs","for","t","onChange","id","htmlFor","innerRef","invalid","style","disabled","md","placeholder","onKeyPress","isNaN","key","preventDefault","selected","hidden","country","countryEn","defaultValue","toISOString","split","uploading","uploadClear","boxShadow","cursor","onClick","mapStateToProps","state","uploadError","uploadSuccessMessage"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/pages/Documents/DocumentsUpload.js"],"sourcesContent":["import React, {\n  useState, useEffect, useRef\n} from \"react\";\nimport { useDispatch, connect } from \"react-redux\";\nimport {\n  Button,\n  Col,\n  Container,\n  Row,\n  Form as ReactStrapForm,\n  Label,\n  Input,\n  FormGroup,\n  Spinner\n} from \"reactstrap\";\nimport { \n  Formik, \n  Form as FormikForm \n} from \"formik\";\nimport * as Yup from \"yup\";\n\n//i18n\nimport { withTranslation } from \"react-i18next\";\nimport CardWrapper from \"../../components/Common/CardWrapper\";\nimport { uploadDocsStart } from \"../../store/general/documents/actions\";\nimport { COUNTRIES } from \"../../helpers/countries\";\n\nfunction DocumentUpload(props) {\n  const dispatch = useDispatch();\n  const frontSideRef = useRef();\n  const backSideRef = useRef();\n  const requiredPassportRef = useRef();\n  const optionalPassportRef = useRef();\n  const additionalRef = useRef();\n  const addressRef = useRef();\n  const documentNumberRef = useRef();\n  const issueDateRef = useRef();\n  const expiryDateRef = useRef();\n  const [memFiles, setMemFiles] = useState({});\n  const [idUploaded, setIdUploaded] = \n  useState(props.documents?.find((x) => (x.type === \"ID\" && x.status === \"APPROVED\")) ? true : false);\n  const [addressUploaded, setAddressUploaded] = \n  useState(props.documents?.find((x) => (x.type === \"ADDRESS\" && x.status === \"APPROVED\")) ? true : false);\n  const [option, setOption] = useState([]);\n  const [firstSelect, setFirstSelect] = useState(option[0]);\n  const [secondSelect, setSecondSelect] = useState(\"ID\");\n  \n  const initialValues = {\n    typeOfDocument: \"\",\n    proofOfId: \"ID\",\n    countryOfIssue: \"None\"\n  };\n\n  // max file size to uplaod = 2 MB\n  const maxFileSize = 5;\n  const acceptedExtensions = [\"image/jpeg\", \"image/png\", \"application/pdf\"];\n  const fileSizeError = \"File is too large, It has to be 5MB at most\";\n  const fileExtensionError = \"Only accepts files with the following extensions *jpg, *png, *pdf\";\n\n  const addFile = (name, files) => {\n    if ((files?.size / 1000000) <= maxFileSize){\n      setMemFiles({\n        ...memFiles,\n        [name]: files,\n      });\n    }\n  };\n\n  const validationSchema = Yup.object().shape({\n    frontSideId: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value){\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value){\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"ID\",\n      then: Yup.mixed().required(\"Front side id is required\")\n    }),\n\n    backSideId: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value){\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value){\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"ID\",\n      then: Yup.mixed().required(\"Back side id is required\")\n    }),\n\n    proofOfPassport: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value){\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value){\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"proofOfId\", {\n      is: \"Passport\",\n      then: Yup.mixed().required(\"Passport is required\")\n    }),\n\n    proofOfPassportOptional: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {      \n      if (value){\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value){\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }),\n\n    proofOfAddress: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value){\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value){\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"Proof of address\",\n      then: Yup.mixed().required(\"Proof Of Address is required\")\n    }),\n\n    Additional: Yup.mixed().test(\"fileSize\", fileSizeError, (value) => {\n      if (value){\n        return value && (value?.size / 1000000) <= maxFileSize;\n      } else {\n        return true;\n      }\n    }).test(\"fileExtension\", fileExtensionError, (value) => {\n      if (value){\n        return acceptedExtensions.includes(value.type);\n      } else {\n        return true;\n      }\n    }).when(\"typeOfDocument\", {\n      is: \"Additional\",\n      then: Yup.mixed().required(\"Additional file is required\")\n    }),\n\n    documentNumber: Yup.number().typeError(\"Document number must be a number\"),\n\n    dateOfIssue: Yup.date().max(new Date()),\n\n    dateOfExpiry: Yup.date().min(Date(issueDateRef?.current?.value))\n  });\n\n  useEffect(() => {\n    if (props.documents?.length > 0) {\n      const { documents } = props;\n      const idFound = documents.find((x) => (x.type === \"ID\" && x.status === \"APPROVED\"));\n      const addressFound = documents.find((x) => (x.type === \"ADDRESS\" && x.status === \"APPROVED\"));\n      if (idFound) setIdUploaded(true);\n      if (addressFound) setAddressUploaded(true);\n    }\n\n  }, [props.documents, props.documents.map((item) => (item.status))]);\n\n  const uploadDoc = async () => {\n    try {\n      var formData = new FormData();\n      if (firstSelect === \"Proof of ID\") {\n        formData.append(\"type\", \"ID\");\n        formData.append(\"images\", memFiles[\"ID1\"]);\n        if (memFiles[\"ID2\"]) {\n          formData.append(\"images\", memFiles[\"ID2\"]);\n        }\n      } else if (firstSelect === \"Proof of address\") {\n        formData.append(\"type\", \"ADDRESS\");\n        formData.append(\"images\", memFiles[\"ADDRESS\"]);\n      } else if (firstSelect === \"Additional\") {\n        formData.append(\"type\", \"ADDITIONAL_DOCUMENTS\");\n        formData.append(\"images\", memFiles[\"ADDITIONAL_DOCUMENTS\"]);\n      }\n\n      dispatch(uploadDocsStart(formData));\n    } catch (error) {\n    }\n  };\n\n  const secondSelectChangeHandler = (e) => {\n    let value = e.target.value;\n    setSecondSelect(value);\n  };\n\n  const resetForm = () => {\n    setMemFiles({});\n    addressRef.current ? addressRef.current.value = \"\" : addressRef.current = \"\";\n    frontSideRef.current ? frontSideRef.current.value = \"\" : frontSideRef.current = \"\";\n    backSideRef.current ? backSideRef.current.value = \"\" : backSideRef.current = \"\";\n    requiredPassportRef.current ? requiredPassportRef.current.value = \"\" : requiredPassportRef.current = \"\";\n    optionalPassportRef.current ? optionalPassportRef.current.value = \"\" : optionalPassportRef.current = \"\";\n    additionalRef.current ? additionalRef.current.value = \"\" : additionalRef.current = \"\";\n    documentNumberRef.current ? documentNumberRef.current.value = \"\" : documentNumberRef.current = \"\";\n    issueDateRef.current ? issueDateRef.current.value = \"\" : issueDateRef.current = \"\";\n    expiryDateRef.current ? expiryDateRef.current.value = \"\" : expiryDateRef.current = \"\";\n  };\n\n  useEffect(() => {\n    const testArray = [\n      !idUploaded && \"Proof of ID\",\n      !addressUploaded && \"Proof of address\",\n      \"Additional\"\n    ];\n    const newOptions = testArray.filter((option) => option !== false);\n    setOption(newOptions);\n    setFirstSelect(newOptions[0]);\n\n  }, [idUploaded, addressUploaded]);\n\n  return (\n    <Container>\n      <Row>\n        <Col lg={9}>\n          <CardWrapper className=\"h-100 glass-card shadow\">\n            <Container>\n              <Formik\n                validationSchema={validationSchema}\n                initialValues={initialValues}\n                onSubmit={(values) => {\n                  if (values.countryOfIssue === \"None\") {\n                    delete values.countryOfIssue;\n                  }\n                  delete values.typeOfDocument;\n                  delete values.proofOfId;\n                  delete values.proofOfPassport;\n                  delete values.proofOfAddress;\n                  delete values.Additional;\n                  delete values.proofOfPassportOptional;\n                  uploadDoc(values);\n                  resetForm();\n                }}\n              >\n                {({ errors, touched, values, setFieldValue }) => (\n                  <ReactStrapForm\n                    tag={FormikForm}\n                  >\n                    <Row>\n                      <Col xs={12} lg={6}>\n                        <Label \n                          className=\"form-label\" \n                          for=\"typeOfDocument\"\n                        >\n                          {props.t(\"Type of document\")}\n                        </Label>\n                        <Input\n                          className=\"form-select form-select-lg\"\n                          required={true}\n                          onChange={(e) => {\n                            setFirstSelect(e.target.value);\n                            setFieldValue(\"typeOfDocument\", e.target.value);\n                            // eslint-disable-next-line\n                            if (e.target.value === \"Additional\" || \"Proof of address\") {\n                              setFieldValue(\"proofOfId\", \"\");\n                              setSecondSelect(\"ID\");\n                            }\n                          }}\n                          id=\"typeOfDocument\"\n                          type=\"select\"\n                          name=\"typeOfDocument\"\n                          value={firstSelect}\n                        >\n                          {\n                            !idUploaded &&\n                            <option value=\"Proof of ID\">{props.t(\"Proof of ID\")}</option>\n                          }\n                          {\n                            !addressUploaded &&\n                            <option value=\"Proof of address\">{props.t(\"Proof of Address Front Side\")}</option>\n                          }\n                          <option value=\"Additional\">{props.t(\"Proof of Address Back Side\")}</option>\n                        </Input>\n                      </Col>\n                      {\n                        firstSelect === \"Proof of ID\" && \n                        !idUploaded &&\n                        <Col xs={12} lg={6}>\n                          <Label className=\"form-label\" for=\"proofOfId\">{props.t(\"Proof of ID\")}</Label>\n                          <Input\n                            className=\"form-select form-select-lg\"\n                            required={firstSelect === \"Proof of ID\" && true}\n                            onChange={(e) => {\n                              secondSelectChangeHandler(e);\n                              setFieldValue(\"proofOfId\", e.target.value);\n                            }}\n                            id=\"proofOfId\"\n                            type=\"select\"\n                            name=\"proofOfId\"\n                          >\n                            <option value=\"ID\">{props.t(\"ID\")}</option>\n                            <option value=\"Passport\">{props.t(\"Passport\")}</option>\n                          </Input>\n                        </Col>\n                      }\n                      {\n                        firstSelect === \"Proof of address\" && \n                        !addressUploaded &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"proofOfAddress\">\n                              {props.t(\"Proof of Address\")}\n                            </Label>\n                            <Input\n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"proofOfAddress\"\n                              onChange={(e) => {\n                                addFile(\"ADDRESS\", e.target.files[0]);\n                                setFieldValue(\"proofOfAddress\", e.target.files[0]);\n                              }}\n                              name=\"proofOfAddress\"\n                              innerRef={addressRef}\n                              invalid={errors.proofOfAddress && touched.proofOfAddress}\n                            />\n                            {\n                              errors?.proofOfAddress &&\n                              touched.proofOfAddress &&\n                              <label\n                                style={\n                                  {\n                                    \"color\": \"red\",\n                                  }\n                                }\n                              >\n                                {errors.proofOfAddress}\n                              </label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        firstSelect === \"Additional\" &&\n                        <Col xs={12} lg={6}>\n                          <div className=\"mb-3\">\n                            <Label className=\"form-label\" htmlFor=\"Additional\">\n                              {props.t(\"Additional document\")}\n                            </Label>\n                            <Input\n                              \n                              type=\"file\"\n                              className=\"form-control form-control-lg\"\n                              id=\"Additional\"\n                              onChange={(e) => {\n                                addFile(\"ADDITIONAL_DOCUMENTS\", e.target.files[0]);\n                                setFieldValue(\"Additional\", e.target.files[0]);\n                              }}\n                              name=\"Additional\"\n                              innerRef={additionalRef}\n                              invalid={errors.Additional && touched.Additional}\n                            />\n                            {\n                              errors?.Additional &&\n                              touched.Additional &&\n                              <label\n                                style={\n                                  {\n                                    \"color\": \"red\",\n                                  }\n                                }\n                              >\n                                {errors.Additional}\n                              </label>\n                            }\n                          </div>\n                        </Col>\n                      }\n                      {\n                        <div className=\"mt-4\">\n                          {\n                            firstSelect === \"Proof of ID\" &&\n                            secondSelect === \"ID\" && \n                            !idUploaded &&\n                            <Row>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <FormGroup>\n                                    <Label className=\"form-label\" htmlFor=\"frontSideId\">{props.t(\"Proof of ID front side\")}</Label>\n                                    <Input\n                                      \n                                      innerRef={frontSideRef}\n                                      type=\"file\"\n                                      className=\"form-control\"\n                                      id=\"frontSideId\"\n                                      onChange={(e) => {\n                                        addFile(\"ID1\", e.target.files[0]);\n                                        setFieldValue(\"frontSideId\", e.target.files[0]);\n                                      }}\n                                      name=\"frontSideId\"\n                                      invalid={errors.frontSideId && touched.frontSideId}\n                                      disabled={idUploaded}\n                                    />\n                                    {\n                                      errors?.frontSideId &&\n                                      touched.frontSideId &&\n                                      <label\n                                        style={\n                                          {\n                                            \"color\": \"red\",\n                                          }\n                                        }\n                                      >\n                                        {errors.frontSideId}\n                                      </label>\n                                    }\n                                  </FormGroup>\n                                </div>\n                              </Col>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <Label className=\"form-label\" htmlFor=\"backSideId\">{\n                                    props.t(\"Proof of ID back side\")}\n                                  </Label>\n                                  <Input\n                                    \n                                    innerRef={backSideRef}\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    id=\"backSideId\"\n                                    onChange={(e) => {\n                                      addFile(\"ID2\", e.target.files[0]);\n                                      setFieldValue(\"backSideId\", e.target.files[0]);\n                                    }}\n                                    name=\"backSideId\"\n                                    invalid={errors.backSideId && touched.backSideId}\n                                  />\n                                  {\n                                    errors?.backSideId &&\n                                    touched.backSideId &&\n                                    <label\n                                      style={\n                                        {\n                                          \"color\": \"red\",\n                                        }\n                                      }\n                                    >\n                                      {errors.backSideId}\n                                    </label>\n                                  }\n                                </div>\n                              </Col>\n                            </Row>\n                          }\n                          {\n                            firstSelect === \"Proof of ID\" && \n                            secondSelect === \"Passport\" && \n                            !idUploaded &&\n                            <Row>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <FormGroup>\n                                    <Label className=\"form-label\" htmlFor=\"proofOfPassport\">\n                                      {props.t(\"Proof of Passport\")} ({props.t(\"Required\")})\n                                    </Label>\n                                    <Input\n                                      \n                                      type=\"file\"\n                                      className=\"form-control\"\n                                      id=\"proofOfPassport\"\n                                      onChange={(e) => {\n                                        addFile(\"ID1\", e.target.files[0]);\n                                        setFieldValue(\"proofOfPassport\", e.target.files[0]);\n                                      }}\n                                      name=\"proofOfPassport\"\n                                      innerRef={requiredPassportRef}\n                                      invalid={errors.proofOfPassport && touched.proofOfPassport}\n                                    />\n                                    {\n                                      errors?.proofOfPassport &&  \n                                      touched.proofOfPassport &&\n                                      <label\n                                        style={\n                                          {\n                                            \"color\": \"red\",\n                                          }\n                                        }\n                                      >\n                                        {errors.proofOfPassport}\n                                      </label>\n                                    }\n                                  </FormGroup>\n                                </div>\n                              </Col>\n                              <Col xs={12} lg={6}>\n                                <div className=\"mb-3\">\n                                  <Label className=\"form-label\" htmlFor=\"proofOfPassportOptional\">\n                                    {props.t(\"Proof of Passport\")} ({props.t(\"Optional\")})\n                                  </Label>\n                                  <Input\n                                    type=\"file\"\n                                    className=\"form-control\"\n                                    id=\"proofOfPassportOptional\"\n                                    onChange={(e) => {\n                                      addFile(\"ID2\", e.target.files[0]);\n                                      setFieldValue(\"proofOfPassportOptional\", e.target.files[0]);\n                                    }}\n                                    name=\"proofOfPassportOptional\"\n                                    innerRef={optionalPassportRef}\n                                    invalid={errors.proofOfPassportOptional && touched.proofOfPassportOptional}\n                                  />\n                                  {\n                                    errors?.proofOfPassportOptional &&\n                                    touched.proofOfPassportOptional &&\n                                    <label\n                                      style={\n                                        {\n                                          \"color\": \"red\",\n                                        }\n                                      }\n                                    >\n                                      {errors.proofOfPassportOptional}\n                                    </label>\n                                  }\n                                </div>\n                              </Col>\n                            </Row>\n                          }\n                        </div>\n                      }\n                    </Row>\n                    <div>\n                    </div>\n                    {\n                      firstSelect === \"Proof of ID\" &&\n                      <>\n                        <p className=\"mt-3 mb-4\">\n                          <span className=\"fw-bold\">\n                            {props.t(\"Fill in your details for a seamless experience\")}\n                          </span> ({props.t(\"Optional\")})\n                        </p>\n                        <Row>\n                          <Col md={6}>\n                            <div className=\"mb-3\">\n                              <Label className=\"form-label\" htmlFor=\"documentNumber\">\n                                {props.t(\"Document Number\")}\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"documentNumber\"\n                                name=\"documentNumber\"\n                                placeholder={props.t(\"Enter Document Number (optional)\")}\n                                innerRef={documentNumberRef}\n                                onKeyPress={(e) => {\n                                  if (!isNaN(e.key) && e.target.value.length > 0){\n                                    return true;\n                                  }\n                                  if (!/[0-9]/.test(e.key)) {\n                                    e.preventDefault();\n                                  }\n                                }}\n                              />\n                            </div>\n                          </Col>\n                          <Col md={6}>\n                            <div className=\"mb-3\">\n                              <Label className=\"form-label\" htmlFor=\"countryOfIssue\">{props.t(\"Country of Issue\")}</Label>\n                              <Input\n                                type=\"select\"\n                                className=\"form-select\"\n                                id=\"countryOfIssue\"\n                                name=\"countryOfIssue\"\n                                value={values.countryOfIssue}\n                                onChange={(e) => { setFieldValue(\"countryOfIssue\", e.target.value) }}>\n                                <option value=\"None\" disabled selected hidden>{props.t(\"Select Country (Optional)\")}</option>\n                                {COUNTRIES.map((country, key) => {\n                                  return <option key={key} value={country.countryEn}>{country.countryEn}</option>;\n                                })}\n                              </Input>\n                            </div>\n                          </Col>\n                          <Col md={6}>\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"dateOfIssue\" className=\"form-label\">{props.t(\"Date of Issue\")}</Label>\n                              <Input\n                                className=\"form-control\"\n                                type=\"date\"\n                                defaultValue=\"mm/dd/yy\"\n                                id=\"dateOfIssue\"\n                                name=\"dateOfIssue\"\n                                innerRef={issueDateRef}\n                                max={new Date().toISOString().split(\"T\")[0]}\n                                onChange={(e) => { setFieldValue(\"dateOfIssue\", e.target.value) }}\n                              />\n                            </div>\n                          </Col>\n                          <Col md={6}>\n                            <div className=\"mb-3\">\n                              <Label htmlFor=\"dateOfExpiry\" className=\"form-label\">{props.t(\"Date Of Expiry\")}</Label>\n                              <Input\n                                disabled={!values.dateOfIssue}\n                                className=\"form-control\"\n                                type=\"date\"\n                                defaultValue=\"mm/dd/yy\"\n                                id=\"dateOfExpiry\"\n                                name=\"dateOfExpiry\"\n                                innerRef={expiryDateRef}\n                                onChange={(e) => { setFieldValue(\"dateOfExpiry\", e.target.value) }}\n                                min={values.dateOfIssue}\n                              />\n                            </div>\n                          </Col>\n                        </Row>\n                      </>\n                    }\n                    <div className=\"text-end\">\n                      <Button\n                        className=\"border-0 color-bg-btn w-lg\"\n                        type=\"submit\"\n                        disabled={\n                          // proof of ID + ID \n                          firstSelect === \"Proof of ID\" && \n                          secondSelect === \"ID\" &&\n                          !frontSideRef.current?.value\n                          ||\n                          firstSelect === \"Proof of ID\" && \n                          secondSelect === \"ID\" &&\n                          !backSideRef.current?.value\n                          ||\n                          // proof of ID + passport\n                          firstSelect === \"Proof of ID\" && \n                          secondSelect === \"Passport\" &&\n                          !requiredPassportRef.current?.value \n                          || \n                          // proof of address\n                          firstSelect === \"Proof of address\" && \n                          !addressRef.current?.value\n                          ||\n                          // additional documents\n                          firstSelect === \"Additional\" &&\n                          !additionalRef.current?.value\n                          ||\n                          props.uploading\n                        }\n                      >\n                        {\n                          props.uploading && props.uploadClear === 0\n                            ?\n                            <Spinner />\n                            :\n                            props.t(\"Submit\")\n                        }\n                      </Button>\n                    </div>\n                    <div className=\"text-muted\">\n                      ({props.t(\"Maximum size of document 5MB\")}) {props.t(\"Allow File Formats\")} *jpg, *png, *pdf\n                    </div>\n                  </ReactStrapForm>\n                )}\n\n              </Formik>\n            </Container>\n          </CardWrapper>\n        </Col>\n        <Col lg={3}>\n          <CardWrapper className=\"h-100 glass-card shadow\">\n            <div className=\"kyc-requirements\">\n              <p className=\"text-center fw-bold color-primary\">\n                {props.t(\"KYC Requirements\")}\n              </p>\n              <div className=\"mt-4 proofs-container w-100\">\n                <button\n                  className=\"btn text-start py-3 border-bottom w-100 border\"\n                  style={{\n                    boxShadow: idUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: idUploaded ? \"not-allowed\" : \"pointer\"\n                  }} \n                  disabled={props.documents?.find((x) => (x.type === \"ID\")) ? true : false}\n                  onClick={() => (setFirstSelect(\"Proof of ID\"))}\n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Proof of ID\")}\n                </button>\n                <button\n                  className=\"btn text-start py-3 w-100 border mt-3\" \n                  disabled={props.documents?.find((x) => (x.type === \"ADDRESS\")) ? true : false}\n                  onClick={() => (setFirstSelect(\"Proof of address\"))}\n                  style={{\n                    boxShadow: addressUploaded ? \"inset 0 4px 8px 0 rgb(0 0 0 / 0.1)\" : \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                    cursor: addressUploaded ? \"not-allowed\" : \"pointer\"\n                  }} \n                >\n                  <i className=\"mdi mdi-file-document-multiple me-3\" />\n                  {props.t(\"Proof of Address\")}\n                </button>\n              </div>\n            </div>\n          </CardWrapper>\n        </Col>\n      </Row>\n    </Container >\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  uploadClear: state.documents.uploadClear,\n  documents: state.documents.documents,\n  uploading: state.documents.uploading,\n  uploadError: state.documents.uploadError,\n  uploadSuccessMessage: state.documents.uploadSuccessMessage\n});\n\nexport default connect(mapStateToProps, null)(withTranslation()(DocumentUpload)); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}