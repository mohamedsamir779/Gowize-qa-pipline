{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar R = _interopRequireWildcard(require(\"ramda\"));\nvar _fromFragments = _interopRequireDefault(require(\"../attributedString/fromFragments\"));\n\n/**\n * Default word hyphenation engine used when no one provided.\n * Does not perform word hyphenation at all\n *\n * @param  {String} word\n * @return {Array} same word\n */\nvar defaultHyphenationEngine = function defaultHyphenationEngine(word) {\n  return [word];\n};\n/**\n * Wrap words of attribute string\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string including syllables\n */\n\nvar wrapWords = function wrapWords(engines, options, attributedString) {\n  if (engines === void 0) {\n    engines = {};\n  }\n  if (options === void 0) {\n    options = {};\n  }\n  var syllables = [];\n  var fragments = [];\n  var hyphenateWord = options.hyphenationCallback || engines.wordHyphenation && engines.wordHyphenation(options) || defaultHyphenationEngine;\n  for (var _iterator = attributedString.runs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n    var run = _ref;\n    var string = '';\n    var words = attributedString.string.slice(run.start, run.end).split(/([ ]+)/g).filter(Boolean);\n    for (var _iterator2 = words, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n      var word = _ref2;\n      var parts = hyphenateWord(word);\n      syllables.push.apply(syllables, parts);\n      string += parts.join('');\n    }\n    fragments.push({\n      string: string,\n      attributes: run.attributes\n    });\n  }\n  return (0, _extends2[\"default\"])({}, (0, _fromFragments[\"default\"])(fragments), {\n    syllables: syllables\n  });\n};\nvar _default = R.curryN(3, wrapWords);\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","__esModule","_extends2","R","_fromFragments","defaultHyphenationEngine","word","wrapWords","engines","options","attributedString","syllables","fragments","hyphenateWord","hyphenationCallback","wordHyphenation","_iterator","runs","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","run","string","words","slice","start","end","split","filter","Boolean","_iterator2","_isArray2","_i2","_ref2","parts","push","apply","join","attributes","_default","curryN"],"sources":["/home/ubuntu/king/portal/client-portal-starter/node_modules/@react-pdf/textkit/layout/wrapWords.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _fromFragments = _interopRequireDefault(require(\"../attributedString/fromFragments\"));\n\n/**\n * Default word hyphenation engine used when no one provided.\n * Does not perform word hyphenation at all\n *\n * @param  {String} word\n * @return {Array} same word\n */\nvar defaultHyphenationEngine = function defaultHyphenationEngine(word) {\n  return [word];\n};\n/**\n * Wrap words of attribute string\n *\n * @param  {Object} layout engines\n * @param  {Object}  layout options\n * @param  {Object}  attributed string\n * @return {Object} attributed string including syllables\n */\n\n\nvar wrapWords = function wrapWords(engines, options, attributedString) {\n  if (engines === void 0) {\n    engines = {};\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var syllables = [];\n  var fragments = [];\n  var hyphenateWord = options.hyphenationCallback || engines.wordHyphenation && engines.wordHyphenation(options) || defaultHyphenationEngine;\n\n  for (var _iterator = attributedString.runs, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var run = _ref;\n    var string = '';\n    var words = attributedString.string.slice(run.start, run.end).split(/([ ]+)/g).filter(Boolean);\n\n    for (var _iterator2 = words, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var word = _ref2;\n      var parts = hyphenateWord(word);\n      syllables.push.apply(syllables, parts);\n      string += parts.join('');\n    }\n\n    fragments.push({\n      string: string,\n      attributes: run.attributes\n    });\n  }\n\n  return (0, _extends2[\"default\"])({}, (0, _fromFragments[\"default\"])(fragments), {\n    syllables: syllables\n  });\n};\n\nvar _default = R.curryN(3, wrapWords);\n\nexports[\"default\"] = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}