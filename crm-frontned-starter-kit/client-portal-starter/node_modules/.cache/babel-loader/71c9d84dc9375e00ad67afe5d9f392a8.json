{"ast":null,"code":"import{precacheAndRoute}from\"workbox-precaching\";precacheAndRoute(self.__WB_MANIFEST);// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener(\"message\",event=>{console.log(\"FFFFFFFF: service worker message\",event);if(event.data&&event.data.type===\"SKIP_WAITING\"){self.skipWaiting();}});// Any other custom service worker logic can go here.\nself.addEventListener(\"activate\",function(event){console.log(\"FFFFFFFF: service worker activated\");});self.addEventListener(\"push\",async function(event){console.log(\"FFFFFFF notifications will be displayed here\");const message=await event.data.json();let{title,body,icon,data}=message;console.log({message});const channel=new BroadcastChannel(\"notification--exinitic--messages\");channel.postMessage(message);event.waitUntil(self.registration.showNotification(title,{body,icon,subtitle:\"test subtitle\",\"click_action\":\"localhost:3000/dashboard\",\"tag\":\"testing tag\",data// data: {\n//   url: \"http://localhost:3000/dashboard\"\n// }\n}));});self.addEventListener(\"notificationclose\",function(e){var notification=e.notification;var data=notification.data||{};var primaryKey=data.primaryKey;console.log(\"Closed notification: \"+primaryKey);});self.addEventListener(\"notificationclick\",function(e){e.preventDefault();var notification=e.notification;var data=notification.data||{};var primaryKey=data.primaryKey;var action=e.action;console.log(\"Clicked notification: \"+JSON.stringify(notification));console.log(\"Clicked notification: \"+JSON.stringify(e));console.log(\"Clicked notification: \"+JSON.stringify(data));console.log(\"Clicked notification: \"+primaryKey);e.waitUntil(// clients.openWindow(data.cpClickUrl)\n);if(action===\"close\"){console.log(\"Notification clicked and closed\",primaryKey);notification.close();}else{console.log(\"Notification actioned\",primaryKey);notification.close();}});","map":{"version":3,"names":["precacheAndRoute","self","__WB_MANIFEST","addEventListener","event","console","log","data","type","skipWaiting","message","json","title","body","icon","channel","BroadcastChannel","postMessage","waitUntil","registration","showNotification","subtitle","e","notification","primaryKey","preventDefault","action","JSON","stringify","close"],"sources":["/home/ubuntu/king/portal/client-portal-starter/src/service-worker.js"],"sourcesContent":["\nimport { precacheAndRoute } from \"workbox-precaching\";\n\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener(\"message\", (event) => {\n  console.log(\"FFFFFFFF: service worker message\", event);\n  if (event.data && event.data.type === \"SKIP_WAITING\") {\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here.\n\nself.addEventListener(\"activate\", function (event) {\n  console.log(\"FFFFFFFF: service worker activated\");\n});\n\nself.addEventListener(\"push\", async function (event) {\n  console.log(\"FFFFFFF notifications will be displayed here\");\n  const message = await event.data.json();\n  let { title, body, icon, data } = message;\n  console.log({ message });\n  const channel = new BroadcastChannel(\"notification--exinitic--messages\");\n  channel.postMessage(message);\n  event.waitUntil(\n    self.registration.showNotification(title, {\n      body,\n      icon,\n      subtitle: \"test subtitle\",\n      \"click_action\": \"localhost:3000/dashboard\",\n      \"tag\": \"testing tag\",\n      data,\n      // data: {\n      //   url: \"http://localhost:3000/dashboard\"\n      // }\n    })\n  );\n});\n\nself.addEventListener(\"notificationclose\", function (e) {\n  var notification = e.notification;\n  var data = notification.data || {};\n  var primaryKey = data.primaryKey;\n  console.log(\"Closed notification: \" + primaryKey);\n});\n\nself.addEventListener(\"notificationclick\", function (e) {\n  e.preventDefault();\n  var notification = e.notification;\n  var data = notification.data || {};\n  var primaryKey = data.primaryKey;\n  var action = e.action;\n  console.log(\"Clicked notification: \" + JSON.stringify(notification));\n  console.log(\"Clicked notification: \" + JSON.stringify(e));\n  console.log(\"Clicked notification: \" + JSON.stringify(data));\n  console.log(\"Clicked notification: \" + primaryKey);\n  e.waitUntil(\n    // clients.openWindow(data.cpClickUrl)\n  );\n  if (action === \"close\") {\n    console.log(\"Notification clicked and closed\", primaryKey);\n    notification.close();\n  }\n  else {\n    console.log(\"Notification actioned\", primaryKey);\n    notification.close();\n  }\n});"],"mappings":"AACA,OAASA,gBAAgB,KAAQ,oBAAoB,CAErDA,gBAAgB,CAACC,IAAI,CAACC,aAAa,CAAC,CAEpC;AACA;AACAD,IAAI,CAACE,gBAAgB,CAAC,SAAS,CAAGC,KAAK,EAAK,CAC1CC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEF,KAAK,CAAC,CACtD,GAAIA,KAAK,CAACG,IAAI,EAAIH,KAAK,CAACG,IAAI,CAACC,IAAI,GAAK,cAAc,CAAE,CACpDP,IAAI,CAACQ,WAAW,CAAC,CAAC,CACpB,CACF,CAAC,CAAC,CAEF;AAEAR,IAAI,CAACE,gBAAgB,CAAC,UAAU,CAAE,SAAUC,KAAK,CAAE,CACjDC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CAAC,CAAC,CAEFL,IAAI,CAACE,gBAAgB,CAAC,MAAM,CAAE,eAAgBC,KAAK,CAAE,CACnDC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC,CAC3D,KAAM,CAAAI,OAAO,CAAG,KAAM,CAAAN,KAAK,CAACG,IAAI,CAACI,IAAI,CAAC,CAAC,CACvC,GAAI,CAAEC,KAAK,CAAEC,IAAI,CAAEC,IAAI,CAAEP,IAAK,CAAC,CAAGG,OAAO,CACzCL,OAAO,CAACC,GAAG,CAAC,CAAEI,OAAQ,CAAC,CAAC,CACxB,KAAM,CAAAK,OAAO,CAAG,GAAI,CAAAC,gBAAgB,CAAC,kCAAkC,CAAC,CACxED,OAAO,CAACE,WAAW,CAACP,OAAO,CAAC,CAC5BN,KAAK,CAACc,SAAS,CACbjB,IAAI,CAACkB,YAAY,CAACC,gBAAgB,CAACR,KAAK,CAAE,CACxCC,IAAI,CACJC,IAAI,CACJO,QAAQ,CAAE,eAAe,CACzB,cAAc,CAAE,0BAA0B,CAC1C,KAAK,CAAE,aAAa,CACpBd,IACA;AACA;AACA;AACF,CAAC,CACH,CAAC,CACH,CAAC,CAAC,CAEFN,IAAI,CAACE,gBAAgB,CAAC,mBAAmB,CAAE,SAAUmB,CAAC,CAAE,CACtD,GAAI,CAAAC,YAAY,CAAGD,CAAC,CAACC,YAAY,CACjC,GAAI,CAAAhB,IAAI,CAAGgB,YAAY,CAAChB,IAAI,EAAI,CAAC,CAAC,CAClC,GAAI,CAAAiB,UAAU,CAAGjB,IAAI,CAACiB,UAAU,CAChCnB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAGkB,UAAU,CAAC,CACnD,CAAC,CAAC,CAEFvB,IAAI,CAACE,gBAAgB,CAAC,mBAAmB,CAAE,SAAUmB,CAAC,CAAE,CACtDA,CAAC,CAACG,cAAc,CAAC,CAAC,CAClB,GAAI,CAAAF,YAAY,CAAGD,CAAC,CAACC,YAAY,CACjC,GAAI,CAAAhB,IAAI,CAAGgB,YAAY,CAAChB,IAAI,EAAI,CAAC,CAAC,CAClC,GAAI,CAAAiB,UAAU,CAAGjB,IAAI,CAACiB,UAAU,CAChC,GAAI,CAAAE,MAAM,CAAGJ,CAAC,CAACI,MAAM,CACrBrB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAGqB,IAAI,CAACC,SAAS,CAACL,YAAY,CAAC,CAAC,CACpElB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAGqB,IAAI,CAACC,SAAS,CAACN,CAAC,CAAC,CAAC,CACzDjB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAGqB,IAAI,CAACC,SAAS,CAACrB,IAAI,CAAC,CAAC,CAC5DF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAGkB,UAAU,CAAC,CAClDF,CAAC,CAACJ,SAAS,CACT;AAAA,CACD,CACD,GAAIQ,MAAM,GAAK,OAAO,CAAE,CACtBrB,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEkB,UAAU,CAAC,CAC1DD,YAAY,CAACM,KAAK,CAAC,CAAC,CACtB,CAAC,IACI,CACHxB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEkB,UAAU,CAAC,CAChDD,YAAY,CAACM,KAAK,CAAC,CAAC,CACtB,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}