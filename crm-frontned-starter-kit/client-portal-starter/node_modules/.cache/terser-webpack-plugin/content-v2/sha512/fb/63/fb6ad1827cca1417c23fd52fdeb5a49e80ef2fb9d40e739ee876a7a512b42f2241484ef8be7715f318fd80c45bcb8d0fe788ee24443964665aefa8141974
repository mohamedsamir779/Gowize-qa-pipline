{"code":"!function(e){var t={};function n(s){if(t[s])return t[s].exports;var o=t[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){\"undefined\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"===typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(s,o,function(t){return e[t]}.bind(null,o));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/\",n(n.s=2)}([function(e,t,n){\"use strict\";try{self[\"workbox:precaching:5.1.4\"]&&_()}catch(s){}},function(e,t,n){\"use strict\";try{self[\"workbox:core:5.1.4\"]&&_()}catch(s){}},function(e,t,n){\"use strict\";n.r(t);n(0);const s=[],o={get:()=>s,add(e){s.push(...e)}};n(1);const c={googleAnalytics:\"googleAnalytics\",precache:\"precache-v2\",prefix:\"workbox\",runtime:\"runtime\",suffix:\"undefined\"!==typeof registration?registration.scope:\"\"},a=e=>[c.prefix,e,c.suffix].filter((e=>e&&e.length>0)).join(\"-\"),i=e=>e||a(c.precache),r=function(e){let t=e;for(var n=arguments.length,s=new Array(n>1?n-1:0),o=1;o<n;o++)s[o-1]=arguments[o];return s.length>0&&(t+=\" :: \".concat(JSON.stringify(s))),t};class l extends Error{constructor(e,t){super(r(e,t)),this.name=e,this.details=t}}const h=new Set;const u=(e,t)=>e.filter((e=>t in e)),f=async e=>{let{request:t,mode:n,plugins:s=[]}=e;const o=u(s,\"cacheKeyWillBeUsed\");let c=t;for(const a of o)c=await a.cacheKeyWillBeUsed.call(a,{mode:n,request:c}),\"string\"===typeof c&&(c=new Request(c));return c},d=async e=>{let{cacheName:t,request:n,event:s,matchOptions:o,plugins:c=[]}=e;const a=await self.caches.open(t),i=await f({plugins:c,request:n,mode:\"read\"});let r=await a.match(i,o);for(const l of c)if(\"cachedResponseWillBeUsed\"in l){const e=l.cachedResponseWillBeUsed;r=await e.call(l,{cacheName:t,event:s,matchOptions:o,cachedResponse:r,request:i})}return r},p=async e=>{let{cacheName:t,request:n,response:s,event:o,plugins:c=[],matchOptions:a}=e;const i=await f({plugins:c,request:n,mode:\"write\"});if(!s)throw new l(\"cache-put-with-no-response\",{url:(r=i.url,new URL(String(r),location.href).href.replace(new RegExp(\"^\".concat(location.origin)),\"\"))});var r;const p=await(async e=>{let{request:t,response:n,event:s,plugins:o=[]}=e,c=n,a=!1;for(const i of o)if(\"cacheWillUpdate\"in i){a=!0;const e=i.cacheWillUpdate;if(c=await e.call(i,{request:t,response:c,event:s}),!c)break}return a||(c=c&&200===c.status?c:void 0),c||null})({event:o,plugins:c,response:s,request:i});if(!p)return void 0;const g=await self.caches.open(t),y=u(c,\"cacheDidUpdate\"),w=y.length>0?await d({cacheName:t,matchOptions:a,request:i}):null;try{await g.put(i,p)}catch(v){throw\"QuotaExceededError\"===v.name&&await async function(){for(const e of h)await e()}(),v}for(const l of y)await l.cacheDidUpdate.call(l,{cacheName:t,event:o,oldResponse:w,newResponse:p,request:i})},g=async e=>{let{request:t,fetchOptions:n,event:s,plugins:o=[]}=e;if(\"string\"===typeof t&&(t=new Request(t)),s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const c=u(o,\"fetchDidFail\"),a=c.length>0?t.clone():null;try{for(const e of o)if(\"requestWillFetch\"in e){const n=e.requestWillFetch,o=t.clone();t=await n.call(e,{request:o,event:s})}}catch(r){throw new l(\"plugin-error-request-will-fetch\",{thrownError:r})}const i=t.clone();try{let e;e=\"navigate\"===t.mode?await fetch(t):await fetch(t,n);for(const t of o)\"fetchDidSucceed\"in t&&(e=await t.fetchDidSucceed.call(t,{event:s,request:i,response:e}));return e}catch(h){0;for(const e of c)await e.fetchDidFail.call(e,{error:h,event:s,originalRequest:a.clone(),request:i.clone()});throw h}};let y;async function w(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},o=t?t(s):s,c=function(){if(void 0===y){const t=new Response(\"\");if(\"body\"in t)try{new Response(t.body),y=!0}catch(e){y=!1}y=!1}return y}()?n.body:await n.blob();return new Response(c,o)}function v(e){if(!e)throw new l(\"add-to-cache-list-unexpected-type\",{entry:e});if(\"string\"===typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new l(\"add-to-cache-list-unexpected-type\",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),o=new URL(n,location.href);return s.searchParams.set(\"__WB_REVISION__\",t),{cacheKey:s.href,url:o.href}}class m{constructor(e){this._cacheName=i(e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map}addToCacheList(e){const t=[];for(const n of e){\"string\"===typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:s}=v(n),o=\"string\"!==typeof n&&n.revision?\"reload\":\"default\";if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new l(\"add-to-cache-list-conflicting-entries\",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});if(\"string\"!==typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new l(\"add-to-cache-list-conflicting-integrities\",{url:s});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,o),t.length>0){const e=\"Workbox is precaching URLs without revision \"+\"info: \".concat(t.join(\", \"),\"\\nThis is generally NOT safe. \")+\"Learn more at https://bit.ly/wb-precache\";console.warn(e)}}}async install(){let{event:e,plugins:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const n=[],s=[],o=await self.caches.open(this._cacheName),c=await o.keys(),a=new Set(c.map((e=>e.url)));for(const[r,l]of this._urlsToCacheKeys)a.has(l)?s.push(r):n.push({cacheKey:l,url:r});const i=n.map((n=>{let{cacheKey:s,url:o}=n;const c=this._cacheKeysToIntegrities.get(s),a=this._urlsToCacheModes.get(o);return this._addURLToCache({cacheKey:s,cacheMode:a,event:e,integrity:c,plugins:t,url:o})}));await Promise.all(i);return{updatedURLs:n.map((e=>e.url)),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this._cacheName),t=await e.keys(),n=new Set(this._urlsToCacheKeys.values()),s=[];for(const o of t)n.has(o.url)||(await e.delete(o),s.push(o.url));return{deletedURLs:s}}async _addURLToCache(e){let{cacheKey:t,url:n,cacheMode:s,event:o,plugins:c,integrity:a}=e;const i=new Request(n,{integrity:a,cache:s,credentials:\"same-origin\"});let r,h=await g({event:o,plugins:c,request:i});for(const l of c||[])\"cacheWillUpdate\"in l&&(r=l);if(!(r?await r.cacheWillUpdate({event:o,request:i,response:h}):h.status<400))throw new l(\"bad-precaching-response\",{url:n,status:h.status});h.redirected&&(h=await w(h)),await p({event:o,plugins:c,response:h,request:t===n?i:new Request(t),cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this._cacheName)).match(n)}}createHandler(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];return async t=>{let{request:n}=t;try{const e=await this.matchPrecache(n);if(e)return e;throw new l(\"missing-precache-entry\",{cacheName:this._cacheName,url:n instanceof Request?n.url:n})}catch(s){if(e)return fetch(n);throw s}}}createHandlerBoundToURL(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this.getCacheKeyForURL(e))throw new l(\"non-precached-url\",{url:e});const n=this.createHandler(t),s=new Request(e);return()=>n({request:s})}}let R;const _=()=>(R||(R=new m),R);const U=(e,t)=>{const n=_().getURLsToCacheKeys();for(const s of function(e){let{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:o}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function*(){const c=new URL(e,location.href);c.hash=\"\",yield c.href;const a=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];for(const n of[...e.searchParams.keys()])t.some((e=>e.test(n)))&&e.searchParams.delete(n);return e}(c,t);if(yield a.href,n&&a.pathname.endsWith(\"/\")){const e=new URL(a.href);e.pathname+=n,yield e.href}if(s){const e=new URL(a.href);e.pathname+=\".html\",yield e.href}if(o){const e=o({url:c});for(const t of e)yield t.href}}()}(e,t)){const e=n.get(s);if(e)return e}};let L=!1;function q(e){L||(!function(){let{ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t=\"index.html\",cleanURLs:n=!0,urlManipulation:s}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const o=i();self.addEventListener(\"fetch\",(c=>{const a=U(c.request.url,{cleanURLs:n,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:s});if(!a)return;let i=self.caches.open(o).then((e=>e.match(a))).then((e=>e||fetch(a)));c.respondWith(i)}))}(e),L=!0)}const K=e=>{const t=_(),n=o.get();e.waitUntil(t.install({event:e,plugins:n}).catch((e=>{throw e})))},T=e=>{const t=_();e.waitUntil(t.activate())};var b;(function(e){_().addToCacheList(e),e.length>0&&(self.addEventListener(\"install\",K),self.addEventListener(\"activate\",T))})(self.__WB_MANIFEST),q(b),self.addEventListener(\"message\",(e=>{console.log(\"FFFFFFFF: service worker message\",e),e.data&&\"SKIP_WAITING\"===e.data.type&&self.skipWaiting()})),self.addEventListener(\"activate\",(function(e){console.log(\"FFFFFFFF: service worker activated\")})),self.addEventListener(\"push\",(async function(e){console.log(\"FFFFFFF notifications will be displayed here\");const t=await e.data.json();let{title:n,body:s,icon:o,data:c}=t;console.log({message:t});new BroadcastChannel(\"notification--exinitic--messages\").postMessage(t),e.waitUntil(self.registration.showNotification(n,{body:s,icon:o,subtitle:\"test subtitle\",click_action:\"localhost:3000/dashboard\",tag:\"testing tag\",data:c}))})),self.addEventListener(\"notificationclose\",(function(e){var t=(e.notification.data||{}).primaryKey;console.log(\"Closed notification: \"+t)})),self.addEventListener(\"notificationclick\",(function(e){e.preventDefault();var t=e.notification,n=t.data||{},s=n.primaryKey,o=e.action;console.log(\"Clicked notification: \"+JSON.stringify(t)),console.log(\"Clicked notification: \"+JSON.stringify(e)),console.log(\"Clicked notification: \"+JSON.stringify(n)),console.log(\"Clicked notification: \"+s),e.waitUntil(),\"close\"===o?(console.log(\"Notification clicked and closed\",s),t.close()):(console.log(\"Notification actioned\",s),t.close())}))}]);","name":"service-worker.js","map":{"version":3,"names":["modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","self","_","e","__webpack_exports__","precachePlugins_plugins","precachePlugins","add","newPlugins","push","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","length","join","cacheNames","userCacheName","messageGenerator","code","msg","_len","arguments","args","Array","_key","concat","JSON","stringify","WorkboxError_WorkboxError","Error","constructor","errorCode","details","super","this","quotaErrorCallbacks","Set","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","async","request","_ref","cacheKeyWillBeUsedPlugins","effectiveRequest","Request","matchWrapper","event","matchOptions","_ref3","cache","caches","open","cachedResponse","match","pluginMethod","cacheWrapper","response","_ref4","url","URL","String","location","href","replace","RegExp","origin","responseToCache","_ref2","pluginsUsed","status","undefined","_isResponseSafeToCache","updatePlugins","oldResponse","put","error","callback","executeQuotaErrorCallbacks","newResponse","fetchWrapper","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","err","thrownError","pluginFilteredRequest","fetchResponse","fetch","supportStatus","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","body","testResponse","Response","canConstructResponseFromBodyStream","blob","createCacheKey","entry","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","set","PrecacheController_PrecacheController","_cacheName","_urlsToCacheKeys","Map","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","cacheMode","has","firstEntry","secondEntry","integrity","warningMessage","console","warn","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","keys","existingCacheKeys","map","precacheRequests","_addURLToCache","Promise","all","updatedURLs","item","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","deletedURLs","delete","credentials","cacheWillUpdatePlugin","cacheWillUpdate","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","handler","getOrCreatePrecacheController_precacheController","getOrCreatePrecacheController","options","urlsToCacheKeys","possibleURL","ignoreURLParametersMatching","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","paramName","some","regExp","test","removeIgnoredSearchParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","generateURLVariations","possibleCacheKey","listenerAdded","addRoute","addEventListener","precachedURL","responsePromise","then","respondWith","addFetchListener","installListener","precacheController","waitUntil","catch","activateListener","__WB_MANIFEST","log","data","type","skipWaiting","message","json","title","icon","BroadcastChannel","postMessage","showNotification","subtitle","click_action","tag","primaryKey","notification","preventDefault","action","close"],"sources":["service-worker.js"],"mappings":"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","ignoreList":[]},"input":"/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// @ts-ignore\ntry {\n  self['workbox:precaching:5.1.4'] && _();\n} catch (e) {}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// @ts-ignore\ntry {\n  self['workbox:core:5.1.4'] && _();\n} catch (e) {}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/workbox-precaching/_version.js\nvar _version = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/precachePlugins.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst precachePlugins_plugins = [];\nconst precachePlugins = {\n  /*\n   * @return {Array}\n   * @private\n   */\n  get() {\n    return precachePlugins_plugins;\n  },\n  /*\n   * @param {Array} newPlugins\n   * @private\n   */\n  add(newPlugins) {\n    precachePlugins_plugins.push(...newPlugins);\n  }\n};\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/addPlugins.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Adds plugins to precaching.\n *\n * @param {Array<Object>} newPlugins\n *\n * @memberof module:workbox-precaching\n */\nfunction addPlugins(newPlugins) {\n  precachePlugins.add(newPlugins);\n}\n\n// EXTERNAL MODULE: ./node_modules/workbox-core/_version.js\nvar workbox_core_version = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/cacheNames.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst _cacheNameDetails = {\n  googleAnalytics: 'googleAnalytics',\n  precache: 'precache-v2',\n  prefix: 'workbox',\n  runtime: 'runtime',\n  suffix: typeof registration !== 'undefined' ? registration.scope : ''\n};\nconst _createCacheName = cacheName => {\n  return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix].filter(value => value && value.length > 0).join('-');\n};\nconst eachCacheNameDetail = fn => {\n  for (const key of Object.keys(_cacheNameDetails)) {\n    fn(key);\n  }\n};\nconst cacheNames = {\n  updateDetails: details => {\n    eachCacheNameDetail(key => {\n      if (typeof details[key] === 'string') {\n        _cacheNameDetails[key] = details[key];\n      }\n    });\n  },\n  getGoogleAnalyticsName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n  },\n  getPrecacheName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.precache);\n  },\n  getPrefix: () => {\n    return _cacheNameDetails.prefix;\n  },\n  getRuntimeName: userCacheName => {\n    return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n  },\n  getSuffix: () => {\n    return _cacheNameDetails.suffix;\n  }\n};\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/getFriendlyURL.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst getFriendlyURL = url => {\n  const urlObj = new URL(String(url), location.href);\n  // See https://github.com/GoogleChrome/workbox/issues/2323\n  // We want to include everything, except for the origin if it's same-origin.\n  return urlObj.href.replace(new RegExp(\"^\".concat(location.origin)), '');\n};\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/logger.js\n/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst logger =  true ? null : undefined;\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/models/messages/messages.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst messages = {\n  'invalid-value': _ref => {\n    let {\n      paramName,\n      validValueDescription,\n      value\n    } = _ref;\n    if (!paramName || !validValueDescription) {\n      throw new Error(\"Unexpected input to 'invalid-value' error.\");\n    }\n    return \"The '\".concat(paramName, \"' parameter was given a value with an \") + \"unexpected value. \".concat(validValueDescription, \" Received a value of \") + \"\".concat(JSON.stringify(value), \".\");\n  },\n  'not-an-array': _ref2 => {\n    let {\n      moduleName,\n      className,\n      funcName,\n      paramName\n    } = _ref2;\n    if (!moduleName || !className || !funcName || !paramName) {\n      throw new Error(\"Unexpected input to 'not-an-array' error.\");\n    }\n    return \"The parameter '\".concat(paramName, \"' passed into \") + \"'\".concat(moduleName, \".\").concat(className, \".\").concat(funcName, \"()' must be an array.\");\n  },\n  'incorrect-type': _ref3 => {\n    let {\n      expectedType,\n      paramName,\n      moduleName,\n      className,\n      funcName\n    } = _ref3;\n    if (!expectedType || !paramName || !moduleName || !funcName) {\n      throw new Error(\"Unexpected input to 'incorrect-type' error.\");\n    }\n    return \"The parameter '\".concat(paramName, \"' passed into \") + \"'\".concat(moduleName, \".\").concat(className ? className + '.' : '') + \"\".concat(funcName, \"()' must be of type \").concat(expectedType, \".\");\n  },\n  'incorrect-class': _ref4 => {\n    let {\n      expectedClass,\n      paramName,\n      moduleName,\n      className,\n      funcName,\n      isReturnValueProblem\n    } = _ref4;\n    if (!expectedClass || !moduleName || !funcName) {\n      throw new Error(\"Unexpected input to 'incorrect-class' error.\");\n    }\n    if (isReturnValueProblem) {\n      return \"The return value from \" + \"'\".concat(moduleName, \".\").concat(className ? className + '.' : '').concat(funcName, \"()' \") + \"must be an instance of class \".concat(expectedClass.name, \".\");\n    }\n    return \"The parameter '\".concat(paramName, \"' passed into \") + \"'\".concat(moduleName, \".\").concat(className ? className + '.' : '').concat(funcName, \"()' \") + \"must be an instance of class \".concat(expectedClass.name, \".\");\n  },\n  'missing-a-method': _ref5 => {\n    let {\n      expectedMethod,\n      paramName,\n      moduleName,\n      className,\n      funcName\n    } = _ref5;\n    if (!expectedMethod || !paramName || !moduleName || !className || !funcName) {\n      throw new Error(\"Unexpected input to 'missing-a-method' error.\");\n    }\n    return \"\".concat(moduleName, \".\").concat(className, \".\").concat(funcName, \"() expected the \") + \"'\".concat(paramName, \"' parameter to expose a '\").concat(expectedMethod, \"' method.\");\n  },\n  'add-to-cache-list-unexpected-type': _ref6 => {\n    let {\n      entry\n    } = _ref6;\n    return \"An unexpected entry was passed to \" + \"'workbox-precaching.PrecacheController.addToCacheList()' The entry \" + \"'\".concat(JSON.stringify(entry), \"' isn't supported. You must supply an array of \") + \"strings with one or more characters, objects with a url property or \" + \"Request objects.\";\n  },\n  'add-to-cache-list-conflicting-entries': _ref7 => {\n    let {\n      firstEntry,\n      secondEntry\n    } = _ref7;\n    if (!firstEntry || !secondEntry) {\n      throw new Error(\"Unexpected input to \" + \"'add-to-cache-list-duplicate-entries' error.\");\n    }\n    return \"Two of the entries passed to \" + \"'workbox-precaching.PrecacheController.addToCacheList()' had the URL \" + \"\".concat(firstEntry._entryId, \" but different revision details. Workbox is \") + \"unable to cache and version the asset correctly. Please remove one \" + \"of the entries.\";\n  },\n  'plugin-error-request-will-fetch': _ref8 => {\n    let {\n      thrownError\n    } = _ref8;\n    if (!thrownError) {\n      throw new Error(\"Unexpected input to \" + \"'plugin-error-request-will-fetch', error.\");\n    }\n    return \"An error was thrown by a plugins 'requestWillFetch()' method. \" + \"The thrown error message was: '\".concat(thrownError.message, \"'.\");\n  },\n  'invalid-cache-name': _ref9 => {\n    let {\n      cacheNameId,\n      value\n    } = _ref9;\n    if (!cacheNameId) {\n      throw new Error(\"Expected a 'cacheNameId' for error 'invalid-cache-name'\");\n    }\n    return \"You must provide a name containing at least one character for \" + \"setCacheDetails({\".concat(cacheNameId, \": '...'}). Received a value of \") + \"'\".concat(JSON.stringify(value), \"'\");\n  },\n  'unregister-route-but-not-found-with-method': _ref0 => {\n    let {\n      method\n    } = _ref0;\n    if (!method) {\n      throw new Error(\"Unexpected input to \" + \"'unregister-route-but-not-found-with-method' error.\");\n    }\n    return \"The route you're trying to unregister was not  previously \" + \"registered for the method type '\".concat(method, \"'.\");\n  },\n  'unregister-route-route-not-registered': () => {\n    return \"The route you're trying to unregister was not previously \" + \"registered.\";\n  },\n  'queue-replay-failed': _ref1 => {\n    let {\n      name\n    } = _ref1;\n    return \"Replaying the background sync queue '\".concat(name, \"' failed.\");\n  },\n  'duplicate-queue-name': _ref10 => {\n    let {\n      name\n    } = _ref10;\n    return \"The Queue name '\".concat(name, \"' is already being used. \") + \"All instances of backgroundSync.Queue must be given unique names.\";\n  },\n  'expired-test-without-max-age': _ref11 => {\n    let {\n      methodName,\n      paramName\n    } = _ref11;\n    return \"The '\".concat(methodName, \"()' method can only be used when the \") + \"'\".concat(paramName, \"' is used in the constructor.\");\n  },\n  'unsupported-route-type': _ref12 => {\n    let {\n      moduleName,\n      className,\n      funcName,\n      paramName\n    } = _ref12;\n    return \"The supplied '\".concat(paramName, \"' parameter was an unsupported type. \") + \"Please check the docs for \".concat(moduleName, \".\").concat(className, \".\").concat(funcName, \" for \") + \"valid input types.\";\n  },\n  'not-array-of-class': _ref13 => {\n    let {\n      value,\n      expectedClass,\n      moduleName,\n      className,\n      funcName,\n      paramName\n    } = _ref13;\n    return \"The supplied '\".concat(paramName, \"' parameter must be an array of \") + \"'\".concat(expectedClass, \"' objects. Received '\").concat(JSON.stringify(value), \",'. \") + \"Please check the call to \".concat(moduleName, \".\").concat(className, \".\").concat(funcName, \"() \") + \"to fix the issue.\";\n  },\n  'max-entries-or-age-required': _ref14 => {\n    let {\n      moduleName,\n      className,\n      funcName\n    } = _ref14;\n    return \"You must define either config.maxEntries or config.maxAgeSeconds\" + \"in \".concat(moduleName, \".\").concat(className, \".\").concat(funcName);\n  },\n  'statuses-or-headers-required': _ref15 => {\n    let {\n      moduleName,\n      className,\n      funcName\n    } = _ref15;\n    return \"You must define either config.statuses or config.headers\" + \"in \".concat(moduleName, \".\").concat(className, \".\").concat(funcName);\n  },\n  'invalid-string': _ref16 => {\n    let {\n      moduleName,\n      funcName,\n      paramName\n    } = _ref16;\n    if (!paramName || !moduleName || !funcName) {\n      throw new Error(\"Unexpected input to 'invalid-string' error.\");\n    }\n    return \"When using strings, the '\".concat(paramName, \"' parameter must start with \") + \"'http' (for cross-origin matches) or '/' (for same-origin matches). \" + \"Please see the docs for \".concat(moduleName, \".\").concat(funcName, \"() for \") + \"more info.\";\n  },\n  'channel-name-required': () => {\n    return \"You must provide a channelName to construct a \" + \"BroadcastCacheUpdate instance.\";\n  },\n  'invalid-responses-are-same-args': () => {\n    return \"The arguments passed into responsesAreSame() appear to be \" + \"invalid. Please ensure valid Responses are used.\";\n  },\n  'expire-custom-caches-only': () => {\n    return \"You must provide a 'cacheName' property when using the \" + \"expiration plugin with a runtime caching strategy.\";\n  },\n  'unit-must-be-bytes': _ref17 => {\n    let {\n      normalizedRangeHeader\n    } = _ref17;\n    if (!normalizedRangeHeader) {\n      throw new Error(\"Unexpected input to 'unit-must-be-bytes' error.\");\n    }\n    return \"The 'unit' portion of the Range header must be set to 'bytes'. \" + \"The Range header provided was \\\"\".concat(normalizedRangeHeader, \"\\\"\");\n  },\n  'single-range-only': _ref18 => {\n    let {\n      normalizedRangeHeader\n    } = _ref18;\n    if (!normalizedRangeHeader) {\n      throw new Error(\"Unexpected input to 'single-range-only' error.\");\n    }\n    return \"Multiple ranges are not supported. Please use a  single start \" + \"value, and optional end value. The Range header provided was \" + \"\\\"\".concat(normalizedRangeHeader, \"\\\"\");\n  },\n  'invalid-range-values': _ref19 => {\n    let {\n      normalizedRangeHeader\n    } = _ref19;\n    if (!normalizedRangeHeader) {\n      throw new Error(\"Unexpected input to 'invalid-range-values' error.\");\n    }\n    return \"The Range header is missing both start and end values. At least \" + \"one of those values is needed. The Range header provided was \" + \"\\\"\".concat(normalizedRangeHeader, \"\\\"\");\n  },\n  'no-range-header': () => {\n    return \"No Range header was found in the Request provided.\";\n  },\n  'range-not-satisfiable': _ref20 => {\n    let {\n      size,\n      start,\n      end\n    } = _ref20;\n    return \"The start (\".concat(start, \") and end (\").concat(end, \") values in the Range are \") + \"not satisfiable by the cached response, which is \".concat(size, \" bytes.\");\n  },\n  'attempt-to-cache-non-get-request': _ref21 => {\n    let {\n      url,\n      method\n    } = _ref21;\n    return \"Unable to cache '\".concat(url, \"' because it is a '\").concat(method, \"' request and \") + \"only 'GET' requests can be cached.\";\n  },\n  'cache-put-with-no-response': _ref22 => {\n    let {\n      url\n    } = _ref22;\n    return \"There was an attempt to cache '\".concat(url, \"' but the response was not \") + \"defined.\";\n  },\n  'no-response': _ref23 => {\n    let {\n      url,\n      error\n    } = _ref23;\n    let message = \"The strategy could not generate a response for '\".concat(url, \"'.\");\n    if (error) {\n      message += \" The underlying error is \".concat(error, \".\");\n    }\n    return message;\n  },\n  'bad-precaching-response': _ref24 => {\n    let {\n      url,\n      status\n    } = _ref24;\n    return \"The precaching request for '\".concat(url, \"' failed with an HTTP \") + \"status of \".concat(status, \".\");\n  },\n  'non-precached-url': _ref25 => {\n    let {\n      url\n    } = _ref25;\n    return \"createHandlerBoundToURL('\".concat(url, \"') was called, but that URL is \") + \"not precached. Please pass in a URL that is precached instead.\";\n  },\n  'add-to-cache-list-conflicting-integrities': _ref26 => {\n    let {\n      url\n    } = _ref26;\n    return \"Two of the entries passed to \" + \"'workbox-precaching.PrecacheController.addToCacheList()' had the URL \" + \"\".concat(url, \" with different integrity values. Please remove one of them.\");\n  },\n  'missing-precache-entry': _ref27 => {\n    let {\n      cacheName,\n      url\n    } = _ref27;\n    return \"Unable to find a precached response in \".concat(cacheName, \" for \").concat(url, \".\");\n  }\n};\n// CONCATENATED MODULE: ./node_modules/workbox-core/models/messages/messageGenerator.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\nconst fallback = function (code) {\n  let msg = code;\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  if (args.length > 0) {\n    msg += \" :: \".concat(JSON.stringify(args));\n  }\n  return msg;\n};\nconst generatorFunction = function (code) {\n  let details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const message = messages[code];\n  if (!message) {\n    throw new Error(\"Unable to find message for code '\".concat(code, \"'.\"));\n  }\n  return message(details);\n};\nconst messageGenerator =  true ? fallback : undefined;\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/WorkboxError.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError_WorkboxError extends Error {\n  /**\n   *\n   * @param {string} errorCode The error code that\n   * identifies this particular error.\n   * @param {Object=} details Any relevant arguments\n   * that will help developers identify issues should\n   * be added as a key on the context object.\n   */\n  constructor(errorCode, details) {\n    const message = messageGenerator(errorCode, details);\n    super(message);\n    this.name = errorCode;\n    this.details = details;\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/assert.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n  if (!Array.isArray(value)) {\n    throw new WorkboxError_WorkboxError('not-an-array', details);\n  }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n  const type = typeof object[expectedMethod];\n  if (type !== 'function') {\n    details['expectedMethod'] = expectedMethod;\n    throw new WorkboxError_WorkboxError('missing-a-method', details);\n  }\n};\nconst isType = (object, expectedType, details) => {\n  if (typeof object !== expectedType) {\n    details['expectedType'] = expectedType;\n    throw new WorkboxError_WorkboxError('incorrect-type', details);\n  }\n};\nconst isInstance = (object, expectedClass, details) => {\n  if (!(object instanceof expectedClass)) {\n    details['expectedClass'] = expectedClass;\n    throw new WorkboxError_WorkboxError('incorrect-class', details);\n  }\n};\nconst isOneOf = (value, validValues, details) => {\n  if (!validValues.includes(value)) {\n    details['validValueDescription'] = \"Valid values are \".concat(JSON.stringify(validValues), \".\");\n    throw new WorkboxError_WorkboxError('invalid-value', details);\n  }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n  const error = new WorkboxError_WorkboxError('not-array-of-class', details);\n  if (!Array.isArray(value)) {\n    throw error;\n  }\n  for (const item of value) {\n    if (!(item instanceof expectedClass)) {\n      throw error;\n    }\n  }\n};\nconst finalAssertExports =  true ? null : undefined;\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/models/quotaErrorCallbacks.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n  if (false) {}\n  for (const callback of quotaErrorCallbacks) {\n    await callback();\n    if (false) {}\n  }\n  if (false) {}\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/utils/pluginUtils.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst pluginUtils = {\n  filter: (plugins, callbackName) => {\n    return plugins.filter(plugin => callbackName in plugin);\n  }\n};\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/cacheWrapper.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n\n\n\n\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async _ref => {\n  let {\n    request,\n    mode,\n    plugins = []\n  } = _ref;\n  const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n  let effectiveRequest = request;\n  for (const plugin of cacheKeyWillBeUsedPlugins) {\n    effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, {\n      mode,\n      request: effectiveRequest\n    });\n    if (typeof effectiveRequest === 'string') {\n      effectiveRequest = new Request(effectiveRequest);\n    }\n    if (false) {}\n  }\n  return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async _ref2 => {\n  let {\n    request,\n    response,\n    event,\n    plugins = []\n  } = _ref2;\n  let responseToCache = response;\n  let pluginsUsed = false;\n  for (const plugin of plugins) {\n    if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n      pluginsUsed = true;\n      const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n      responseToCache = await pluginMethod.call(plugin, {\n        request,\n        response: responseToCache,\n        event\n      });\n      if (false) {}\n      if (!responseToCache) {\n        break;\n      }\n    }\n  }\n  if (!pluginsUsed) {\n    if (false) {}\n    responseToCache = responseToCache && responseToCache.status === 200 ? responseToCache : undefined;\n  }\n  return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async _ref3 => {\n  let {\n    cacheName,\n    request,\n    event,\n    matchOptions,\n    plugins = []\n  } = _ref3;\n  const cache = await self.caches.open(cacheName);\n  const effectiveRequest = await _getEffectiveRequest({\n    plugins,\n    request,\n    mode: 'read'\n  });\n  let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n  if (false) {}\n  for (const plugin of plugins) {\n    if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n      const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n      cachedResponse = await pluginMethod.call(plugin, {\n        cacheName,\n        event,\n        matchOptions,\n        cachedResponse,\n        request: effectiveRequest\n      });\n      if (false) {}\n    }\n  }\n  return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async _ref4 => {\n  let {\n    cacheName,\n    request,\n    response,\n    event,\n    plugins = [],\n    matchOptions\n  } = _ref4;\n  if (false) {}\n  const effectiveRequest = await _getEffectiveRequest({\n    plugins,\n    request,\n    mode: 'write'\n  });\n  if (!response) {\n    if (false) {}\n    throw new WorkboxError_WorkboxError('cache-put-with-no-response', {\n      url: getFriendlyURL(effectiveRequest.url)\n    });\n  }\n  const responseToCache = await _isResponseSafeToCache({\n    event,\n    plugins,\n    response,\n    request: effectiveRequest\n  });\n  if (!responseToCache) {\n    if (false) {}\n    return;\n  }\n  const cache = await self.caches.open(cacheName);\n  const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n  const oldResponse = updatePlugins.length > 0 ? await matchWrapper({\n    cacheName,\n    matchOptions,\n    request: effectiveRequest\n  }) : null;\n  if (false) {}\n  try {\n    await cache.put(effectiveRequest, responseToCache);\n  } catch (error) {\n    // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n    if (error.name === 'QuotaExceededError') {\n      await executeQuotaErrorCallbacks();\n    }\n    throw error;\n  }\n  for (const plugin of updatePlugins) {\n    await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n      cacheName,\n      event,\n      oldResponse,\n      newResponse: responseToCache,\n      request: effectiveRequest\n    });\n  }\n};\nconst cacheWrapper = {\n  put: putWrapper,\n  match: matchWrapper\n};\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/fetchWrapper.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n\n\n\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async _ref => {\n  let {\n    request,\n    fetchOptions,\n    event,\n    plugins = []\n  } = _ref;\n  if (typeof request === 'string') {\n    request = new Request(request);\n  }\n  // We *should* be able to call `await event.preloadResponse` even if it's\n  // undefined, but for some reason, doing so leads to errors in our Node unit\n  // tests. To work around that, explicitly check preloadResponse's value first.\n  if (event instanceof FetchEvent && event.preloadResponse) {\n    const possiblePreloadResponse = await event.preloadResponse;\n    if (possiblePreloadResponse) {\n      if (false) {}\n      return possiblePreloadResponse;\n    }\n  }\n  if (false) {}\n  const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n  // If there is a fetchDidFail plugin, we need to save a clone of the\n  // original request before it's either modified by a requestWillFetch\n  // plugin or before the original request's body is consumed via fetch().\n  const originalRequest = failedFetchPlugins.length > 0 ? request.clone() : null;\n  try {\n    for (const plugin of plugins) {\n      if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n        const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n        const requestClone = request.clone();\n        request = await pluginMethod.call(plugin, {\n          request: requestClone,\n          event\n        });\n        if (false) {}\n      }\n    }\n  } catch (err) {\n    throw new WorkboxError_WorkboxError('plugin-error-request-will-fetch', {\n      thrownError: err\n    });\n  }\n  // The request can be altered by plugins with `requestWillFetch` making\n  // the original request (Most likely from a `fetch` event) to be different\n  // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n  const pluginFilteredRequest = request.clone();\n  try {\n    let fetchResponse;\n    // See https://github.com/GoogleChrome/workbox/issues/1796\n    if (request.mode === 'navigate') {\n      fetchResponse = await fetch(request);\n    } else {\n      fetchResponse = await fetch(request, fetchOptions);\n    }\n    if (false) {}\n    for (const plugin of plugins) {\n      if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n        fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */].call(plugin, {\n          event,\n          request: pluginFilteredRequest,\n          response: fetchResponse\n        });\n        if (false) {}\n      }\n    }\n    return fetchResponse;\n  } catch (error) {\n    if (false) {}\n    for (const plugin of failedFetchPlugins) {\n      await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n        error,\n        event,\n        originalRequest: originalRequest.clone(),\n        request: pluginFilteredRequest.clone()\n      });\n    }\n    throw error;\n  }\n};\nconst fetchWrapper = {\n  fetch: wrappedFetch\n};\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n  if (supportStatus === undefined) {\n    const testResponse = new Response('');\n    if ('body' in testResponse) {\n      try {\n        new Response(testResponse.body);\n        supportStatus = true;\n      } catch (error) {\n        supportStatus = false;\n      }\n    }\n    supportStatus = false;\n  }\n  return supportStatus;\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-core/copyResponse.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n  const clonedResponse = response.clone();\n  // Create a fresh `ResponseInit` object by cloning the headers.\n  const responseInit = {\n    headers: new Headers(clonedResponse.headers),\n    status: clonedResponse.status,\n    statusText: clonedResponse.statusText\n  };\n  // Apply any user modifications.\n  const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n  // Create the new response from the body stream and `ResponseInit`\n  // modifications. Note: not all browsers support the Response.body stream,\n  // so fall back to reading the entire body into memory as a blob.\n  const body = canConstructResponseFromBodyStream() ? clonedResponse.body : await clonedResponse.blob();\n  return new Response(body, modifiedResponseInit);\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/createCacheKey.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nfunction createCacheKey(entry) {\n  if (!entry) {\n    throw new WorkboxError_WorkboxError('add-to-cache-list-unexpected-type', {\n      entry\n    });\n  }\n  // If a precache manifest entry is a string, it's assumed to be a versioned\n  // URL, like '/app.abcd1234.js'. Return as-is.\n  if (typeof entry === 'string') {\n    const urlObject = new URL(entry, location.href);\n    return {\n      cacheKey: urlObject.href,\n      url: urlObject.href\n    };\n  }\n  const {\n    revision,\n    url\n  } = entry;\n  if (!url) {\n    throw new WorkboxError_WorkboxError('add-to-cache-list-unexpected-type', {\n      entry\n    });\n  }\n  // If there's just a URL and no revision, then it's also assumed to be a\n  // versioned URL.\n  if (!revision) {\n    const urlObject = new URL(url, location.href);\n    return {\n      cacheKey: urlObject.href,\n      url: urlObject.href\n    };\n  }\n  // Otherwise, construct a properly versioned URL using the custom Workbox\n  // search parameter along with the revision info.\n  const cacheKeyURL = new URL(url, location.href);\n  const originalURL = new URL(url, location.href);\n  cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n  return {\n    cacheKey: cacheKeyURL.href,\n    url: originalURL.href\n  };\n}\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/printCleanupDetails.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n  logger.groupCollapsed(groupTitle);\n  for (const url of deletedURLs) {\n    logger.log(url);\n  }\n  logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nfunction printCleanupDetails(deletedURLs) {\n  const deletionCount = deletedURLs.length;\n  if (deletionCount > 0) {\n    logger.groupCollapsed(\"During precaching cleanup, \" + \"\".concat(deletionCount, \" cached \") + \"request\".concat(deletionCount === 1 ? ' was' : 's were', \" deleted.\"));\n    logGroup('Deleted Cache Requests', deletedURLs);\n    logger.groupEnd();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/printInstallDetails.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n  if (urls.length === 0) {\n    return;\n  }\n  logger.groupCollapsed(groupTitle);\n  for (const url of urls) {\n    logger.log(url);\n  }\n  logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nfunction printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n  const precachedCount = urlsToPrecache.length;\n  const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n  if (precachedCount || alreadyPrecachedCount) {\n    let message = \"Precaching \".concat(precachedCount, \" file\").concat(precachedCount === 1 ? '' : 's', \".\");\n    if (alreadyPrecachedCount > 0) {\n      message += \" \".concat(alreadyPrecachedCount, \" \") + \"file\".concat(alreadyPrecachedCount === 1 ? ' is' : 's are', \" already cached.\");\n    }\n    logger.groupCollapsed(message);\n    _nestedGroup(\"View newly precached URLs.\", urlsToPrecache);\n    _nestedGroup(\"View previously precached URLs.\", urlsAlreadyPrecached);\n    logger.groupEnd();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/PrecacheController.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController_PrecacheController {\n  /**\n   * Create a new PrecacheController.\n   *\n   * @param {string} [cacheName] An optional name for the cache, to override\n   * the default precache name.\n   */\n  constructor(cacheName) {\n    this._cacheName = cacheNames.getPrecacheName(cacheName);\n    this._urlsToCacheKeys = new Map();\n    this._urlsToCacheModes = new Map();\n    this._cacheKeysToIntegrities = new Map();\n  }\n  /**\n   * This method will add items to the precache list, removing duplicates\n   * and ensuring the information is valid.\n   *\n   * @param {\n   * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n   * } entries Array of entries to precache.\n   */\n  addToCacheList(entries) {\n    if (false) {}\n    const urlsToWarnAbout = [];\n    for (const entry of entries) {\n      // See https://github.com/GoogleChrome/workbox/issues/2259\n      if (typeof entry === 'string') {\n        urlsToWarnAbout.push(entry);\n      } else if (entry && entry.revision === undefined) {\n        urlsToWarnAbout.push(entry.url);\n      }\n      const {\n        cacheKey,\n        url\n      } = createCacheKey(entry);\n      const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n      if (this._urlsToCacheKeys.has(url) && this._urlsToCacheKeys.get(url) !== cacheKey) {\n        throw new WorkboxError_WorkboxError('add-to-cache-list-conflicting-entries', {\n          firstEntry: this._urlsToCacheKeys.get(url),\n          secondEntry: cacheKey\n        });\n      }\n      if (typeof entry !== 'string' && entry.integrity) {\n        if (this._cacheKeysToIntegrities.has(cacheKey) && this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n          throw new WorkboxError_WorkboxError('add-to-cache-list-conflicting-integrities', {\n            url\n          });\n        }\n        this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n      }\n      this._urlsToCacheKeys.set(url, cacheKey);\n      this._urlsToCacheModes.set(url, cacheMode);\n      if (urlsToWarnAbout.length > 0) {\n        const warningMessage = \"Workbox is precaching URLs without revision \" + \"info: \".concat(urlsToWarnAbout.join(', '), \"\\nThis is generally NOT safe. \") + \"Learn more at https://bit.ly/wb-precache\";\n        if (true) {\n          // Use console directly to display this warning without bloating\n          // bundle sizes by pulling in all of the logger codebase in prod.\n          console.warn(warningMessage);\n        } else {}\n      }\n    }\n  }\n  /**\n   * Precaches new and updated assets. Call this method from the service worker\n   * install event.\n   *\n   * @param {Object} options\n   * @param {Event} [options.event] The install event (if needed).\n   * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n   * and caching during install.\n   * @return {Promise<module:workbox-precaching.InstallResult>}\n   */\n  async install() {\n    let {\n      event,\n      plugins\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (false) {}\n    const toBePrecached = [];\n    const alreadyPrecached = [];\n    const cache = await self.caches.open(this._cacheName);\n    const alreadyCachedRequests = await cache.keys();\n    const existingCacheKeys = new Set(alreadyCachedRequests.map(request => request.url));\n    for (const [url, cacheKey] of this._urlsToCacheKeys) {\n      if (existingCacheKeys.has(cacheKey)) {\n        alreadyPrecached.push(url);\n      } else {\n        toBePrecached.push({\n          cacheKey,\n          url\n        });\n      }\n    }\n    const precacheRequests = toBePrecached.map(_ref => {\n      let {\n        cacheKey,\n        url\n      } = _ref;\n      const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n      const cacheMode = this._urlsToCacheModes.get(url);\n      return this._addURLToCache({\n        cacheKey,\n        cacheMode,\n        event,\n        integrity,\n        plugins,\n        url\n      });\n    });\n    await Promise.all(precacheRequests);\n    const updatedURLs = toBePrecached.map(item => item.url);\n    if (false) {}\n    return {\n      updatedURLs,\n      notUpdatedURLs: alreadyPrecached\n    };\n  }\n  /**\n   * Deletes assets that are no longer present in the current precache manifest.\n   * Call this method from the service worker activate event.\n   *\n   * @return {Promise<module:workbox-precaching.CleanupResult>}\n   */\n  async activate() {\n    const cache = await self.caches.open(this._cacheName);\n    const currentlyCachedRequests = await cache.keys();\n    const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n    const deletedURLs = [];\n    for (const request of currentlyCachedRequests) {\n      if (!expectedCacheKeys.has(request.url)) {\n        await cache.delete(request);\n        deletedURLs.push(request.url);\n      }\n    }\n    if (false) {}\n    return {\n      deletedURLs\n    };\n  }\n  /**\n   * Requests the entry and saves it to the cache if the response is valid.\n   * By default, any response with a status code of less than 400 (including\n   * opaque responses) is considered valid.\n   *\n   * If you need to use custom criteria to determine what's valid and what\n   * isn't, then pass in an item in `options.plugins` that implements the\n   * `cacheWillUpdate()` lifecycle event.\n   *\n   * @private\n   * @param {Object} options\n   * @param {string} options.cacheKey The string to use a cache key.\n   * @param {string} options.url The URL to fetch and cache.\n   * @param {string} [options.cacheMode] The cache mode for the network request.\n   * @param {Event} [options.event] The install event (if passed).\n   * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n   * fetch and caching.\n   * @param {string} [options.integrity] The value to use for the `integrity`\n   * field when making the request.\n   */\n  async _addURLToCache(_ref2) {\n    let {\n      cacheKey,\n      url,\n      cacheMode,\n      event,\n      plugins,\n      integrity\n    } = _ref2;\n    const request = new Request(url, {\n      integrity,\n      cache: cacheMode,\n      credentials: 'same-origin'\n    });\n    let response = await fetchWrapper.fetch({\n      event,\n      plugins,\n      request\n    });\n    // Allow developers to override the default logic about what is and isn't\n    // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n    // a `CacheableResponsePlugin` instance.\n    let cacheWillUpdatePlugin;\n    for (const plugin of plugins || []) {\n      if ('cacheWillUpdate' in plugin) {\n        cacheWillUpdatePlugin = plugin;\n      }\n    }\n    const isValidResponse = cacheWillUpdatePlugin ?\n    // Use a callback if provided. It returns a truthy value if valid.\n    // NOTE: invoke the method on the plugin instance so the `this` context\n    // is correct.\n    await cacheWillUpdatePlugin.cacheWillUpdate({\n      event,\n      request,\n      response\n    }) :\n    // Otherwise, default to considering any response status under 400 valid.\n    // This includes, by default, considering opaque responses valid.\n    response.status < 400;\n    // Consider this a failure, leading to the `install` handler failing, if\n    // we get back an invalid response.\n    if (!isValidResponse) {\n      throw new WorkboxError_WorkboxError('bad-precaching-response', {\n        url,\n        status: response.status\n      });\n    }\n    // Redirected responses cannot be used to satisfy a navigation request, so\n    // any redirected response must be \"copied\" rather than cloned, so the new\n    // response doesn't contain the `redirected` flag. See:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n    if (response.redirected) {\n      response = await copyResponse(response);\n    }\n    await cacheWrapper.put({\n      event,\n      plugins,\n      response,\n      // `request` already uses `url`. We may be able to reuse it.\n      request: cacheKey === url ? request : new Request(cacheKey),\n      cacheName: this._cacheName,\n      matchOptions: {\n        ignoreSearch: true\n      }\n    });\n  }\n  /**\n   * Returns a mapping of a precached URL to the corresponding cache key, taking\n   * into account the revision information for the URL.\n   *\n   * @return {Map<string, string>} A URL to cache key mapping.\n   */\n  getURLsToCacheKeys() {\n    return this._urlsToCacheKeys;\n  }\n  /**\n   * Returns a list of all the URLs that have been precached by the current\n   * service worker.\n   *\n   * @return {Array<string>} The precached URLs.\n   */\n  getCachedURLs() {\n    return [...this._urlsToCacheKeys.keys()];\n  }\n  /**\n   * Returns the cache key used for storing a given URL. If that URL is\n   * unversioned, like `/index.html', then the cache key will be the original\n   * URL with a search parameter appended to it.\n   *\n   * @param {string} url A URL whose cache key you want to look up.\n   * @return {string} The versioned URL that corresponds to a cache key\n   * for the original URL, or undefined if that URL isn't precached.\n   */\n  getCacheKeyForURL(url) {\n    const urlObject = new URL(url, location.href);\n    return this._urlsToCacheKeys.get(urlObject.href);\n  }\n  /**\n   * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n   * with the following differences:\n   *\n   * - It knows what the name of the precache is, and only checks in that cache.\n   * - It allows you to pass in an \"original\" URL without versioning parameters,\n   * and it will automatically look up the correct cache key for the currently\n   * active revision of that URL.\n   *\n   * E.g., `matchPrecache('index.html')` will find the correct precached\n   * response for the currently active service worker, even if the actual cache\n   * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n   *\n   * @param {string|Request} request The key (without revisioning parameters)\n   * to look up in the precache.\n   * @return {Promise<Response|undefined>}\n   */\n  async matchPrecache(request) {\n    const url = request instanceof Request ? request.url : request;\n    const cacheKey = this.getCacheKeyForURL(url);\n    if (cacheKey) {\n      const cache = await self.caches.open(this._cacheName);\n      return cache.match(cacheKey);\n    }\n    return undefined;\n  }\n  /**\n   * Returns a function that can be used within a\n   * {@link module:workbox-routing.Route} that will find a response for the\n   * incoming request against the precache.\n   *\n   * If for an unexpected reason there is a cache miss for the request,\n   * this will fall back to retrieving the `Response` via `fetch()` when\n   * `fallbackToNetwork` is `true`.\n   *\n   * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n   * response from the network if there's a precache miss.\n   * @return {module:workbox-routing~handlerCallback}\n   */\n  createHandler() {\n    let fallbackToNetwork = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return async _ref3 => {\n      let {\n        request\n      } = _ref3;\n      try {\n        const response = await this.matchPrecache(request);\n        if (response) {\n          return response;\n        }\n        // This shouldn't normally happen, but there are edge cases:\n        // https://github.com/GoogleChrome/workbox/issues/1441\n        throw new WorkboxError_WorkboxError('missing-precache-entry', {\n          cacheName: this._cacheName,\n          url: request instanceof Request ? request.url : request\n        });\n      } catch (error) {\n        if (fallbackToNetwork) {\n          if (false) {}\n          return fetch(request);\n        }\n        throw error;\n      }\n    };\n  }\n  /**\n   * Returns a function that looks up `url` in the precache (taking into\n   * account revision information), and returns the corresponding `Response`.\n   *\n   * If for an unexpected reason there is a cache miss when looking up `url`,\n   * this will fall back to retrieving the `Response` via `fetch()` when\n   * `fallbackToNetwork` is `true`.\n   *\n   * @param {string} url The precached URL which will be used to lookup the\n   * `Response`.\n   * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n   * response from the network if there's a precache miss.\n   * @return {module:workbox-routing~handlerCallback}\n   */\n  createHandlerBoundToURL(url) {\n    let fallbackToNetwork = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const cacheKey = this.getCacheKeyForURL(url);\n    if (!cacheKey) {\n      throw new WorkboxError_WorkboxError('non-precached-url', {\n        url\n      });\n    }\n    const handler = this.createHandler(fallbackToNetwork);\n    const request = new Request(url);\n    return () => handler({\n      request\n    });\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\nlet getOrCreatePrecacheController_precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nconst getOrCreatePrecacheController = () => {\n  if (!getOrCreatePrecacheController_precacheController) {\n    getOrCreatePrecacheController_precacheController = new PrecacheController_PrecacheController();\n  }\n  return getOrCreatePrecacheController_precacheController;\n};\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nfunction removeIgnoredSearchParams(urlObject) {\n  let ignoreURLParametersMatching = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  // Convert the iterable into an array at the start of the loop to make sure\n  // deletion doesn't mess up iteration.\n  for (const paramName of [...urlObject.searchParams.keys()]) {\n    if (ignoreURLParametersMatching.some(regExp => regExp.test(paramName))) {\n      urlObject.searchParams.delete(paramName);\n    }\n  }\n  return urlObject;\n}\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/generateURLVariations.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nfunction generateURLVariations(url) {\n  let {\n    ignoreURLParametersMatching,\n    directoryIndex,\n    cleanURLs,\n    urlManipulation\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function* () {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n      const directoryURL = new URL(urlWithoutIgnoredParams.href);\n      directoryURL.pathname += directoryIndex;\n      yield directoryURL.href;\n    }\n    if (cleanURLs) {\n      const cleanURL = new URL(urlWithoutIgnoredParams.href);\n      cleanURL.pathname += '.html';\n      yield cleanURL.href;\n    }\n    if (urlManipulation) {\n      const additionalURLs = urlManipulation({\n        url: urlObject\n      });\n      for (const urlToAttempt of additionalURLs) {\n        yield urlToAttempt.href;\n      }\n    }\n  }();\n}\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/getCacheKeyForURL.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nconst getCacheKeyForURL = (url, options) => {\n  const precacheController = getOrCreatePrecacheController();\n  const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n  for (const possibleURL of generateURLVariations(url, options)) {\n    const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n    if (possibleCacheKey) {\n      return possibleCacheKey;\n    }\n  }\n};\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/addFetchListener.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n\n\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nconst addFetchListener = function () {\n  let {\n    ignoreURLParametersMatching = [/^utm_/],\n    directoryIndex = 'index.html',\n    cleanURLs = true,\n    urlManipulation\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const cacheName = cacheNames.getPrecacheName();\n  // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n  self.addEventListener('fetch', event => {\n    const precachedURL = getCacheKeyForURL(event.request.url, {\n      cleanURLs,\n      directoryIndex,\n      ignoreURLParametersMatching,\n      urlManipulation\n    });\n    if (!precachedURL) {\n      if (false) {}\n      return;\n    }\n    let responsePromise = self.caches.open(cacheName).then(cache => {\n      return cache.match(precachedURL);\n    }).then(cachedResponse => {\n      if (cachedResponse) {\n        return cachedResponse;\n      }\n      // Fall back to the network if we don't have a cached response\n      // (perhaps due to manual cache cleanup).\n      if (false) {}\n      return fetch(precachedURL);\n    });\n    if (false) {}\n    event.respondWith(responsePromise);\n  });\n};\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/addRoute.js\n/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n  if (!listenerAdded) {\n    addFetchListener(options);\n    listenerAdded = true;\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/utils/deleteOutdatedCaches.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async function (currentPrecacheName) {\n  let substringToFind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SUBSTRING_TO_FIND;\n  const cacheNames = await self.caches.keys();\n  const cacheNamesToDelete = cacheNames.filter(cacheName => {\n    return cacheName.includes(substringToFind) && cacheName.includes(self.registration.scope) && cacheName !== currentPrecacheName;\n  });\n  await Promise.all(cacheNamesToDelete.map(cacheName => self.caches.delete(cacheName)));\n  return cacheNamesToDelete;\n};\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/cleanupOutdatedCaches.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n  // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n  self.addEventListener('activate', event => {\n    const cacheName = cacheNames.getPrecacheName();\n    event.waitUntil(deleteOutdatedCaches(cacheName).then(cachesDeleted => {\n      if (false) {}\n    }));\n  });\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/createHandler.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandler} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandler} on that instance,\n * instead of using this function.\n *\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandler() {\n  let fallbackToNetwork = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  const precacheController = getOrCreatePrecacheController();\n  return precacheController.createHandler(fallbackToNetwork);\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/createHandlerBoundToURL.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n  const precacheController = getOrCreatePrecacheController();\n  return precacheController.createHandlerBoundToURL(url);\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/getCacheKeyForURL.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof module:workbox-precaching\n */\nfunction getCacheKeyForURL_getCacheKeyForURL(url) {\n  const precacheController = getOrCreatePrecacheController();\n  return precacheController.getCacheKeyForURL(url);\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/matchPrecache.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n  const precacheController = getOrCreatePrecacheController();\n  return precacheController.matchPrecache(request);\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/precache.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n\nconst installListener = event => {\n  const precacheController = getOrCreatePrecacheController();\n  const plugins = precachePlugins.get();\n  event.waitUntil(precacheController.install({\n    event,\n    plugins\n  }).catch(error => {\n    if (false) {}\n    // Re-throw the error to ensure installation fails.\n    throw error;\n  }));\n};\nconst activateListener = event => {\n  const precacheController = getOrCreatePrecacheController();\n  event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n  const precacheController = getOrCreatePrecacheController();\n  precacheController.addToCacheList(entries);\n  if (entries.length > 0) {\n    // NOTE: these listeners will only be added once (even if the `precache()`\n    // method is called multiple times) because event listeners are implemented\n    // as a set, where each listener must be unique.\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('install', installListener);\n    self.addEventListener('activate', activateListener);\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/precacheAndRoute.js\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n  precache(entries);\n  addRoute(options);\n}\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/index.js\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Most consumers of this module will want to use the\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}\n * method to add assets to the Cache and respond to network requests with these\n * cached assets.\n *\n * If you require finer grained control, you can use the\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to determine when performed.\n *\n * @module workbox-precaching\n */\n\n// CONCATENATED MODULE: ./node_modules/workbox-precaching/index.mjs\n\n// CONCATENATED MODULE: ./src/service-worker.js\nprecacheAndRoute(self.__WB_MANIFEST);// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener(\"message\",event=>{console.log(\"FFFFFFFF: service worker message\",event);if(event.data&&event.data.type===\"SKIP_WAITING\"){self.skipWaiting();}});// Any other custom service worker logic can go here.\nself.addEventListener(\"activate\",function(event){console.log(\"FFFFFFFF: service worker activated\");});self.addEventListener(\"push\",async function(event){console.log(\"FFFFFFF notifications will be displayed here\");const message=await event.data.json();let{title,body,icon,data}=message;console.log({message});const channel=new BroadcastChannel(\"notification--exinitic--messages\");channel.postMessage(message);event.waitUntil(self.registration.showNotification(title,{body,icon,subtitle:\"test subtitle\",\"click_action\":\"localhost:3000/dashboard\",\"tag\":\"testing tag\",data// data: {\n//   url: \"http://localhost:3000/dashboard\"\n// }\n}));});self.addEventListener(\"notificationclose\",function(e){var notification=e.notification;var data=notification.data||{};var primaryKey=data.primaryKey;console.log(\"Closed notification: \"+primaryKey);});self.addEventListener(\"notificationclick\",function(e){e.preventDefault();var notification=e.notification;var data=notification.data||{};var primaryKey=data.primaryKey;var action=e.action;console.log(\"Clicked notification: \"+JSON.stringify(notification));console.log(\"Clicked notification: \"+JSON.stringify(e));console.log(\"Clicked notification: \"+JSON.stringify(data));console.log(\"Clicked notification: \"+primaryKey);e.waitUntil(// clients.openWindow(data.cpClickUrl)\n);if(action===\"close\"){console.log(\"Notification clicked and closed\",primaryKey);notification.close();}else{console.log(\"Notification actioned\",primaryKey);notification.close();}});\n\n/***/ })\n/******/ ]);","inputSourceMap":{"version":3,"sources":["webpack/bootstrap","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/_version.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_version.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/precachePlugins.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/addPlugins.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/cacheNames.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/getFriendlyURL.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/logger.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/models/messages/messages.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/models/messages/messageGenerator.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/WorkboxError.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/assert.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/models/quotaErrorCallbacks.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/utils/pluginUtils.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/cacheWrapper.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/fetchWrapper.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-core/copyResponse.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/createCacheKey.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/printCleanupDetails.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/printInstallDetails.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/PrecacheController.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/generateURLVariations.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/getCacheKeyForURL.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/addFetchListener.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/addRoute.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/cleanupOutdatedCaches.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/createHandler.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/createHandlerBoundToURL.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/getCacheKeyForURL.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/matchPrecache.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/precache.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/precacheAndRoute.js","/home/ubuntu/king/portal/client-portal-starter/node_modules/workbox-precaching/index.js","/home/ubuntu/king/portal/client-portal-starter/src/service-worker.js"],"names":["self","_","e","plugins","precachePlugins","get","add","newPlugins","push","addPlugins","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","value","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","details","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","getFriendlyURL","url","urlObj","URL","String","location","href","replace","RegExp","concat","origin","logger","process","messages","_ref","paramName","validValueDescription","Error","JSON","stringify","_ref2","moduleName","className","funcName","_ref3","expectedType","_ref4","expectedClass","isReturnValueProblem","name","_ref5","expectedMethod","_ref6","entry","_ref7","firstEntry","secondEntry","_entryId","_ref8","thrownError","message","_ref9","cacheNameId","_ref0","method","unregister-route-route-not-registered","_ref1","_ref10","_ref11","methodName","_ref12","_ref13","_ref14","_ref15","_ref16","channel-name-required","invalid-responses-are-same-args","expire-custom-caches-only","_ref17","normalizedRangeHeader","_ref18","_ref19","no-range-header","_ref20","size","start","end","_ref21","_ref22","_ref23","error","_ref24","status","_ref25","_ref26","_ref27","fallback","code","msg","_len","arguments","args","Array","_key","generatorFunction","undefined","messageGenerator","WorkboxError","constructor","errorCode","isArray","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","pluginUtils","callbackName","plugin","_getEffectiveRequest","request","mode","cacheKeyWillBeUsedPlugins","effectiveRequest","call","Request","_isResponseSafeToCache","response","event","responseToCache","pluginsUsed","pluginMethod","matchWrapper","matchOptions","cache","caches","open","cachedResponse","match","putWrapper","updatePlugins","oldResponse","put","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","err","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","supportStatus","canConstructResponseFromBodyStream","testResponse","Response","body","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","set","logGroup","groupTitle","deletedURLs","groupCollapsed","log","groupEnd","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_cacheName","_urlsToCacheKeys","Map","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","cacheMode","has","integrity","warningMessage","console","warn","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","map","precacheRequests","_addURLToCache","Promise","all","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","delete","credentials","cacheWillUpdatePlugin","isValidResponse","cacheWillUpdate","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","handler","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","regExp","test","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","options","urlsToCacheKeys","possibleURL","possibleCacheKey","addFetchListener","addEventListener","precachedURL","responsePromise","then","respondWith","listenerAdded","addRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","waitUntil","cachesDeleted","installListener","catch","activateListener","precacheAndRoute","__WB_MANIFEST","data","skipWaiting","json","title","icon","channel","BroadcastChannel","postMessage","showNotification","subtitle","notification","primaryKey","preventDefault","action","close"],"mappings":"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","file":"x","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.4'] && _();\n}\ncatch (e) { }\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\n/**\n * Adds plugins to precaching.\n *\n * @param {Array<Object>} newPlugins\n *\n * @memberof module:workbox-precaching\n */\nfunction addPlugins(newPlugins) {\n    precachePlugins.add(newPlugins);\n}\nexport { addPlugins };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName;\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandler} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandler} on that instance,\n * instead of using this function.\n *\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandler(fallbackToNetwork = true) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandler(fallbackToNetwork);\n}\nexport { createHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {module:workbox-routing~handlerCallback}\n *\n * @memberof module:workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof module:workbox-precaching\n */\nfunction getCacheKeyForURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.getCacheKeyForURL(url);\n}\nexport { getCacheKeyForURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof module:workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addPlugins } from './addPlugins.js';\nimport { addRoute } from './addRoute.js';\nimport { cleanupOutdatedCaches } from './cleanupOutdatedCaches.js';\nimport { createHandler } from './createHandler.js';\nimport { createHandlerBoundToURL } from './createHandlerBoundToURL.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport { matchPrecache } from './matchPrecache.js';\nimport { precache } from './precache.js';\nimport { precacheAndRoute } from './precacheAndRoute.js';\nimport { PrecacheController } from './PrecacheController.js';\nimport './_version.js';\n/**\n * Most consumers of this module will want to use the\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}\n * method to add assets to the Cache and respond to network requests with these\n * cached assets.\n *\n * If you require finer grained control, you can use the\n * [PrecacheController]{@link module:workbox-precaching.PrecacheController}\n * to determine when performed.\n *\n * @module workbox-precaching\n */\nexport { addPlugins, addRoute, cleanupOutdatedCaches, createHandler, createHandlerBoundToURL, getCacheKeyForURL, matchPrecache, precache, precacheAndRoute, PrecacheController, };\n","\nimport { precacheAndRoute } from \"workbox-precaching\";\n\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener(\"message\", (event) => {\n  console.log(\"FFFFFFFF: service worker message\", event);\n  if (event.data && event.data.type === \"SKIP_WAITING\") {\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here.\n\nself.addEventListener(\"activate\", function (event) {\n  console.log(\"FFFFFFFF: service worker activated\");\n});\n\nself.addEventListener(\"push\", async function (event) {\n  console.log(\"FFFFFFF notifications will be displayed here\");\n  const message = await event.data.json();\n  let { title, body, icon, data } = message;\n  console.log({ message });\n  const channel = new BroadcastChannel(\"notification--exinitic--messages\");\n  channel.postMessage(message);\n  event.waitUntil(\n    self.registration.showNotification(title, {\n      body,\n      icon,\n      subtitle: \"test subtitle\",\n      \"click_action\": \"localhost:3000/dashboard\",\n      \"tag\": \"testing tag\",\n      data,\n      // data: {\n      //   url: \"http://localhost:3000/dashboard\"\n      // }\n    })\n  );\n});\n\nself.addEventListener(\"notificationclose\", function (e) {\n  var notification = e.notification;\n  var data = notification.data || {};\n  var primaryKey = data.primaryKey;\n  console.log(\"Closed notification: \" + primaryKey);\n});\n\nself.addEventListener(\"notificationclick\", function (e) {\n  e.preventDefault();\n  var notification = e.notification;\n  var data = notification.data || {};\n  var primaryKey = data.primaryKey;\n  var action = e.action;\n  console.log(\"Clicked notification: \" + JSON.stringify(notification));\n  console.log(\"Clicked notification: \" + JSON.stringify(e));\n  console.log(\"Clicked notification: \" + JSON.stringify(data));\n  console.log(\"Clicked notification: \" + primaryKey);\n  e.waitUntil(\n    // clients.openWindow(data.cpClickUrl)\n  );\n  if (action === \"close\") {\n    console.log(\"Notification clicked and closed\", primaryKey);\n    notification.close();\n  }\n  else {\n    console.log(\"Notification actioned\", primaryKey);\n    notification.close();\n  }\n});"]}}