export declare type IOHLCV = {
    time: number;
    open: number;
    high: number;
    low: number;
    close: number;
    volume: number;
};
export declare type OHLCV = [number, number, number, number, number, number];
export declare type TradeTick = {
    price: number;
    quantity: number;
    time: number;
};
export declare enum OHLCVField {
    TIME = 0,
    OPEN = 1,
    HIGH = 2,
    LOW = 3,
    CLOSE = 4,
    VOLUME = 5
}
export declare type Trade = TradeTick;
export declare const batchCandleArray: (candledata: OHLCV[], baseFrame?: number, newFrame?: number, includeOpenCandle?: boolean) => OHLCV[];
export declare const batchCandleJSON: (candledata: IOHLCV[], baseFrame?: number, newFrame?: number) => IOHLCV[];
export declare const batchTicksToCandle: (tradedata: TradeTick[], interval?: number, includeOpenCandle?: boolean, filterFn?: ((trade: TradeTick) => boolean) | undefined) => IOHLCV[];
export declare const ticksToTickChart: (tradedata: TradeTick[], tickSize?: number) => IOHLCV[];
declare const _default: {
    array: (candledata: OHLCV[], baseFrame?: number, newFrame?: number, includeOpenCandle?: boolean) => OHLCV[];
    json: (candledata: IOHLCV[], baseFrame?: number, newFrame?: number) => IOHLCV[];
    trade_to_candle: (tradedata: TradeTick[], interval?: number, includeOpenCandle?: boolean, filterFn?: ((trade: TradeTick) => boolean) | undefined) => IOHLCV[];
    tick_chart: (tradedata: TradeTick[], tickSize?: number) => IOHLCV[];
};
export default _default;
